{"version":3,"sources":["./src/app/views/smb/base-price/edit-base-price-addition/edit-base-price-addition.component.ts","./src/app/views/smb/base-price/edit-base-price-addition/edit-base-price-addition.component.html","./src/app/views/smb/grade-list/grade-list.component.ts","./src/app/views/smb/grade-list/grade-list.component.html","./src/app/views/smb/smb-modal/warn-popup/warn-popup.component.ts","./src/app/views/smb/smb-modal/warn-popup/warn-popup.component.html","./src/app/views/smb/extra-certificate-list/extra-certificate-list.component.ts","./src/app/views/smb/extra-certificate-list/extra-certificate-list.component.html","./src/app/views/smb/incoterm-exceptions/incoterm-exceptions-edit/incoterm-exceptions-edit.component.ts","./src/app/views/smb/incoterm-exceptions/incoterm-exceptions-edit/incoterm-exceptions-edit.component.html","./src/app/views/smb/smbdis-early-ptm/smbdis-early-ptm.component.ts","./src/app/views/smb/smbdis-early-ptm/smbdis-early-ptm.component.html","./src/app/views/smb/length-production-list/length-production-list.component.ts","./src/app/views/smb/length-production-list/length-production-list.component.html","./src/app/views/smb/length-logistic-list/length-logistic-list.component.ts","./src/app/views/smb/length-logistic-list/length-logistic-list.component.html","./src/app/views/smb/smb-modal/history-modal/history-modal.component.ts","./src/app/views/smb/smb-modal/history-modal/history-modal.component.html","./src/app/views/smb/smb.module.ts","./src/app/views/smb/smbext-piece-count/smbext-piece-count.component.ts","./src/app/views/smb/smbext-piece-count/smbext-piece-count.component.html","./src/app/views/smb/smbext-min-ton-lean-s/smbext-min-ton-lean-s.component.ts","./src/app/views/smb/smbext-min-ton-lean-s/smbext-min-ton-lean-s.component.html","./src/app/views/smb/smb-modal/add-popup/add-popup.component.ts","./src/app/views/smb/smb-modal/add-popup/add-popup.component.html","./src/app/views/smb/base-price/bulk-upload-base-price-addition/bulk-upload-base-price-addition.component.ts","./src/app/views/smb/base-price/bulk-upload-base-price-addition/bulk-upload-base-price-addition.component.html","./src/app/views/smb/profile-lberia-italy-list/profile-lberia-italy-list.component.ts","./src/app/views/smb/profile-lberia-italy-list/profile-lberia-italy-list.component.html","./src/app/views/smb/base-price/base-price-addition-list/base-price-addition-list.component.ts","./src/app/views/smb/base-price/base-price-addition-list/base-price-addition-list.component.html","./src/app/sample.ts","./src/app/views/smb/incoterm-exceptions/incoterm-exceptions-upload/incoterm-exceptions-upload.component.ts","./src/app/views/smb/incoterm-exceptions/incoterm-exceptions-upload/incoterm-exceptions-upload.component.html","./src/app/views/smb/profile-list/profile-list.component.ts","./src/app/views/smb/profile-list/profile-list.component.html","./src/app/views/smb/freight-parity-list/freight-parity-list.component.ts","./src/app/views/smb/freight-parity-list/freight-parity-list.component.html","./src/app/views/smb/smb-modal/edit-popup/edit-popup.component.ts","./src/app/views/smb/smb-modal/edit-popup/edit-popup.component.html","./src/app/views/smb/smb-modal/record-approval/record-approval.component.ts","./src/app/views/smb/smb-modal/record-approval/record-approval.component.html","./src/app/views/smb/delivery-mill-list/delivery-mill-list.component.ts","./src/app/views/smb/delivery-mill-list/delivery-mill-list.component.html","./src/app/views/smb/smb-modal/upload-validate-modal/upload-validate-modal.component.ts","./src/app/views/smb/smb-modal/upload-validate-modal/upload-validate-modal.component.html","./src/app/views/smb/smb-routing.module.ts","./src/app/views/smb/transport-mode-list/transport-mode-list.component.ts","./src/app/views/smb/transport-mode-list/transport-mode-list.component.html","./src/app/views/smb/incoterm-exceptions/incoterm-exceptions-list/incoterm-exceptions-list.component.ts","./src/app/views/smb/incoterm-exceptions/incoterm-exceptions-list/incoterm-exceptions-list.component.html","./src/app/views/smb/smb.component.ts","./src/app/views/smb/smb.component.html"],"names":[],"mappings":"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","file":"views-smb-smb-module.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-base-price-addition',\r\n  templateUrl: './edit-base-price-addition.component.html',\r\n  styleUrls: ['./edit-base-price-addition.component.scss']\r\n})\r\nexport class EditBasePriceAdditionComponent implements OnInit {\r\n  loadingRouteConfig: boolean = false\r\n  editBasePriceAddition: any = FormGroup\r\n  url: any;\r\n  apiStringURL: any;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EditBasePriceAdditionComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private fb: FormBuilder,\r\n    private router: Router\r\n  ) {\r\n   \r\n      if (this.data.type != 'edit-min-bar') {\r\n        this.apiStringURL = this.apiString.smb\r\n      } else {\r\n        this.apiStringURL = this.apiString.smb_mini_bar\r\n      }\r\n   \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.url,this.data)\r\n    if (this.data.type != 'edit-min-bar') {\r\n      this.editBasePriceAddition = this.fb.group({\r\n        Amount: [''],\r\n        BusinessCode: [''],\r\n        Currency: [''],\r\n        Document_Item_Currency: [''],\r\n        Market_Country: [''],\r\n        Product_Division: [''],\r\n        Product_Level_02: [''],\r\n        id_value: [''],\r\n        sequence_id:[]\r\n\r\n      })\r\n    } else {\r\n      this.editBasePriceAddition = this.fb.group({\r\n        Amount: [''],\r\n        BusinessCode: [''],\r\n        Currency: [''],\r\n        Document_Item_Currency: [''],\r\n        Market_Country: [''],\r\n        Customer_Group: [''],\r\n        Market_Customer: [''],\r\n        Beam_Category: [''],\r\n        id_value: [''],\r\n        sequence_id:[]\r\n      })\r\n    }\r\n    this.patchValue()\r\n  }\r\n  patchValue() {\r\n    console.log(this.data)\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.get_request_header_Param(this.apiStringURL.get, { id: this.data.id }).subscribe((result) => {\r\n      console.log(result)\r\n      this.loadingRouteConfig = false\r\n      let resultData: any = result\r\n      this.editBasePriceAddition.patchValue({\r\n        Amount: resultData.record[0].Amount,\r\n        BusinessCode: resultData.record[0].BusinessCode,\r\n        Currency: resultData.record[0].Currency,\r\n        Document_Item_Currency: resultData.record[0].Document_Item_Currency,\r\n        Market_Country: resultData.record[0].Market_Country,\r\n        id_value: this.data.id,\r\n        sequence_id:resultData.record[0].sequence_id\r\n\r\n      })\r\n      if (this.data.type != 'edit-min-bar') {\r\n        this.editBasePriceAddition.patchValue({\r\n          Product_Division: resultData.record[0].Product_Division,\r\n          Product_Level_02: resultData.record[0].Product_Level_02,\r\n        })\r\n      } else {\r\n        this.editBasePriceAddition.patchValue({\r\n          Customer_Group: resultData.record[0].Customer_Group,\r\n          Market_Customer: resultData.record[0].Market_Customer,\r\n          Beam_Category: resultData.record[0].Beam_Category,\r\n        })\r\n      }\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching bace price addition')\r\n      this.closeModel()\r\n    })\r\n\r\n  }\r\n  closeModel() {\r\n    this.dialogRef.close()\r\n\r\n  }\r\n  editRecord() {\r\n    console.group(this.editBasePriceAddition.value)\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.post_request_header(this.apiStringURL.update, this.editBasePriceAddition.value).subscribe(result => {\r\n      console.log(result)\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('success', ' Record successfully updated')\r\n      this.closeModel()\r\n    }, error => {\r\n      console.log(error)\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while updating bace price addition')\r\n      // this.closeModel()\r\n    })\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div class=\"pd-card\">\r\n    <form [formGroup]=\"editBasePriceAddition\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12\" >\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Sequence ID</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"sequence_id\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Business Code</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"BusinessCode\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Market Country</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Market_Country\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Currency</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Currency\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Amount</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Amount\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Document Item Currency</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Document_Item_Currency\">\r\n                </mat-form-field>\r\n            </div>\r\n            <ng-template *ngIf=\"data.type != 'edit-min-bar'; else mini_bar\">\r\n                <div class=\"col-12\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Division</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Division\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Level 02</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Level_02\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template #mini_bar>\r\n                <div class=\"col-12\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Customer Group</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Customer_Group\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Market Customer</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Market_Customer\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Beam Category</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Beam_Category\">\r\n                    </mat-form-field>\r\n                </div>\r\n               \r\n            </ng-template>\r\n\r\n\r\n        </div>\r\n    </form>\r\n    <div class=\" text-right\">\r\n        <button mat-stroked-button class=\"mr-10\" (click)=\"closeModel()\">\r\n            Close\r\n        </button>\r\n        <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial (click)=\"editRecord()\">\r\n            Update\r\n        </button>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { filter } from 'rxjs/operators';\r\nimport { gradeData } from '../smb-interface.service';\r\nimport { EditPopupComponent } from '../smb-modal/edit-popup/edit-popup.component';\r\nimport { WarnPopupComponent } from '../smb-modal/warn-popup/warn-popup.component';\r\nimport { AddPopupComponent } from '../smb-modal/add-popup/add-popup.component';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n@Component({\r\n  selector: 'app-grade-list',\r\n  templateUrl: './grade-list.component.html',\r\n  styleUrls: ['./grade-list.component.scss']\r\n})\r\nexport class GradeListComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  filterValue: any = '';\r\n  selection = new SelectionModel<gradeData>(true, []);\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.grade\r\n        this.displayedColumns = [\r\n          'select',\r\n          'sequence_id',\r\n          'BusinessCode',\r\n          'Grade_Category',\r\n          'Market_Country',\r\n          'Product_Division',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          'action',\r\n        ]\r\n      } else {\r\n        this.apiStringURL = this.apiString.grade_mini_bar\r\n        this.displayedColumns = [\r\n          'select',\r\n          'sequence_id',\r\n          'BusinessCode',\r\n          'Customer_Group',\r\n          'Market_Customer',\r\n          'Market_Country',\r\n          'Grade_Category',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          'action'\r\n        ]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getGrade()\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getGrade() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.apiMethod.get_request_header(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<gradeData>(resultData.data)\r\n      setTimeout(() => {\r\n        if (this.filterValue) {\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n        this.dataSource.sort = this.sort;\r\n\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getGrade()\r\n  }\r\n  //filter \r\n  applyFilter(filterValue: any) {\r\n    console.log(filterValue.trim().toLowerCase())\r\n    this.filterValue = filterValue\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getGrade()\r\n  }\r\n  actionClicked(rowData: any, viewOn: any) {\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"grade\",\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'sequence_id' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getGrade()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            fileName: \"grade\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getGrade()\r\n      })\r\n    }\r\n    if (viewOn === 'delete' || viewOn === 'delete-all') {\r\n      let deleteID: any = []\r\n      if (viewOn === 'delete-all' && this.selection.selected.length === 0) {\r\n        return this.apiMethod.popupMessage('error', 'Select At-least on record')\r\n      }\r\n      if (this.selection.selected.length > 0) {\r\n        this.selection.selected.forEach((x: any) => {\r\n          deleteID.push(x.id)\r\n        })\r\n      } else {\r\n        deleteID = rowData\r\n      }\r\n      console.log(deleteID)\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: deleteID,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        if (result != undefined) {\r\n          this.getGrade()\r\n          this.selection.clear()\r\n        }\r\n      })\r\n    }\r\n  }\r\n  uploadByXlFile() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/grade/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/grade/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadInXlFile() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected(): any {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource?.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource?.data);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: gradeData): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.sequence_id + 1}`;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked('','add')\">\r\n                    <i class=\"fa fa-plus-circle\"></i> Grade\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadByXlFile()\">\r\n                    <i class=\"fa fa-upload\"></i> Grade\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"downloadInXlFile()\">\r\n                    <i class=\"fa fa-download\"></i> Grade\r\n                 </button>\r\n                 <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked(selection,'delete-all')\">\r\n                    <i class=\"fa fa-trash\"></i> Grade\r\n                 </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter('search')\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter('search')\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"text-center\">\r\n                <div class=\"my_offer_table_container\">\r\n                    <div class=\"text-center \">\r\n                        <div class=\"table-outer-container offer_table_container position-relative \">\r\n                            <div class=\"table-inner-container  hc example-container mat-elevation-z8\">\r\n                                <table mat-table [dataSource]=\"dataSource\">\r\n\r\n                                    <ng-container matColumnDef=\"select\">\r\n                                        <th mat-header-cell *matHeaderCellDef>\r\n                                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                                [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                                [aria-label]=\"checkboxLabel()\">\r\n                                            </mat-checkbox>\r\n                                        </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                                (change)=\"$event ? selection.toggle(row) : null\"\r\n                                                [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\r\n                                            </mat-checkbox>\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"sequence_id\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Sequence ID </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row?.sequence_id}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"BusinessCode\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Business Code </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <div *ngIf=\"url[3]!='mini-bar'; else mini_bar\">\r\n\r\n                                        <ng-container matColumnDef=\"Product_Division\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Product Division\r\n                                            </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                                        </ng-container>\r\n                                        \r\n                                    </div>\r\n\r\n                                    <ng-template #mini_bar>\r\n\r\n                                        <ng-container matColumnDef=\"Customer_Group\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Customer Group </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef=\"Market_Customer\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Market Customer\r\n                                            </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                                        </ng-container>\r\n\r\n                                    </ng-template>\r\n\r\n                                    <ng-container matColumnDef=\"Grade_Category\">\r\n                                        <th mat-header-cell *matHeaderCellDef>Grade Category </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Grade_Category}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Market_Country\">\r\n                                        <th mat-header-cell *matHeaderCellDef>Market Country </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Doc Item Currency </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Amount\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Currency\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Currency </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"action\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'edit')\">edit</mat-icon>\r\n                                           <!-- at <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'delete')\">delete\r\n                                            </m-icon> -->\r\n\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns ;sticky: true\"></tr>\r\n                                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                    <tr class=\"mat-row\" *matNoDataRow>\r\n                                        <td class=\"mat-cell\" colspan=\"4\">No Record found \"{{searchValue}}\"\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </div>\r\n                            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\"\r\n                                [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                                (page)=\"pageEvent = pageChangeCall($event)\">\r\n                            </mat-paginator>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-warn-popup',\r\n  templateUrl: './warn-popup.component.html',\r\n  styleUrls: ['./warn-popup.component.scss']\r\n})\r\nexport class WarnPopupComponent implements OnInit {\r\n  loadingRouteConfig: boolean = false\r\n  url: any;\r\n  apiStringURL: any;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<WarnPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private apiMethod: ApiService,\r\n\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data)\r\n  }\r\n  closeModel() {\r\n    this.dialogRef.close()\r\n  }\r\n  deleteRecord() {\r\n    this.loadingRouteConfig = true\r\n    console.log(this.data, this.data.deleteURL)\r\n    this.apiMethod.post_request_header(this.data.deleteURL, { id: this.data.id }).subscribe((result) => {\r\n      this.loadingRouteConfig = false\r\n      this.dialogRef.close()\r\n      this.apiMethod.popupMessage('success', 'Reord Sent for Approval')\r\n    }, error => {\r\n      this.dialogRef.close()\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while deleting the record')\r\n    })\r\n\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div class=\"pd-card\">\r\n    <p class=\"text-center\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i></p>\r\n    <h1>Are you sure?</h1>\r\n    <p>Do you really want to delete these records? This process cannot be undo.</p>\r\n    <div class=\" text-right\">\r\n        <button mat-stroked-button class=\"mr-10\" (click)=\"closeModel()\">\r\n            Close\r\n        </button>\r\n        <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial (click)=\"deleteRecord()\">\r\n            OK\r\n        </button>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { certificateData } from '../smb-interface.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { WarnPopupComponent } from '../smb-modal/warn-popup/warn-popup.component';\r\nimport { filter } from 'rxjs/operators';\r\nimport { EditPopupComponent } from '../smb-modal/edit-popup/edit-popup.component';\r\nimport { AddPopupComponent } from '../smb-modal/add-popup/add-popup.component';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n@Component({\r\n  selector: 'app-extra-certificate-list',\r\n  templateUrl: './extra-certificate-list.component.html',\r\n  styleUrls: ['./extra-certificate-list.component.scss']\r\n})\r\nexport class ExtraCertificateListComponent implements OnInit {\r\n  data: any = [\r\n    {\r\n      'BusinessCode': 'test-1',\r\n      'Certificate': 'test-2',\r\n      'Grade_Category': 'test',\r\n      'Market_Country': 'test-3',\r\n      'Document_Item_Currency': 'test-4',\r\n      'Delivering_Mill': 'test-5',\r\n      'Amount': 'test-6',\r\n      'Currency': 'test-7',\r\n      \"id\": 3\r\n    }\r\n  ]\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  selection = new SelectionModel<certificateData>(true, []);\r\n\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  filterValue: any = '';\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.certificate\r\n        this.displayedColumns = ['select', 'sequence_id', 'BusinessCode', 'Certificate', 'Grade_Category', 'Market_Country', 'Delivering_Mill', 'Document_Item_Currency', 'Amount', 'Currency', 'action']\r\n      } else {\r\n        this.apiStringURL = this.apiString.certificate_mini_bar\r\n\r\n        this.displayedColumns = ['select', 'sequence_id', 'BusinessCode', 'Customer_Group','Market_Customer', 'Market_Country', 'Certificate', 'Grade_Category', 'Document_Item_Currency', 'Amount', 'Currency', 'action']\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCertificate()\r\n    // this.dataSource = new MatTableDataSource<certificateData>(this.data)\r\n\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getCertificate() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n\r\n    // this.dataSource = new MatTableDataSource<certificateData>(this.data)\r\n    this.apiMethod.get_request_header(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<certificateData>(resultData.data)\r\n      setTimeout(() => {\r\n        if (this.filterValue) {\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n        this.dataSource.sort = this.sort;\r\n\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getCertificate()\r\n  }\r\n  //filter \r\n  applyFilter(filterValue: any) {\r\n    console.log(filterValue.trim().toLowerCase())\r\n    this.filterValue = filterValue\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getCertificate()\r\n  }\r\n  actionClicked(rowData: any, viewOn: any) {\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          maxWidth: '40vw',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"certificate\",\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'sequence_id' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getCertificate()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            fileName: \"certificate\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getCertificate()\r\n      })\r\n    }\r\n\r\n    if (viewOn === 'delete' || viewOn === 'delete-all') {\r\n      let deleteID: any = []\r\n      if (viewOn === 'delete-all' && this.selection.selected.length === 0) {\r\n        return this.apiMethod.popupMessage('error', 'Select At-least on record')\r\n      }\r\n      if (this.selection.selected.length > 0) {\r\n        this.selection.selected.forEach((x: any) => {\r\n          deleteID.push(x.id)\r\n        })\r\n      } else {\r\n        deleteID = rowData\r\n      }\r\n      console.log(deleteID)\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: deleteID,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        if (result != undefined) {\r\n          this.getCertificate()\r\n          this.selection.clear()\r\n        }\r\n      })\r\n    }\r\n  }\r\n  uploadByXlFile() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/extra-certificate/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/extra-certificate/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadInXlFile() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected(): any {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource?.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource?.data);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: certificateData): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.sequence_id + 1}`;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked('','add')\">\r\n                    <i class=\"fa fa-plus-circle\"></i> Certificate\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadByXlFile()\">\r\n                    <i class=\"fa fa-upload\"></i> Certificate\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"downloadInXlFile()\">\r\n                    <i class=\"fa fa-download\"></i> Certificate\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"actionClicked(selection,'delete-all')\" >\r\n                    <i class=\"fa fa-trash\"></i> Certificate\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter('search')\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter('search')\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"text-center\">\r\n                <div class=\"my_offer_table_container\">\r\n                    <div class=\"text-center \">\r\n                        <div class=\"table-outer-container offer_table_container position-relative \">\r\n                            <div class=\"table-inner-container  hc example-container mat-elevation-z8\">\r\n                                <table mat-table [dataSource]=\"dataSource\">\r\n                                    \r\n                                    <ng-container matColumnDef=\"select\">\r\n                                        <th mat-header-cell *matHeaderCellDef>\r\n                                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                                [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                                [aria-label]=\"checkboxLabel()\">\r\n                                            </mat-checkbox>\r\n                                        </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                                (change)=\"$event ? selection.toggle(row) : null\"\r\n                                                [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\r\n                                            </mat-checkbox>\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"sequence_id\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Sequence ID </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row?.sequence_id}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"BusinessCode\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Business Code </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Certificate\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Certificate </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Certificate}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <div *ngIf=\"url[3]!='mini-bar'; else mini_bar\">\r\n\r\n                                        <ng-container matColumnDef=\"Delivering_Mill\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Delivering Mill </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                                        </ng-container>\r\n\r\n                                    </div>\r\n\r\n                                    <ng-template #mini_bar>\r\n\r\n\r\n                                        <ng-container matColumnDef=\"Customer_Group\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Customer Group </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef=\"Market_Customer\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Market Customer\r\n                                            </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                                        </ng-container>\r\n\r\n                                    </ng-template>\r\n\r\n                                    <ng-container matColumnDef=\"Grade_Category\">\r\n                                        <th mat-header-cell *matHeaderCellDef>Grade Category </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Grade_Category}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Market_Country\">\r\n                                        <th mat-header-cell *matHeaderCellDef>Market Country </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Doc Item Currency </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Amount\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Currency\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Currency </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"action\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'edit')\">edit</mat-icon>\r\n                                            <!-- <mat-icon class=\"mr-10\" (click)=\"actionClicked([row.id],'delete')\">delete\r\n                                            </mat-icon> -->\r\n\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns ;sticky: true\"></tr>\r\n                                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                                    <tr class=\"mat-row\" *matNoDataRow>\r\n                                        <td class=\"mat-cell\" colspan=\"4\">No Record Found \"{{searchValue}}\"\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </div>\r\n                            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\"\r\n                                [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                                (page)=\"pageEvent = pageChangeCall($event)\">\r\n                            </mat-paginator>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-incoterm-exceptions-edit',\r\n  templateUrl: './incoterm-exceptions-edit.component.html',\r\n  styleUrls: ['./incoterm-exceptions-edit.component.scss']\r\n})\r\nexport class IncotermExceptionsEditComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  editIncotermExceptionsClick: any = FormGroup\r\n  url: any;\r\n  apiStringURL: any;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<IncotermExceptionsEditComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private fb: FormBuilder,\r\n    private router: Router\r\n  ) {\r\n\r\n    if (this.data.type != 'edit-min-bar') {\r\n      this.apiStringURL = this.apiString.incoterm_exceptions\r\n    } else {\r\n      this.apiStringURL = this.apiString.incoterm_exceptions_mini_bar\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.url, this.data)\r\n    if (this.data.type != 'edit-min-bar') {\r\n      this.editIncotermExceptionsClick = this.fb.group({\r\n        'Market_Country': [''],\r\n        'Product_Division': [''],\r\n        'Incoterm1': [''],\r\n        'Customer_Group': [''],\r\n        'Beam_Category': [''],\r\n        'Delivering_Mill': [''],\r\n        'Document_Item_Currency': [''],\r\n        'Amount': [''],\r\n        'Currency': [''],\r\n        'id': [''],\r\n        'sequence_id':['']\r\n      })\r\n    } else {\r\n      this.editIncotermExceptionsClick = this.fb.group({\r\n        'Market_Country': [''],\r\n        'Product_Division': [''],\r\n        'Incoterm1': [''],\r\n        'Customer_Group': [''],\r\n        'Beam_Category': [''],\r\n        'Delivering_Mill': [''],\r\n        'Document_Item_Currency': [''],\r\n        'Amount': [''],\r\n        'Currency': [''],\r\n        'id': [''],\r\n        'sequence_id':['']\r\n      })\r\n    }\r\n    this.patchValue()\r\n  }\r\n  patchValue() {\r\n    console.log(this.data)\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.get_request_header_Param(this.apiStringURL.get, { id: this.data.content.id }).subscribe((result) => {\r\n      console.log(result)\r\n      this.loadingRouteConfig = false\r\n      let resultData: any = result\r\n      this.editIncotermExceptionsClick.patchValue({\r\n        Market_Country: resultData.record[0].Market_Country,\r\n        Product_Division: resultData.record[0].Product_Division,\r\n        Incoterm1: resultData.record[0].Incoterm1,\r\n        Customer_Group: resultData.record[0].Customer_Group,\r\n        Beam_Category: resultData.record[0].Beam_Category,\r\n        Delivering_Mill: resultData.record[0].Delivering_Mill,\r\n        Document_Item_Currency: resultData.record[0].Document_Item_Currency,\r\n        Amount: resultData.record[0].Amount,\r\n        Currency: resultData.record[0].Currency,\r\n        id_value: this.data.content.id,\r\n        sequence_id:resultData.record[0].sequence_id\r\n\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching bace price addition')\r\n      this.closeModel()\r\n    })\r\n\r\n  }\r\n  closeModel() {\r\n    this.dialogRef.close()\r\n\r\n  }\r\n  editRecord() {\r\n    console.group(this.editIncotermExceptionsClick.value)\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.post_request_header(this.apiStringURL.update+'?id='+this.data.content.id, this.editIncotermExceptionsClick.value).subscribe(result => {\r\n      console.log(result)\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('success', ' Record successfully updated')\r\n      this.closeModel()\r\n    }, error => {\r\n      console.log(error)\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while updating bace price addition')\r\n      // this.closeModel()\r\n    })\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div class=\"pd-card\">\r\n    <form [formGroup]=\"editIncotermExceptionsClick\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Sequence ID</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"sequence_id\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Incoterm1</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Incoterm1\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Market Country</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Market_Country\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Currency</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Currency\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Amount</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Amount\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Document Item Currency</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Document_Item_Currency\">\r\n                </mat-form-field>\r\n            </div>\r\n                <div class=\"col-12\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Division</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Division\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Delivering Mill</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Delivering_Mill\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Customer Group</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Customer_Group\">\r\n                    </mat-form-field>\r\n                </div>\r\n               \r\n                <div class=\"col-12\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Beam Category</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Beam_Category\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n        </div>\r\n    </form>\r\n    <div class=\" text-right\">\r\n        <button mat-stroked-button class=\"mr-10\" (click)=\"closeModel()\">\r\n            Close\r\n        </button>\r\n        <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial (click)=\"editRecord()\">\r\n            Update\r\n        </button>\r\n    </div>\r\n</div>","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { filter } from 'rxjs/operators';\r\nimport { disearlyptmData } from '../smb-interface.service';\r\nimport { EditPopupComponent } from '../smb-modal/edit-popup/edit-popup.component';\r\nimport { WarnPopupComponent } from '../smb-modal/warn-popup/warn-popup.component';\r\nimport { AddPopupComponent } from '../smb-modal/add-popup/add-popup.component';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n@Component({\r\n  selector: 'app-smbdis-early-ptm',\r\n  templateUrl: './smbdis-early-ptm.component.html',\r\n  styleUrls: ['./smbdis-early-ptm.component.scss']\r\n})\r\nexport class SMBDisEarlyPtmComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  searchValue: any\r\n  displayedColumns: string[] = [];\r\n  table_name:any;\r\n  dataSource: any;\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  filterValue: any = '';\r\n  testing:any = \"test\"\r\n  selection = new SelectionModel<disearlyptmData>(true, []);\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(\"myurl = \",router.url)\r\n    if(this.url[3]!='mini-bar'){\r\n      this.apiStringURL = this.apiString.generic\r\n      this.table_name = \"SMBDisEarlyPmt\"\r\n      this.displayedColumns=[\r\n        'select',\r\n        'sequence_id',\r\n        'BusinessCode',\r\n        'Country',\r\n        'Value',\r\n        'Unit',\r\n        'action'\r\n      ]\r\n    }else{\r\n      this.apiStringURL = this.apiString.generic\r\n      this.table_name = \"SMBDisEarlyPmt_Minibar\"\r\n      this.displayedColumns = [\r\n        'select',\r\n        'sequence_id',\r\n        'BusinessCode',\r\n        'Customer_Group',\r\n        'Customer',\r\n        'Value',\r\n        'Unit',\r\n        'action'\r\n      ]\r\n    }\r\n   });\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.getEarlyPtm()\r\n    \r\n  }\r\n  getEarlyPtm() {   \r\n    // this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.get_request_header(this.apiStringURL.list + \"?table_name=\" + this.table_name + \"&offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<disearlyptmData>(resultData.data)\r\n      setTimeout(() => {\r\n        if (this.filterValue) {\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n        this.dataSource.sort = this.sort;\r\n\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n    console.log(this.dataSource)\r\n  }\r\n\r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getEarlyPtm()\r\n  }\r\n\r\n  applyFilter(filterValue: any) {\r\n    console.log(filterValue.trim().toLowerCase())\r\n    this.filterValue = filterValue\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getEarlyPtm()\r\n  }\r\n  \r\n  actionClicked(rowData: any, viewOn: any) {\r\n    console.log(viewOn)\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] == 'mini-bar' ? 'miniBar' : 'add',\r\n            table_name: this.table_name,\r\n            fileName: \"disearly_pmt\",\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'sequence_id' && x != 'action'\r\n            )\r\n            \r\n          },\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n          console.log('The edit dialog was closed', result);\r\n          this.getEarlyPtm()\r\n        })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id + \"&table_name=\" + this.table_name,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            table_name: this.table_name,\r\n            fileName: \"disearly_pmt\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getEarlyPtm()\r\n      })\r\n    }\r\n    if (viewOn === 'delete' || viewOn === 'delete-all') {\r\n      let deleteID: any = [this.table_name]\r\n      if (viewOn === 'delete-all' && this.selection.selected.length === 0) {\r\n        return this.apiMethod.popupMessage('error', 'Select At-least on record')\r\n      }\r\n      if (this.selection.selected.length > 0) {\r\n        this.selection.selected.forEach((x: any) => {\r\n          deleteID.push(x.id)\r\n        })\r\n      } else {\r\n        deleteID = rowData\r\n      }\r\n      console.log(deleteID)\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: deleteID,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id  + \"&table_name=\" + this.table_name,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            table_name: this.table_name,\r\n            deleteURL: this.apiStringURL.delete\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        if (result != undefined) {\r\n          this.getEarlyPtm()\r\n          this.selection.clear()\r\n        }\r\n      })\r\n    }  \r\n  }\r\n   \r\n  uploadByXlFile() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/dis-earlypmt/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/dis-earlypmt/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n\r\n  downloadInXlFile() {\r\n    window.open(this.apiStringURL.download+ \"?table_name=\" + this.table_name, \"_blank\")\r\n  }\r\n\r\n  isAllSelected(): any {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource?.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  masterToggle() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n    this.selection.select(...this.dataSource?.data);\r\n  }\r\n\r\n  checkboxLabel(row?: disearlyptmData): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.Business_Code + 1}`;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked('','add')\">\r\n                    <i class=\"fa fa-plus-circle\"></i> DisEarly Ptm\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadByXlFile()\">\r\n                    <i class=\"fa fa-upload\"></i> DisEarly Ptm\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"downloadInXlFile()\">\r\n                    <i class=\"fa fa-download\"></i> DisEarly Ptm\r\n                 </button>\r\n                 <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked(selection,'delete-all')\">\r\n                    <i class=\"fa fa-trash\"></i> DisEarly Ptm\r\n                 </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter('search')\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter('search')\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"text-center\">\r\n                <div class=\"my_offer_table_container\">\r\n                    <div class=\"text-center \">\r\n                        <div class=\"table-outer-container offer_table_container position-relative \">\r\n                            <div class=\"table-inner-container  hc example-container mat-elevation-z8\">\r\n                                <table mat-table [dataSource]=\"dataSource\">\r\n\r\n                                    <ng-container matColumnDef=\"select\">\r\n                                        <th mat-header-cell *matHeaderCellDef>\r\n                                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                                [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                                [aria-label]=\"checkboxLabel()\">\r\n                                            </mat-checkbox>\r\n                                        </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                                (change)=\"$event ? selection.toggle(row) : null\"\r\n                                                [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\r\n                                            </mat-checkbox>\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"sequence_id\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Sequence ID </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row?.sequence_id}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"BusinessCode\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Business Code </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                                        </ng-container> \r\n\r\n                                        <div *ngIf=\"url[3]!='mini-bar'; else minibar\">\r\n                                            <ng-container matColumnDef=\"Country\">\r\n                                                <th mat-header-cell *matHeaderCellDef> Country </th>\r\n                                                <td mat-cell *matCellDef=\"let row\"> {{row.Country}} </td>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                         <ng-template #minibar>\r\n                                            <ng-container matColumnDef=\"Customer_Group\">\r\n                                                <th mat-header-cell *matHeaderCellDef> Customer Group\r\n                                                </th>\r\n                                                <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                                            </ng-container>\r\n    \r\n                                            <ng-container matColumnDef=\"Customer\">\r\n                                                <th mat-header-cell *matHeaderCellDef> Customer </th>\r\n                                                <td mat-cell *matCellDef=\"let row\"> {{row.Customer}} </td>\r\n                                            </ng-container>\r\n                                         </ng-template>                                        \r\n\r\n                                        <ng-container matColumnDef=\"Value\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Value</th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Value}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Unit\">\r\n                                            <th mat-header-cell *matHeaderCellDef>Unit</th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> % </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"action\">\r\n                                            <th mat-header-cell *matHeaderCellDef>Action</th>\r\n                                            <td mat-cell *matCellDef=\"let row\">\r\n                                                <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'edit')\">edit</mat-icon>    \r\n                                            </td>\r\n                                        </ng-container>\r\n                                                                 \r\n                                          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                          <tr class=\"mat-row\" *matNoDataRow>\r\n                                            <td class=\"mat-cell\" colspan=\"4\"> No Record found \"{{searchValue}}\" </td>\r\n                                        </tr>\r\n                                          \r\n                                </table>\r\n                            </div>\r\n                            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\"\r\n                                [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                                (page)=\"pageEvent = pageChangeCall($event)\">\r\n                            </mat-paginator>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { lengthProductionData } from '../smb-interface.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { WarnPopupComponent } from '../smb-modal/warn-popup/warn-popup.component';\r\nimport { filter } from 'rxjs/operators';\r\nimport { EditPopupComponent } from '../smb-modal/edit-popup/edit-popup.component';\r\nimport { AddPopupComponent } from '../smb-modal/add-popup/add-popup.component';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n@Component({\r\n  selector: 'app-length-production-list',\r\n  templateUrl: './length-production-list.component.html',\r\n  styleUrls: ['./length-production-list.component.scss']\r\n})\r\nexport class LengthProductionListComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  filterValue: any = '';\r\n  selection = new SelectionModel<lengthProductionData>(true, []);\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.length_production\r\n\r\n        this.displayedColumns = [\r\n          'select',\r\n          'sequence_id',\r\n          'BusinessCode',\r\n          'Market_Country',\r\n          'Delivering_Mill',\r\n          'Length',\r\n          'Length_From',\r\n          'Length_To',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          'action'\r\n        ]\r\n      } else {\r\n        this.apiStringURL = this.apiString.length_production_mini_bar\r\n        this.displayedColumns = [\r\n          'select',\r\n          'sequence_id',\r\n          'BusinessCode',\r\n          'Customer_Group',\r\n          'Market_Customer',\r\n          'Market_Country',\r\n          'Delivering_Mill',\r\n          'Length',\r\n          'Length_From',\r\n          'Length_To',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          'action'\r\n        ]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getLengthProduction()\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getLengthProduction() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.apiMethod.get_request_header(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<lengthProductionData>(resultData.data)\r\n      setTimeout(() => {\r\n        if (this.filterValue) {\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n        this.dataSource.sort = this.sort;\r\n\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getLengthProduction()\r\n  }\r\n  //filter \r\n  applyFilter(filterValue: any) {\r\n    console.log(filterValue.trim().toLowerCase())\r\n    this.filterValue = filterValue\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getLengthProduction()\r\n  }\r\n  actionClicked(rowData: any, viewOn: any) {\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"length_production\",\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'sequence_id' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getLengthProduction()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            fileName: \"length_production\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getLengthProduction()\r\n      })\r\n    }\r\n\r\n    if (viewOn === 'delete' || viewOn === 'delete-all') {\r\n      let deleteID: any = []\r\n      if (viewOn === 'delete-all' && this.selection.selected.length === 0) {\r\n        return this.apiMethod.popupMessage('error', 'Select At-least on record')\r\n      }\r\n      if (this.selection.selected.length > 0) {\r\n        this.selection.selected.forEach((x: any) => {\r\n          deleteID.push(x.id)\r\n        })\r\n      } else {\r\n        deleteID = rowData\r\n      }\r\n      console.log(deleteID)\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: deleteID,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        if (result != undefined) {\r\n          this.getLengthProduction()\r\n          this.selection.clear()\r\n        }\r\n      })\r\n    }\r\n  }\r\n  uploadByXlFile() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/length-production/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/length-production/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadInXlFile() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected(): any {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource?.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource?.data);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: lengthProductionData): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.sequence_id + 1}`;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-9\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked('','add')\">\r\n                    <i class=\"fa fa-plus-circle\"></i> Length Production\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadByXlFile()\">\r\n                    <i class=\"fa fa-upload\"></i>  Length Production\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\"  mat-raised-button (click)=\"downloadInXlFile()\">\r\n                    <i class=\"fa fa-download\"></i> Length Production\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"actionClicked(selection,'delete-all')\">\r\n                    <i class=\"fa fa-trash\"></i>  Length Production\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-3\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter('search')\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter('search')\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"text-center\">\r\n                <div class=\"my_offer_table_container\">\r\n                    <div class=\"text-center \">\r\n                        <div class=\"table-outer-container offer_table_container position-relative \">\r\n                            <div class=\"table-inner-container  hc example-container mat-elevation-z8\">\r\n                                <table mat-table [dataSource]=\"dataSource\" >\r\n\r\n                                    <ng-container matColumnDef=\"select\">\r\n                                        <th mat-header-cell *matHeaderCellDef>\r\n                                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                                [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                                [aria-label]=\"checkboxLabel()\">\r\n                                            </mat-checkbox>\r\n                                        </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                                (change)=\"$event ? selection.toggle(row) : null\"\r\n                                                [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\r\n                                            </mat-checkbox>\r\n                                        </td>\r\n                                    </ng-container>\r\n    \r\n                                    <ng-container matColumnDef=\"sequence_id\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Sequence ID </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row?.sequence_id}} </td>\r\n                                    </ng-container>\r\n    \r\n                                    <ng-container matColumnDef=\"BusinessCode\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Business Code </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Delivering_Mill\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Delivering Mill </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <div *ngIf=\"url[3]!='mini-bar'; else mini_bar\">\r\n\r\n                                    </div>\r\n\r\n                                    <ng-template #mini_bar>\r\n\r\n                                        <ng-container matColumnDef=\"Customer_Group\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Customer Group </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef=\"Market_Customer\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Market Customer\r\n                                            </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                                        </ng-container>\r\n\r\n                                    </ng-template>\r\n\r\n                                    <ng-container matColumnDef=\"Length\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Length </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Length}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Length_From\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Length From </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Length_From}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Length_To\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Length To </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Length_To}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Market_Country\">\r\n                                        <th mat-header-cell *matHeaderCellDef>Market Country </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Doc Item Currency </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Amount\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Currency\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Currency </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"action\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'edit')\">edit</mat-icon>\r\n                                            <!-- <mat-icon class=\"mr-10\" (click)=\"actionClicked([row.id],'delete')\">delete\r\n                                            </mat-icon> -->\r\n\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns ;sticky: true\"></tr>\r\n                                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                    <tr class=\"mat-row\" *matNoDataRow>\r\n                                        <td class=\"mat-cell\" colspan=\"4\">No Record found \"{{searchValue}}\"\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </div>\r\n                            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\"\r\n                                [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                                (page)=\"pageEvent = pageChangeCall($event)\">\r\n                            </mat-paginator>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { lengthLogisticData } from '../smb-interface.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { WarnPopupComponent } from '../smb-modal/warn-popup/warn-popup.component';\r\nimport { filter } from 'rxjs/operators';\r\nimport { EditPopupComponent } from '../smb-modal/edit-popup/edit-popup.component';\r\nimport { AddPopupComponent } from '../smb-modal/add-popup/add-popup.component';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n@Component({\r\n  selector: 'app-length-logistic-list',\r\n  templateUrl: './length-logistic-list.component.html',\r\n  styleUrls: ['./length-logistic-list.component.scss']\r\n})\r\nexport class LengthLogisticListComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  filterValue: any = '';\r\n  selection = new SelectionModel<lengthLogisticData>(true, []);\r\n\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.length_logistic\r\n        this.displayedColumns = [\r\n          'select',\r\n          'sequence_id',\r\n          'Market_Country',\r\n          'Delivering_Mill',\r\n          'Length',\r\n          'Length_From',\r\n          'Length_To',\r\n          'Transport_Mode',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          'action'\r\n        ]\r\n      } else {\r\n        this.apiStringURL = this.apiString.length_logistic_mini_bar\r\n\r\n        this.displayedColumns = [\r\n          'select',\r\n          'sequence_id',\r\n          'Customer_Group',\r\n          'Market_Customer',\r\n          'Market_Country',\r\n          'Delivering_Mill',\r\n          'Length',\r\n          'Length_From',\r\n          'Length_To',\r\n          'Transport_Mode',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          'action'\r\n        ]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getLengthLogistic()\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getLengthLogistic() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.apiMethod.get_request_header(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<lengthLogisticData>(resultData.data)\r\n      setTimeout(() => {\r\n        if (this.filterValue) {\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n        this.dataSource.sort = this.sort;\r\n\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getLengthLogistic()\r\n  }\r\n  //filter \r\n  applyFilter(filterValue: any) {\r\n    console.log(filterValue.trim().toLowerCase())\r\n    this.filterValue = filterValue\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getLengthLogistic()\r\n  }\r\n  actionClicked(rowData: any, viewOn: any) {\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"length_logistic\",\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'sequence_id' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getLengthLogistic()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            fileName: \"length_logistic\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getLengthLogistic()\r\n      })\r\n    }\r\n\r\n    if (viewOn === 'delete' || viewOn === 'delete-all') {\r\n      let deleteID: any = []\r\n      if (viewOn === 'delete-all' && this.selection.selected.length === 0) {\r\n        return this.apiMethod.popupMessage('error', 'Select At-least on record')\r\n      }\r\n      if (this.selection.selected.length > 0) {\r\n        this.selection.selected.forEach((x: any) => {\r\n          deleteID.push(x.id)\r\n        })\r\n      } else {\r\n        deleteID = rowData\r\n      }\r\n      console.log(deleteID)\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: deleteID,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        if (result != undefined) {\r\n          this.getLengthLogistic()\r\n          this.selection.clear()\r\n        }\r\n      })\r\n    }\r\n  }\r\n  uploadByXlFile() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/length-logistic/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/length-logistic/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadInXlFile() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected(): any {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource?.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource?.data);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: lengthLogisticData): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.sequence_id + 1}`;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked('','add')\">\r\n                    <i class=\"fa fa-plus-circle\"></i> Length Logistic\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadByXlFile()\">\r\n                    <i class=\"fa fa-upload\"></i> Length Logistic\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"downloadInXlFile()\">\r\n                    <i class=\"fa fa-download\"></i> Length Logistic\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"actionClicked(selection,'delete-all')\">\r\n                    <i class=\"fa fa-trash\"></i>  Length Logistic\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter('search')\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter('search')\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"text-center\">\r\n                <div class=\"my_offer_table_container\">\r\n                    <div class=\"text-center \">\r\n                        <div class=\"table-outer-container offer_table_container position-relative \">\r\n                            <div class=\"table-inner-container  hc example-container mat-elevation-z8\">\r\n                                <table mat-table [dataSource]=\"dataSource\" >\r\n\r\n                                    <ng-container matColumnDef=\"select\">\r\n                                        <th mat-header-cell *matHeaderCellDef>\r\n                                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                                [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                                [aria-label]=\"checkboxLabel()\">\r\n                                            </mat-checkbox>\r\n                                        </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                                (change)=\"$event ? selection.toggle(row) : null\"\r\n                                                [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\r\n                                            </mat-checkbox>\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"sequence_id\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Sequence ID </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row?.sequence_id}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Customer_Group\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Customer Group </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Delivering_Mill\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Delivering Mill </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <div *ngIf=\"url[3]==='mini-bar'\">\r\n\r\n                                        <ng-container matColumnDef=\"Market_Customer\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Market Customer </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <ng-container matColumnDef=\"Market_Country\">\r\n                                        <th mat-header-cell *matHeaderCellDef>Market Country </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                                    </ng-container>\r\n                                    <ng-container matColumnDef=\"Length\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Length </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Length}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Length_From\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Length From </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Length_From}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Length_To\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Length To </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Length_To}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Transport_Mode\">\r\n                                        <th mat-header-cell *matHeaderCellDef>Transport Mode </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Transport_Mode}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Doc Item Currency </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Amount\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Currency\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Currency </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"action\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'edit')\">edit</mat-icon>\r\n                                            <!-- <mat-icon class=\"mr-10\" (click)=\"actionClicked([row.id],'delete')\">delete\r\n                                            </mat-icon> -->\r\n\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns ;sticky: true\"></tr>\r\n                                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                    <tr class=\"mat-row\" *matNoDataRow>\r\n                                        <td class=\"mat-cell\" colspan=\"4\">No Record found \"{{searchValue}}\"\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </div>\r\n                            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\"\r\n                                [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                                (page)=\"pageEvent = pageChangeCall($event)\">\r\n                            </mat-paginator>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport * as _ from 'lodash';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { Location } from \"@angular/common\";\r\nimport { filter } from 'rxjs/operators';\r\n@Component({\r\n  selector: 'app-history-modal',\r\n  templateUrl: './history-modal.component.html',\r\n  styleUrls: ['./history-modal.component.scss']\r\n})\r\nexport class HistoryModalComponent implements OnInit {\r\n\r\n  loading: boolean = false\r\n  displayedColumns: string[] = [];\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  tab: any;\r\n  table_data: any;\r\n  data: any = { \"inputaction\": '' };\r\n  uploadValidateModal: any;\r\n\r\n  selectedFiles: any = { \"uploadValidateModal\": { file: '', uploadCompleted: false } };\r\n  loadingRouteConfig: boolean = false\r\n  fileEv: any;\r\n  SelectedTab: any;\r\n  uploadValidateModal_data: any;\r\n  url: any;\r\n  apiStringURL: any;\r\n  searchValue: any;\r\n  pageOffset: any = 0;\r\n  pageLength: any = 10;\r\n  totalCount: any = 0;\r\n  dataSource: any;\r\n  pageEvent: any = PageEvent;\r\n  filterValue: any = '';\r\n  table_name: any;\r\n\r\n\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private _snackBar: MatSnackBar,\r\n    private router: Router,\r\n    private location: Location,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[2] === 'base-price') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.smb_mini_bar\r\n          this.displayedColumns = ['BusinessCode', 'Customer_Group', 'Market_Customer', 'Market_Country', 'Beam_Category', 'Document_Item_Currency', 'Amount', 'Currency', 'Username', 'updated_on']\r\n        } else {\r\n          this.apiStringURL = this.apiString.smb\r\n          this.displayedColumns = ['BusinessCode', 'Market_Country', 'Product_Division', 'Product_Level_02', 'Document_Item_Currency', 'Amount', 'Currency', 'Username', 'updated_on']\r\n        }\r\n\r\n      } else if (this.url[2] === 'incoterm-exceptions') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.incoterm_exceptions_mini_bar\r\n          this.displayedColumns = ['Market_Country', 'Product_Division', 'Incoterm1', 'Customer_Group', 'Beam_Category', 'Delivering_Mill', 'Document_Item_Currency', 'Amount', 'Currency', 'Username', 'updated_on']\r\n        } else {\r\n          this.apiStringURL = this.apiString.incoterm_exceptions\r\n          this.displayedColumns = ['Market_Country', 'Customer_Group', 'Incoterm1', 'Product_Division', 'Beam_Category', 'Delivering_Mill', 'Document_Item_Currency', 'Amount', 'Currency', 'Username', 'updated_on']\r\n        }\r\n\r\n      } else if (this.url[2] === 'extra-certificate') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.certificate_mini_bar\r\n          this.displayedColumns = ['BusinessCode', 'Customer_Group', 'Market_Customer', 'Market_Country', 'Certificate', 'Grade_Category', 'Document_Item_Currency', 'Amount', 'Currency', 'Username', 'updated_on']\r\n        } else {\r\n          this.apiStringURL = this.apiString.certificate\r\n          this.displayedColumns = ['BusinessCode', 'Certificate', 'Grade_Category', 'Market_Country', 'Delivering_Mill', 'Document_Item_Currency', 'Amount', 'Currency', 'Username', 'updated_on']\r\n        }\r\n\r\n      } else if (this.url[2] === 'freight-parity') {\r\n        console.log(\"coming in  freight-parity\")\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.freight_parity_mini_bar\r\n          this.displayedColumns = [\"Delivering_Mill\", \"Market_Country\", \"Market_Customer_Group\", 'Market_Customer', \"Zip_Code_Dest\", \"Product_Division\", \"Document_Item_Currency\", \"Amount\", \"Currency\", 'Username', 'updated_on']\r\n        } else {\r\n          this.apiStringURL = this.apiString.freight_parity\r\n          this.displayedColumns = [\"Delivering_Mill\", \"Market_Country\", \"Zip_Code_Dest\", \"Product_Division\", \"Document_Item_Currency\", \"Amount\", \"Currency\", 'Username', 'updated_on']\r\n        }\r\n\r\n      } else if (this.url[2] === 'grade') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.grade_mini_bar\r\n          this.displayedColumns = ['BusinessCode', 'Customer_Group', 'Market_Customer', 'Market_Country', 'Grade_Category', 'Document_Item_Currency', 'Amount', 'Currency', 'Username', 'updated_on']\r\n        } else {\r\n          this.apiStringURL = this.apiString.grade\r\n          this.displayedColumns = ['BusinessCode', 'Grade_Category', 'Market_Country', 'Product_Division', 'Document_Item_Currency', 'Amount', 'Currency', 'Username', 'updated_on']\r\n        }\r\n\r\n      } else if (this.url[2] === 'length-logistic') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.length_logistic_mini_bar\r\n          this.displayedColumns = ['Customer_Group', 'Market_Customer', 'Market_Country', 'Delivering_Mill', 'Length', 'Length_From', 'Length_To', 'Transport_Mode', 'Document_Item_Currency', 'Amount', 'Currency', 'Username', 'updated_on']\r\n        } else {\r\n          this.apiStringURL = this.apiString.length_logistic\r\n          this.displayedColumns = [ 'Market_Country', 'Delivering_Mill', 'Length', 'Length_From', 'Length_To', 'Transport_Mode', 'Document_Item_Currency', 'Amount', 'Currency', 'Username', 'updated_on']\r\n        }\r\n\r\n      } else if (this.url[2] === 'length-production') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.length_production_mini_bar\r\n          this.displayedColumns = ['BusinessCode', 'Customer_Group', 'Market_Customer', 'Market_Country', 'Delivering_Mill', 'Length', 'Length_From', 'Length_To', 'Document_Item_Currency', 'Amount', 'Currency', 'Username', 'updated_on']\r\n        } else {\r\n          this.apiStringURL = this.apiString.length_production\r\n          this.displayedColumns = ['BusinessCode', 'Market_Country', 'Delivering_Mill', 'Length', 'Length_From', 'Length_To', 'Document_Item_Currency', 'Amount', 'Currency', 'Username', 'updated_on']\r\n        }\r\n\r\n      } else if (this.url[2] === 'profile') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.profile_mini_bar\r\n          this.displayedColumns = ['BusinessCode', 'Customer_Group', 'Market_Customer', 'Market_Country', 'Product_Level_04', 'Product_Level_05', 'Product_Level_02', 'Delivering_Mill', 'Document_Item_Currency', 'Amount', 'Currency', 'Username', 'updated_on']\r\n        } else {\r\n          this.apiStringURL = this.apiString.profile\r\n          this.displayedColumns = ['BusinessCode', 'Market_Country', 'Product_Division', 'Product_Level_04', 'Product_Level_05', 'Product_Level_02', 'Delivering_Mill', 'Document_Item_Currency', 'Amount', 'Currency', 'Username', 'updated_on']\r\n        }\r\n\r\n      } else if (this.url[2] === 'profile-lberia-italy') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.profile_lberia_italy_mini_bar\r\n          this.displayedColumns = ['BusinessCode', 'Market_Country', 'Market_Customer_Group', 'Market_Customer', 'Delivering_Mill', 'Product_Level_02', 'Product_Level_05', 'Document_Item_Currency', 'Amount', 'Currency', 'Username', 'updated_on']\r\n        } else {\r\n          this.apiStringURL = this.apiString.profile_lberia_italy\r\n          this.displayedColumns = ['BusinessCode', 'Market_Country', 'Delivering_Mill', 'Product_Level_02', 'Product_Level_05', 'Document_Item_Currency', 'Amount', 'Currency', 'Username', 'updated_on']\r\n        }\r\n\r\n      } else if (this.url[2] === 'transport-mode') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.transport_mode_mini_bar\r\n          this.displayedColumns = ['Product_Division', 'Market_Country', 'Market_Customer_Group', 'Market_Customer', 'Transport_Mode', 'Document_Item_Currency', 'Amount', 'Currency', 'Username', 'updated_on']\r\n        } else {\r\n          this.apiStringURL = this.apiString.transport_mode\r\n          this.displayedColumns = ['Product_Division', 'Market_Country', 'Transport_Mode', 'Document_Item_Currency', 'Amount', 'Currency', 'Username', 'updated_on']\r\n        }\r\n\r\n      } else {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.delivery_mill_mini_bar\r\n          this.displayedColumns = ['Market_Country', 'Market_Customer_Group', 'Market_Customer', 'Delivering_Mill', 'Product_Division', 'Document_Item_Currency', 'Amount', 'Currency', 'Username', 'updated_on']\r\n        } else {\r\n          this.apiStringURL = this.apiString.delivery_mill\r\n          this.displayedColumns = ['BusinessCode', 'Market_Country', 'Delivering_Mill', 'Product_Division', 'Beam_Category', 'Document_Item_Currency', 'Amount', 'Currency', 'Username', 'updated_on']\r\n        }\r\n        if (this.url[2] === \"minton-leans\") {\r\n          if (this.url[3] === \"mini-bar\") {\r\n            this.table_name = \"SMBExtMinTon_LeanS_Minibar\"\r\n            this.apiStringURL = this.apiString.generic\r\n            this.displayedColumns = ['BusinessCode', 'Customer_Group', 'Customer', 'Tonnage_From', 'Tonnage_To', 'Amount', 'Currency', 'Username', 'updated_on']\r\n          } else {\r\n            this.table_name = \"SMBExtMinTon_LeanS\"\r\n            this.apiStringURL = this.apiString.generic\r\n            this.displayedColumns = ['BusinessCode', 'Country', 'Tonnage_From', 'Tonnage_To', 'Amount', 'Currency', 'Username', 'updated_on']\r\n          }\r\n        }\r\n        if (this.url[2] === \"piececount\") {\r\n          if (this.url[3] === \"mini-bar\") {\r\n            this.table_name = \"SMBExtPieceCount_Minibar\"\r\n            this.apiStringURL = this.apiString.generic\r\n            this.displayedColumns = ['BusinessCode', 'Customer_Group', 'Customer', 'Unit_of_Quantity', 'Amount', 'Currency', 'Username', 'updated_on']\r\n          } else {\r\n            this.table_name = \"SMBExtPieceCount\"\r\n            this.apiStringURL = this.apiString.generic\r\n            this.displayedColumns = ['BusinessCode', 'Country', 'Unit_of_Quantity', 'Amount', 'Currency', 'Username', 'updated_on']\r\n          }\r\n        }\r\n        if (this.url[2] === \"dis-earlypmt\") {\r\n          if (this.url[3] === \"mini-bar\") {\r\n            this.table_name = \"SMBDisEarlyPmt_Minibar\"\r\n            this.apiStringURL = this.apiString.generic\r\n            this.displayedColumns = ['BusinessCode', 'Customer_Group', 'Customer', 'Value', 'Unit', 'Username', 'updated_on']\r\n          } else {\r\n            this.table_name = \"SMBDisEarlyPmt\"\r\n            this.apiStringURL = this.apiString.generic\r\n            this.displayedColumns = ['BusinessCode', 'Country', 'Value', 'Unit', 'Username', 'updated_on']\r\n          }\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  //mine\r\n  ngOnInit(): void {\r\n    console.log(this.url[2])\r\n    this.url[2] = this.url[2] == \"base-price\" ? \"smb\" : this.url[2];\r\n    console.log(this.url[2])\r\n    this.getHistory()\r\n    console.log('hhh ',this.data)\r\n  }\r\n  //getting uploaded history of smb\r\n  getHistory() {\r\n    console.log({ apistring: this.apiStringURL })\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.apiMethod.get_request(this.apiStringURL.history + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString + \"&table_name=\" + this.table_name).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = resultData.data\r\n      setTimeout(() => {\r\n        if (this.filterValue) {\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n        this.dataSource.sort = this.sort;\r\n\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getHistory()\r\n  }\r\n  //filter \r\n  applyFilter(filterValue: any) {\r\n    console.log(filterValue.trim().toLowerCase())\r\n    this.filterValue = filterValue\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getHistory()\r\n  }\r\n\r\n  // ==================== file change event ========================\r\n  // dropFiles(ev: any): any {\r\n  //   ev.preventDefault();\r\n  //   this.fileEv = ev\r\n  //   let data: any = ev.dataTransfer.items[0]\r\n  //   console.log(data)\r\n  //   if (data) {\r\n  //     console.log(\"coming inside\")\r\n  // If dropped items aren't files, reject them\r\n  //   const allowed_types = [\r\n  //     'application/vnd.ms-excel',\r\n  //     'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];\r\n\r\n  //   if (!_.includes(allowed_types, data.type)) {\r\n  //     let imageError: any = 'Only xlsx are allowed.';\r\n  //     this._snackBar.open(imageError, \"\", {\r\n  //       duration: 4000,\r\n  //       panelClass: ['error'],\r\n  //       horizontalPosition: 'end',\r\n  //       verticalPosition: 'bottom',\r\n  //     });\r\n  //     return false;\r\n  //   }\r\n  //   let obj: any\r\n  //   if (data.kind === 'file') {\r\n  //     let file = data.getAsFile();\r\n  //     obj = {\r\n  //       fileName: file.name,\r\n  //       selectedFile: file,\r\n  //     }\r\n  //   }\r\n  //   this.selectedFiles.uploadValidateModal = {\r\n  //     file: obj,\r\n  //     uploadCompleted: true\r\n\r\n  //   }\r\n  // }\r\n  // }\r\n\r\n  //==========================end===================================\r\n\r\n  //data validate\r\n  // validateDataForm() {\r\n  //   console.log(this.uploadValidateModal)\r\n  //   let data: any = {\r\n  //     \"billet\": this.uploadValidateModal_data.data,\r\n  //     \"filename\": this.uploadValidateModal_data.filename\r\n  //   }\r\n  //   this.loadingRouteConfig = true\r\n  //   this.apiMethod.post_request(this.apiStringURL.validate, data).subscribe((result: any) => {\r\n  //     console.log(\"success\")\r\n  //     this.loadingRouteConfig = false\r\n  //     this.apiMethod.popupMessage('success', 'File validated successfully')\r\n  //     this.location.back()\r\n  //   }, error => {\r\n  //     this.loadingRouteConfig = false\r\n  //     this.apiMethod.popupMessage('error', 'Error while validating uploaded file')\r\n  //   })\r\n  // }\r\n  // back() {\r\n  //   this.location.back()\r\n  // }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n\r\n<div class=row>\r\n    <div class=\"col-12\">\r\n        <div class=\"text-right mt-10\">\r\n            <!-- <mat-form-field appearance=\"outline\">\r\n                <mat-label>Search</mat-label>\r\n                <input matInput (keyup)=\"applyFilter($event)\" #input>\r\n                <mat-icon matSuffix>search</mat-icon>\r\n            </mat-form-field> -->\r\n\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Search</mat-label>\r\n                <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter('search')\">\r\n                <mat-icon matSuffix (click)=\"applyFilter('search')\" class=\"pointer\">search</mat-icon>\r\n            </mat-form-field>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"text-center\">\r\n            <div class=\"my_offer_table_container\">\r\n                <div class=\"text-center \">\r\n                    <div class=\"table-outer-container offer_table_container position-relative \">\r\n                        <div class=\"table-inner-container hc example-container mat-elevation-z8\">\r\n                            <table mat-table [dataSource]=\"dataSource\">\r\n                                <div *ngIf=\"url[3]==='mini-bar';else sample\">\r\n                                    <div *ngIf=\"!(\r\n                                                (url[2]==='delivery-mill') || \r\n                                                (url[2]==='freight-parity') || \r\n                                                (url[2]==='length-logistic') ||\r\n                                                (url[2]==='transport-mode')\r\n                                                )\">\r\n                                        <ng-container matColumnDef=\"BusinessCode\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Business Code </th>\r\n                                            <td mat-cell *matCellDef=\"let row of dataSource\"> {{row.BusinessCode}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <div *ngIf=\"!(\r\n                                                    (url[2]==='smb') || \r\n                                                    (url[2]==='extra-certificate') ||\r\n                                                    (url[2]==='grade') ||\r\n                                                    (url[2]==='transport-mode') \r\n                                                )\">\r\n                                        <ng-container matColumnDef=\"Delivering_Mill\">\r\n                                            <th mat-header-cell *matHeaderCellDef>Delivering Mill </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <!-- <div *ngIf=\"(url[2]==='minton-leans')\">\r\n                                        <ng-container matColumnDef=\"Country\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Country </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Country}} </td>\r\n                                        </ng-container>\r\n                                    </div> -->\r\n\r\n                                    <div *ngIf=\"(\r\n                                                    (url[2]==='delivery-mill') ||\r\n                                                    (url[2]==='freight-parity') ||\r\n                                                    (url[2]==='transport-mode') \r\n                                                )\">\r\n                                        <ng-container matColumnDef=\"Product_Division\">\r\n                                            <th mat-header-cell *matHeaderCellDef>Product Division </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                                        </ng-container>\r\n\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"!(\r\n                                                    (url[2]==='delivery-mill') ||\r\n                                                    (url[2]==='freight_-arity') ||\r\n                                                    (url[2]==='profile-lberia_italy') ||\r\n                                                    (url[2]==='transport-mode') \r\n                                                    )\">\r\n                                        <ng-container matColumnDef=\"Customer_Group\">\r\n                                            <th mat-header-cell *matHeaderCellDef>Customer Group </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <div *ngIf=\"(\r\n                                                    (url[2]==='delivery-mill') ||\r\n                                                    (url[2]==='freight-parity') ||\r\n                                                    (url[2]==='profile-lberia-italy') ||\r\n                                                    (url[2]==='transport-mode') \r\n                                                    )\">\r\n                                        <ng-container matColumnDef=\"Market_Customer_Group\">\r\n                                            <th mat-header-cell *matHeaderCellDef>Market Customer Group </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer_Group}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <ng-container matColumnDef=\"Market_Customer\">\r\n                                        <th mat-header-cell *matHeaderCellDef > Market - Customer </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                                    </ng-container>\r\n\r\n\r\n                                    <div *ngIf=\"(\r\n                                                    (url[2]==='extra-certificate') ||\r\n                                                    (url[2]==='grade') \r\n                                                    )\">\r\n                                        <ng-container matColumnDef=\"Grade_Category\">\r\n                                            <th mat-header-cell *matHeaderCellDef>Grade Category </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Grade_Category}} </td>\r\n                                        </ng-container>\r\n\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"(\r\n                                                    (url[2]==='profile') ||\r\n                                                    (url[2]==='profile-lberia-italy')\r\n                                                    )\">\r\n\r\n                                        <ng-container matColumnDef=\"Product_Level_02\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Product Level 02 </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_02}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"(url[2]==='profile')\">\r\n                                        <ng-container matColumnDef=\"Product_Level_04\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Product Level 04 </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_04}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"(\r\n                                                    (url[2]==='profile') ||\r\n                                                    (url[2]==='profile-lberia-italy')\r\n                                                    )\">\r\n                                        <ng-container matColumnDef=\"Product_Level_05\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Product Level 05 </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_05}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <div *ngIf=\"(\r\n                                                    (url[2]==='length-logistic') ||\r\n                                                    (url[2]==='transport-mode')\r\n                                                    )\">\r\n                                        <ng-container matColumnDef=\"Transport_Mode\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Transport Mode </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Transport_Mode}} </td>\r\n                                        </ng-container>\r\n\r\n                                    </div>\r\n                                    <div *ngIf=\"(\r\n                                                    (url[2]==='length-logistic') ||\r\n                                                    (url[2]==='length-production')\r\n                                                    )\">\r\n                                        <ng-container matColumnDef=\"Length\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Length </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Length}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"(url[2]==='extra-certificate')\">\r\n                                        <ng-container matColumnDef=\"Certificate\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Certificate </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Certificate}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"(url[2]==='freight-parity')\">\r\n                                        <ng-container matColumnDef=\"Zip_Code_Dest\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Zip Code Dest </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Zip_Code_Dest}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-6\" *ngIf=\"(\r\n                                                                (data?.fileName==='length_logistic') ||\r\n                                                                (data?.fileName==='length_production')\r\n                                                                )\">\r\n                                        <ng-container matColumnDef=\"Length_From\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Length From </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Length_From}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-6\" *ngIf=\"(\r\n                                                                (data?.fileName==='length_logistic') ||\r\n                                                                (data?.fileName==='length_production')\r\n                                                                )\">\r\n                                        <ng-container matColumnDef=\"Length_To\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Length To </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Length_To}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"(url[2]==='smb')\">\r\n                                        <ng-container matColumnDef=\"Beam_Category\">\r\n                                            <th mat-header-cell *matHeaderCellDef> BeamCatagory</th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Beam_Category}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <!-- <div *ngIf=\"(\r\n                                                    (url[2]==='length-logistic')\r\n                                                    )\">\r\n                                        <ng-container matColumnDef=\"Country_Group\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Country Group </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Country_Group}} </td>\r\n                                        </ng-container>\r\n                                    </div> -->\r\n\r\n                                    <div *ngIf=\"(\r\n                                                    (url[2]==='length-logistic') ||\r\n                                                    (url[2]==='length-production')\r\n                                                    )\">\r\n                                        <ng-container matColumnDef=\"Length_From\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Length From </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Length_From}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"(\r\n                                                    (url[2]==='length-logistic') ||\r\n                                                    (url[2]==='length-production')\r\n                                                    )\">\r\n                                        <ng-container matColumnDef=\"Length_To\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Length To </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Length_To}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n\r\n\r\n\r\n                                <!-- =========================simple table ================================ -->\r\n                                <ng-template #sample>\r\n                                    <div *ngIf=\"!(\r\n                                                    (url[2]==='freight-parity') || \r\n                                                    (url[2]==='length-logistic') ||\r\n                                                    (url[2]==='transport-mode') \r\n                                                )\">\r\n                                        <ng-container matColumnDef=\"BusinessCode\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Business Code </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"!(\r\n                                                    (url[2]==='smb') || \r\n                                                    (url[2]==='grade') ||\r\n                                                    (url[2]==='transport-mode')\r\n                                                )\">\r\n                                        <ng-container matColumnDef=\"Delivering_Mill\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Delivering Mill </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"(\r\n                                                    (url[2]==='smb') ||\r\n                                                    (url[2]==='delivery-mill') ||\r\n                                                    (url[2]==='freight-parity') ||\r\n                                                    (url[2]==='profile') ||\r\n                                                    (url[2]==='grade') ||\r\n                                                    (url[2]==='transport-mode') ||\r\n                                                    (url[2]==='incoterm-exceptions')  \r\n                                                    )\">\r\n                                        <ng-container matColumnDef=\"Product_Division\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Product Division </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n\r\n                                    <div *ngIf=\"(\r\n                                                    (url[2]==='extra-certificate') ||\r\n                                                    (url[2]==='grade') \r\n                                                    )\">\r\n                                        <ng-container matColumnDef=\"Grade_Category\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Grade Category </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Grade_Category}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"(\r\n                                                    (url[2]==='smb') ||\r\n                                                    (url[2]==='profile') ||\r\n                                                    (url[2]==='profile-lberia-italy') \r\n                                                    )\">\r\n                                        <ng-container matColumnDef=\"Product_Level_02\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Product Level 02 </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_02}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"(\r\n                                                    (url[2]==='profile') \r\n                                                    )\">\r\n                                        <ng-container matColumnDef=\"Product_Level_04\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Product Level 04 </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_04}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"(\r\n                                                    (url[2]==='profile') ||\r\n                                                    (url[2]==='profile-lberia-italy')\r\n                                                    )\">\r\n                                        <ng-container matColumnDef=\"Product_Level_05\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Product Level 05 </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_05}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"(\r\n                                                    (url[2]==='length-logistic') ||\r\n                                                    (url[2]==='transport-mode')\r\n                                                    )\">\r\n                                        <ng-container matColumnDef=\"Transport_Mode\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Transport Mode </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Transport_Mode}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"(\r\n                                                    (url[2]==='length-logistic') ||\r\n                                                    (url[2]==='length-production')\r\n                                                    )\">\r\n                                        <ng-container matColumnDef=\"Length\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Length </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Length}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <!-- <div *ngIf=\"(\r\n                                                    (url[2]==='grade') ||\r\n                                                    (url[2]==='length-logistic') ||\r\n                                                    (url[2]==='length-production')\r\n                                                    )\">\r\n                                        <ng-container matColumnDef=\"Country_Group\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Country Group </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Country_Group}} </td>\r\n                                        </ng-container>\r\n                                    </div> -->\r\n\r\n                                    <div *ngIf=\"(url[2]==='freight-parity')\">\r\n                                        <ng-container matColumnDef=\"Zip_Code_Dest\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Zip Code Dest </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Zip_Code_Dest}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"(url[2]==='extra-certificate') \">\r\n                                        <ng-container matColumnDef=\"Certificate\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Certificate </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Certificate}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"((url[2]==='delivery-mill') ||\r\n                                                 (url[2]==='incoterm-exceptions') )\">\r\n                                        <ng-container matColumnDef=\"Beam_Category\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Beam Category </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Beam_Category}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <!-- <div *ngIf=\"url[2]=='minton-leans'\">\r\n                                        <ng-container matColumnDef=\"Customer\">\r\n                                            <th mat-header-cell *matHeaderCellDef > Customer </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Customer}} </td>\r\n                                        </ng-container>\r\n                                    </div> -->\r\n\r\n                                    <div *ngIf=\"(url[2]==='incoterm-exceptions') ||\r\n                                                (url[2]==='milton-leans') ||\r\n                                                (url[2]==='piececount')\">\r\n                                        <ng-container matColumnDef=\"Customer_Group\">\r\n                                            <th mat-header-cell *matHeaderCellDef>Customer Group </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <div *ngIf=\"(url[2]==='incoterm-exceptions')\">\r\n                                        <ng-container matColumnDef=\"Incoterm1\">\r\n                                            <th mat-header-cell *matHeaderCellDef>Incoterm1 </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Incoterm1}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <div class=\"col-6\" *ngIf=\"(\r\n                                                            (url[2]==='length-logistic') ||\r\n                                                            (url[2]==='length-production') ||\r\n                                                            (url[2]==='minton-leans')\r\n                                                            )\">\r\n                                        <ng-container matColumnDef=\"Length_From\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Length From </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Length_From}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-6\" *ngIf=\"(\r\n                                                            (url[2]==='length-logistic') ||\r\n                                                            (url[2]==='length-production')\r\n                                                            )\">\r\n                                        <ng-container matColumnDef=\"Length_To\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Length To </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Length_To}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </ng-template>\r\n                                <ng-container matColumnDef=\"Market_Country\">\r\n                                    <th mat-header-cell *matHeaderCellDef> Market Country </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                                    <th mat-header-cell *matHeaderCellDef> Doc Item Cur</th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"Amount\">\r\n                                    <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"Currency\">\r\n                                    <th mat-header-cell *matHeaderCellDef> Currency </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                                </ng-container>\r\n\r\n                                <div *ngIf=\"(\r\n                                                (url[2]==='freight-parity') ||\r\n                                                (url[2]==='length-production')||\r\n                                                (url[2]==='smb') ||\r\n                                                (url[2]==='incoterm-exceptions') ||\r\n                                                (url[2]==='extra-certificate') ||\r\n                                                (url[2]==='grade') ||\r\n                                                (url[2]==='transport-mode') ||\r\n                                                (url[2]==='delivery-mill') ||\r\n                                                (url[2]==='length-logistic') ||\r\n                                                (url[2]==='profile') ||\r\n                                                (url[2]==='profile-lberia-italy') ||\r\n                                                (url[2]==='minton-leans') ||\r\n                                                (url[2]==='piececount') ||\r\n                                                (url[2]==='dis-earlypmt') \r\n                                                )\">\r\n                                    <ng-container matColumnDef=\"updated_on\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Updated_On </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.updated_on}} </td>\r\n                                    </ng-container>\r\n                                </div>\r\n\r\n                                <div *ngIf=\"(\r\n                                                (url[2]==='freight-parity') ||\r\n                                                (url[2]==='length-production')||\r\n                                                (url[2]==='smb') ||\r\n                                                (url[2]==='incoterm-exceptions') ||\r\n                                                (url[2]==='extra-certificate') ||\r\n                                                (url[2]==='grade') ||\r\n                                                (url[2]==='transport-mode') ||\r\n                                                (url[2]==='delivery-mill') ||\r\n                                                (url[2]==='length-logistic') ||\r\n                                                (url[2]==='profile') ||\r\n                                                (url[2]==='profile-lberia-italy') ||\r\n                                                (url[2]==='minton-leans') ||\r\n                                                (url[2]==='piececount') ||\r\n                                                (url[2]==='dis-earlypmt')\r\n                                                )\">\r\n                                    <ng-container matColumnDef=\"Username\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Username </th>\r\n                                        <td mat-row *matCellDef=\"let row\"> {{row.Username}} </td>\r\n                                    </ng-container>\r\n                                </div>\r\n\r\n                                <div *ngIf=\"(\r\n                                                (url[2]=='minton-leans') ||\r\n                                                (url[2]==='piececount') ||\r\n                                                (url[2]==='dis-earlypmt')\r\n                                            )\">\r\n                                    <ng-container matColumnDef=\"Country\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Country </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Country}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Customer\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Customer </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Customer}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Unit_of_Quantity\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Unit Of Quantity </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Unit_of_Quantity}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <!-- <ng-container matColumnDef=\"Tonnage\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Tonnage </th>\r\n                                        <td mat-row *matCellDef=\"let row\"> {{row.Tonnage}} </td>\r\n                                    </ng-container> -->\r\n\r\n                                    <ng-container matColumnDef=\"Tonnage_From\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Tonnage From </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Tonnage_From}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Tonnage_To\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Tonnage To </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Tonnage_To}} </td>\r\n                                    </ng-container>\r\n\r\n                                     <ng-container matColumnDef=\"Value\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Value </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Value}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Unit\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Unit </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Unit}} </td>\r\n                                        </ng-container>\r\n\r\n                            \r\n                                </div>\r\n\r\n\r\n                                <!--=====================================simple design end ===============================  -->\r\n\r\n                                <!--========================== common rows ================================= -->\r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                                <!-- <tr *ngFor=\"let data of dataSource;let i = index\">dsdfsf</tr> -->\r\n\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[10,25,50,100,150,200]\" #paginators>\r\n            </mat-paginator> -->\r\n\r\n        <mat-paginator [length]=\"totalCount\" [pageSize]=\"10\" [pageSizeOptions]=\"[10,25,50,100,150,200,500]\" #paginators\r\n            (page)=\"pageEvent = pageChangeCall($event)\">\r\n        </mat-paginator>\r\n    </div>\r\n</div>\r\n<!-- ========================== simple design ================================= -->","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SmbRoutingModule } from './smb-routing.module';\r\nimport { SmbComponent } from './smb.component';\r\nimport { BasePriceAdditionListComponent } from './base-price/base-price-addition-list/base-price-addition-list.component';\r\nimport { EditBasePriceAdditionComponent } from './base-price/edit-base-price-addition/edit-base-price-addition.component';\r\nimport { BulkUploadBasePriceAdditionComponent } from './base-price/bulk-upload-base-price-addition/bulk-upload-base-price-addition.component';\r\nimport { MaterialsModule } from 'src/app/materials/materials.module';\r\nimport { EditPopupComponent } from './smb-modal/edit-popup/edit-popup.component';\r\nimport { WarnPopupComponent } from './smb-modal/warn-popup/warn-popup.component';\r\nimport { DeliveryMillListComponent } from './delivery-mill-list/delivery-mill-list.component';\r\nimport { ExtraCertificateListComponent } from './extra-certificate-list/extra-certificate-list.component';\r\nimport { FreightParityListComponent } from './freight-parity-list/freight-parity-list.component';\r\nimport { GradeListComponent } from './grade-list/grade-list.component';\r\nimport { LengthLogisticListComponent } from './length-logistic-list/length-logistic-list.component';\r\nimport { LengthProductionListComponent } from './length-production-list/length-production-list.component';\r\nimport { ProfileListComponent } from './profile-list/profile-list.component';\r\nimport { ProfileLberiaItalyListComponent } from './profile-lberia-italy-list/profile-lberia-italy-list.component';\r\nimport { TransportModeListComponent } from './transport-mode-list/transport-mode-list.component';\r\nimport { IncotermExceptionsListComponent } from './incoterm-exceptions/incoterm-exceptions-list/incoterm-exceptions-list.component';\r\nimport { IncotermExceptionsUploadComponent } from './incoterm-exceptions/incoterm-exceptions-upload/incoterm-exceptions-upload.component';\r\nimport { IncotermExceptionsEditComponent } from './incoterm-exceptions/incoterm-exceptions-edit/incoterm-exceptions-edit.component';\r\nimport { UploadValidateModalComponent } from './smb-modal/upload-validate-modal/upload-validate-modal.component';\r\nimport { AddPopupComponent } from './smb-modal/add-popup/add-popup.component';\r\nimport { HistoryModalComponent } from './smb-modal/history-modal/history-modal.component';\r\nimport { RecordApprovalComponent } from './smb-modal/record-approval/record-approval.component';\r\nimport { SMBExtMinTonLeanSComponent } from './smbext-min-ton-lean-s/smbext-min-ton-lean-s.component';\r\nimport { SMBExtPieceCountComponent } from './smbext-piece-count/smbext-piece-count.component';\r\nimport { SMBDisEarlyPtmComponent } from './smbdis-early-ptm/smbdis-early-ptm.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SmbComponent,\r\n    BasePriceAdditionListComponent,\r\n    EditBasePriceAdditionComponent,\r\n    BulkUploadBasePriceAdditionComponent,\r\n    WarnPopupComponent,\r\n    EditPopupComponent,\r\n    DeliveryMillListComponent,\r\n    ExtraCertificateListComponent,\r\n    FreightParityListComponent,\r\n    GradeListComponent,\r\n    LengthLogisticListComponent,\r\n    LengthProductionListComponent,\r\n    ProfileListComponent,\r\n    ProfileLberiaItalyListComponent,\r\n    TransportModeListComponent,\r\n    IncotermExceptionsListComponent,\r\n    IncotermExceptionsUploadComponent,\r\n    IncotermExceptionsEditComponent,\r\n    UploadValidateModalComponent,\r\n    AddPopupComponent,\r\n    HistoryModalComponent,\r\n    RecordApprovalComponent,\r\n    SMBExtMinTonLeanSComponent,\r\n    SMBExtPieceCountComponent,\r\n    SMBDisEarlyPtmComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SmbRoutingModule,\r\n    MaterialsModule\r\n  ]\r\n})\r\nexport class SmbModule { }\r\n","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { filter } from 'rxjs/operators';\r\nimport { EditPopupComponent } from '../smb-modal/edit-popup/edit-popup.component';\r\nimport { WarnPopupComponent } from '../smb-modal/warn-popup/warn-popup.component';\r\nimport { AddPopupComponent } from '../smb-modal/add-popup/add-popup.component';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { pricecountModeData } from '../smb-interface.service';\r\n\r\n@Component({\r\n  selector: 'app-smbext-piece-count',\r\n  templateUrl: './smbext-piece-count.component.html',\r\n  styleUrls: ['./smbext-piece-count.component.scss']\r\n})\r\nexport class SMBExtPieceCountComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  searchValue: any\r\n  displayedColumns: string[] = [];\r\n  table_name: any;\r\n  user:any;\r\n  dataSource: any;\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  filterValue: any = '';\r\n  testing:any = \"test\"\r\n  selection = new SelectionModel<pricecountModeData>(true, []);\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(\"myurl = \",this.url)\r\n    if(this.url[3]!='mini-bar'){\r\n      this.apiStringURL = this.apiString.generic\r\n      this.table_name = \"SMBExtPieceCount\"\r\n      this.displayedColumns=[\r\n        'select',\r\n        'sequence_id',\r\n        'BusinessCode',\r\n        'Country',\r\n        'Unit_of_Quantity',\r\n        'Amount',\r\n        'Currency',\r\n        'action'\r\n      ]\r\n    }else{\r\n      this.apiStringURL = this.apiString.generic\r\n      this.table_name = \"SMBExtPieceCount_Minibar\"\r\n      this.displayedColumns = [\r\n        'select',\r\n        'sequence_id',\r\n        'BusinessCode',\r\n        'Customer_Group',\r\n        'Customer',\r\n        'Unit_of_Quantity',\r\n        'Amount',\r\n        'Currency',\r\n        'action'\r\n      ]\r\n    }\r\n   });\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.getPieceCount()\r\n    \r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  \r\n  getPieceCount() {   \r\n    // this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.get_request_header(this.apiStringURL.list + \"?table_name=\" + this.table_name + \"&offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<pricecountModeData>(resultData.data)\r\n      setTimeout(() => {\r\n        if (this.filterValue) {\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n        this.dataSource.sort = this.sort;\r\n\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n    console.log(this.dataSource)\r\n  }\r\n\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getPieceCount()\r\n  }\r\n  //filter \r\n  applyFilter(filterValue: any) {\r\n    console.log(filterValue.trim().toLowerCase())\r\n    this.filterValue = filterValue\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getPieceCount()\r\n  }\r\n  actionClicked(rowData: any, viewOn: any) {\r\n    console.log(viewOn)\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] == 'mini-bar' ? 'miniBar' : 'add',\r\n            table_name: this.table_name,\r\n            fileName: \"piece_couting\",\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n            x != 'select' && x != 'sequence_id' && x != 'action'\r\n          )\r\n            \r\n          },\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n          console.log('The edit dialog was closed', result);\r\n          this.getPieceCount()\r\n        })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id + \"&table_name=\" + this.table_name,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            table_name: this.table_name,\r\n            // user :localStorage.getItem('arc-userDetails'),\r\n            // this.token = JSON.parse(localData).token\r\n\r\n            fileName: \"piece_counting\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n            x != 'select' && x != 'action'\r\n          )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getPieceCount()\r\n      })\r\n    }\r\n    if (viewOn === 'delete' || viewOn === 'delete-all') {\r\n      let deleteID: any = [this.table_name]\r\n      if (viewOn === 'delete-all' && this.selection.selected.length === 0) {\r\n        return this.apiMethod.popupMessage('error', 'Select At-least on record')\r\n      }\r\n      if (this.selection.selected.length > 0) {\r\n        this.selection.selected.forEach((x: any) => {\r\n          deleteID.push(x.id)\r\n        })\r\n      } else {\r\n        deleteID = rowData\r\n      }\r\n      console.log(deleteID)\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: deleteID,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id + \"&table_name=\" + this.table_name,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            table_name: this.table_name,\r\n            deleteURL: this.apiStringURL.delete\r\n\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        if (result != undefined) {\r\n          this.getPieceCount()\r\n          this.selection.clear()\r\n        }\r\n      })\r\n    }\r\n    \r\n  }\r\n   \r\n  uploadByXlFile() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/piececount/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/piececount/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadInXlFile() {\r\n    window.open(this.apiStringURL.download + \"?table_name=\" + this.table_name, \"_blank\")\r\n  }\r\n  isAllSelected(): any {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource?.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  masterToggle() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource?.data);\r\n  }\r\n\r\n  checkboxLabel(row?: pricecountModeData): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.Business_Code + 1}`;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked('','add')\">\r\n                    <i class=\"fa fa-plus-circle\"></i> Piece Counting\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadByXlFile()\">\r\n                    <i class=\"fa fa-upload\"></i> Piece Counting\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"downloadInXlFile()\">\r\n                    <i class=\"fa fa-download\"></i> Piece Counting\r\n                 </button>\r\n                 <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked(selection,'delete-all')\">\r\n                    <i class=\"fa fa-trash\"></i> Piece Counting\r\n                 </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter('search')\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter('search')\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"text-center\">\r\n                <div class=\"my_offer_table_container\">\r\n                    <div class=\"text-center \">\r\n                        <div class=\"table-outer-container offer_table_container position-relative \">\r\n                            <div class=\"table-inner-container  hc example-container mat-elevation-z8\">\r\n                                <table mat-table [dataSource]=\"dataSource\">\r\n\r\n                                    <ng-container matColumnDef=\"select\">\r\n                                        <th mat-header-cell *matHeaderCellDef>\r\n                                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                                [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                                [aria-label]=\"checkboxLabel()\">\r\n                                            </mat-checkbox>\r\n                                        </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                                (change)=\"$event ? selection.toggle(row) : null\"\r\n                                                [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\r\n                                            </mat-checkbox>\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"sequence_id\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Sequence ID </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row?.sequence_id}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"BusinessCode\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Business Code </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                                        </ng-container> \r\n                                        <div *ngIf=\"url[3]!='mini-bar'; else minibar\">\r\n                                            <ng-container matColumnDef=\"Country\">\r\n                                                <th mat-header-cell *matHeaderCellDef>  Country\r\n                                                </th>\r\n                                                <td mat-cell *matCellDef=\"let row\"> {{row.Country}} </td>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                        <ng-template #minibar>\r\n                                            <ng-container matColumnDef=\"Customer_Group\">\r\n                                                <th mat-header-cell *matHeaderCellDef> Customer Group\r\n                                                </th>\r\n                                                <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                                            </ng-container>\r\n    \r\n                                            <ng-container matColumnDef=\"Customer\">\r\n                                                <th mat-header-cell *matHeaderCellDef> Customer </th>\r\n                                                <td mat-cell *matCellDef=\"let row\"> {{row.Customer}} </td>\r\n                                            </ng-container>\r\n                                        </ng-template>\r\n\r\n                                        <ng-container matColumnDef=\"Unit_of_Quantity\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Unit Of Quantity </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Unit_of_Quantity}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Amount\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Amount</th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Currency\">\r\n                                            <th mat-header-cell *matHeaderCellDef>Currency</th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"action\">\r\n                                            <th mat-header-cell *matHeaderCellDef>Action</th>\r\n                                            <td mat-cell *matCellDef=\"let row\">\r\n                                                <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'edit')\">edit</mat-icon>    \r\n                                            </td>\r\n                                        </ng-container>             \r\n                                        \r\n                                          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                          <tr class=\"mat-row\" *matNoDataRow>\r\n                                            <td class=\"mat-cell\" colspan=\"4\"> No Record found \"{{searchValue}}\" </td>\r\n                                          </tr>\r\n                                         \r\n                                </table>\r\n                            </div>\r\n                            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\"\r\n                                [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                                (page)=\"pageEvent = pageChangeCall($event)\">\r\n                            </mat-paginator>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { filter } from 'rxjs/operators';\r\nimport { gradeData, mintonModeData } from '../smb-interface.service';\r\nimport { EditPopupComponent } from '../smb-modal/edit-popup/edit-popup.component';\r\nimport { WarnPopupComponent } from '../smb-modal/warn-popup/warn-popup.component';\r\nimport { AddPopupComponent } from '../smb-modal/add-popup/add-popup.component';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-smbext-min-ton-lean-s',\r\n  templateUrl: './smbext-min-ton-lean-s.component.html',\r\n  styleUrls: ['./smbext-min-ton-lean-s.component.scss']\r\n})\r\nexport class SMBExtMinTonLeanSComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  searchValue: any\r\n   localData: any \r\n   username:any\r\n  displayedColumns: string[] = [];\r\n  table_name: any;\r\n  dataSource: any;\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  \r\n  apiStringURL: any;\r\n  filterValue: any = '';\r\n  testing:any = \"test\"\r\n  selection = new SelectionModel<mintonModeData>(true, []);\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      // console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      // console.log(\"myurl = \",router.url)\r\n    if(this.url[3]!='mini-bar'){\r\n      this.apiStringURL = this.apiString.generic\r\n      this.table_name = \"SMBExtMinTon_LeanS\"\r\n      this.displayedColumns=[\r\n        'select',\r\n        'sequence_id',\r\n        'BusinessCode',\r\n        'Country',\r\n        // 'Tonnage',\r\n        'Tonnage_From',\r\n        'Tonnage_To',\r\n        'Amount',\r\n        'Currency',\r\n        'action'\r\n      ]\r\n    }else{\r\n      this.apiStringURL = this.apiString.generic\r\n      this.table_name = \"SMBExtMinTon_LeanS_Minibar\"\r\n      this.displayedColumns = [\r\n        'select',\r\n        'sequence_id',\r\n        'BusinessCode',\r\n        'Customer_Group',\r\n        'Customer',\r\n        // 'Tonnage',\r\n        'Tonnage_From',\r\n        'Tonnage_To',\r\n        'Amount',\r\n        'Currency',\r\n        'action'\r\n      ]\r\n    }\r\n   });\r\n  }\r\n \r\n  ngOnInit(): void {\r\n    this.getMinton()\r\n  }\r\n\r\n  getMinton() {   \r\n\r\n    this.localData = localStorage.getItem('arc-userDetails')\r\n    this.username = JSON.parse(this.localData).username\r\n    // this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.get_request_header(this.apiStringURL.list + \"?table_name=\" + this.table_name + \"&offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<mintonModeData>(resultData.data)\r\n      setTimeout(() => {\r\n        if (this.filterValue) {\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n        this.dataSource.sort = this.sort;\r\n\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n    console.log(this.dataSource)\r\n  }\r\n\r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getMinton()\r\n  }\r\n\r\n  applyFilter(filterValue: any) {\r\n    console.log(filterValue.trim().toLowerCase())\r\n    this.filterValue = filterValue\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getMinton()\r\n  }\r\n  \r\n  actionClicked(rowData: any, viewOn: any) {\r\n    console.log(viewOn)\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] == 'mini-bar' ? 'miniBar' : 'add',\r\n            table_name : this.table_name,\r\n            fileName: \"minton_leans\",\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'sequence_id' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n          console.log('The edit dialog was closed', result);\r\n          this.getMinton()\r\n        })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id + \"&table_name=\" + this.table_name,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            table_name : this.table_name,\r\n            fileName: \"minton_leans\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getMinton()\r\n      })\r\n    }\r\n    if (viewOn === 'delete' || viewOn === 'delete-all') {\r\n      let deleteID: any = [this.table_name]\r\n      if (viewOn === 'delete-all' && this.selection.selected.length === 0) {\r\n        return this.apiMethod.popupMessage('error', 'Select At-least on record')\r\n      }\r\n      if (this.selection.selected.length > 0) {\r\n        this.selection.selected.forEach((x: any) => {\r\n          deleteID.push(x.id)\r\n  \r\n        })\r\n      } else {\r\n        deleteID = rowData\r\n      }\r\n      console.log(deleteID)\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            table_name:this.table_name,\r\n            id: deleteID,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id + \"?table_name=\" + this.table_name,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        if (result != undefined) {\r\n          this.getMinton()\r\n          this.selection.clear()\r\n        }\r\n      })\r\n    }  \r\n  }\r\n   \r\n  uploadByXlFile() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/minton-leans/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/minton-leans/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n\r\n  downloadInXlFile() {\r\n       window.open(this.apiStringURL.download + \"?table_name=\" + this.table_name, \"_blank\")\r\n  }\r\n\r\n  isAllSelected(): any {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource?.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  masterToggle() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n    this.selection.select(...this.dataSource?.data);\r\n  }\r\n\r\n  checkboxLabel(row?: mintonModeData): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.Business_Code + 1}`;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked('','add')\">\r\n                    <i class=\"fa fa-plus-circle\"></i> MinTon Leans\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadByXlFile()\">\r\n                    <i class=\"fa fa-upload\"></i> MinTon Leans\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"downloadInXlFile()\">\r\n                    <i class=\"fa fa-download\"></i> MinTon Leans\r\n                 </button>\r\n                 <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked(selection,'delete-all')\">\r\n                    <i class=\"fa fa-trash\"></i> MinTon Leans\r\n                 </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter('search')\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter('search')\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"text-center\">\r\n                <div class=\"my_offer_table_container\">\r\n                    <div class=\"text-center \">\r\n                        <div class=\"table-outer-container offer_table_container position-relative \">\r\n                            <div class=\"table-inner-container  hc example-container mat-elevation-z8\">\r\n                                <table mat-table [dataSource]=\"dataSource\">\r\n\r\n                                    <ng-container matColumnDef=\"select\">\r\n                                        <th mat-header-cell *matHeaderCellDef>\r\n                                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                                [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                                [aria-label]=\"checkboxLabel()\">\r\n                                            </mat-checkbox>\r\n                                        </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                                (change)=\"$event ? selection.toggle(row) : null\"\r\n                                                [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\r\n                                            </mat-checkbox>\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"sequence_id\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Sequence ID </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row?.sequence_id}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"BusinessCode\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Business Code </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                                        </ng-container>\r\n                                        <div *ngIf=\"url[3]!='mini-bar'; else minibar\">\r\n                                            <ng-container matColumnDef=\"Country\">\r\n                                                <th mat-header-cell *matHeaderCellDef> Country </th>\r\n                                                <td mat-cell *matCellDef=\"let row\"> {{row.Country}} </td>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                        \r\n                                        <ng-template #minibar>\r\n                                            <ng-container matColumnDef=\"Customer_Group\">\r\n                                                <th mat-header-cell *matHeaderCellDef> Customer Group\r\n                                                </th>\r\n                                                <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                                            </ng-container>\r\n                                            <ng-container matColumnDef=\"Customer\">\r\n                                                <th mat-header-cell *matHeaderCellDef> Customer </th>\r\n                                                <td mat-cell *matCellDef=\"let row\"> {{row.Customer}} </td>\r\n                                            </ng-container>\r\n                                        </ng-template>\r\n \\\r\n                                        <!-- <ng-container matColumnDef=\"Tonnage\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Tonnage </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Tonnage}} </td>\r\n                                        </ng-container> -->\r\n\r\n                                        <ng-container matColumnDef=\"Tonnage_From\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Tonnage From</th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Tonnage_From}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Tonnage_To\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Tonnage To</th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Tonnage_To}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Amount\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Amount</th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Currency\">\r\n                                            <th mat-header-cell *matHeaderCellDef>Currency</th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"action\">\r\n                                            <th mat-header-cell *matHeaderCellDef>Action</th>\r\n                                            <td mat-cell *matCellDef=\"let row\">\r\n                                                <mat-icon class=\"mr-10\"  (click)=\"actionClicked(row,'edit')\">edit</mat-icon>    \r\n                                            </td>\r\n                                        </ng-container>\r\n                                   \r\n                                          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                          <tr class=\"mat-row\" *matNoDataRow>\r\n                                            <td class=\"mat-cell\" colspan=\"4\"> No Record found \"{{searchValue}}\" </td>\r\n                                        </tr>\r\n                                           \r\n                                </table>\r\n                            </div>\r\n                            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\"\r\n                                [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                                (page)=\"pageEvent = pageChangeCall($event)\">\r\n                            </mat-paginator>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { ThrowStmt } from '@angular/compiler';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { range } from 'lodash';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-add-popup',\r\n  templateUrl: './add-popup.component.html',\r\n  styleUrls: ['./add-popup.component.scss']\r\n})\r\nexport class AddPopupComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  url: any;\r\n  apiStringURL: any;\r\n  formFieldName: any = [];\r\n  addRecordForm: any = FormGroup;\r\n  k: any;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AddPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private fb: FormBuilder,\r\n    private router: Router\r\n  ) {\r\n\r\n    if (this.data.fileName === 'price_addition') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.smb_mini_bar : this.apiString.smb\r\n    } else if (this.data.fileName === 'incoterm_exceptions') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.incoterm_exceptions_mini_bar : this.apiString.incoterm_exceptions\r\n    } else if (this.data.fileName === 'certificate') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.certificate_mini_bar : this.apiString.certificate\r\n    } else if (this.data.fileName === 'freight_parity') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.freight_parity_mini_bar : this.apiString.freight_parity\r\n    } else if (this.data.fileName === 'grade') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.grade_mini_bar : this.apiString.grade\r\n    } else if (this.data.fileName === 'length_logistic') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.length_logistic_mini_bar : this.apiString.length_logistic\r\n    } else if (this.data.fileName === 'length_production') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.length_production_mini_bar : this.apiString.length_production\r\n    } else if (this.data.fileName === 'profile') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.profile_mini_bar : this.apiString.profile\r\n    } else if (this.data.fileName === 'profile_lberia_italy') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.profile_lberia_italy_mini_bar : this.apiString.profile_lberia_italy\r\n    } else if (this.data.fileName === 'transport_mode') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.transport_mode_mini_bar : this.apiString.transport_mode\r\n    } else if (this.data.fileName === 'delivery_mill') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.delivery_mill_mini_bar : this.apiString.delivery_mill\r\n    } else if (this.data.fileName === 'minton_leans') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.minton_mini_bar : this.apiString.minton\r\n    }\r\n\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    this.addRecordForm = this.fb.group({});\r\n    this.addingNewForm()\r\n    // console.log(\"Data = \",this.data.table_name)\r\n    this.k = Object.keys(this.addRecordForm.value)\r\n  }\r\n\r\n  closeModel() {\r\n    this.dialogRef.close()\r\n  }\r\n\r\n  addingNewForm() {\r\n\r\n    let formControlFields: any = [];\r\n    this.data.fieldValue.forEach((element: any, index: any) => {\r\n      formControlFields.push({ name: element, control: new FormControl('') });\r\n    })\r\n    formControlFields.forEach((f: any) => this.addRecordForm.addControl(f.name, f.control));\r\n    // console.log(this.addRecordForm, \"==========NEXT\")\r\n  }\r\n\r\n  addRecord(): any {\r\n    console.log(this.data.addURL)\r\n    let formInputValue = Object.keys(this.addRecordForm.value).some(k => this.addRecordForm.value[k])\r\n    this.k = Object.keys(this.addRecordForm.value)\r\n\r\n    let l = this.k.length\r\n    for (let i in range(l)) {\r\n      console.log(this.addRecordForm.value[this.k[i]])\r\n      if (this.addRecordForm.value[this.k[i]] == '') {\r\n        formInputValue = false\r\n        break\r\n      }\r\n    }\r\n\r\n    if (formInputValue === false) {\r\n      return false;\r\n    } else {\r\n      delete this.addRecordForm.value.action\r\n      let table_name = { table_name: this.data.table_name }\r\n      Object.assign(this.addRecordForm.value, table_name)\r\n      console.group(this.addRecordForm.value)\r\n      this.loadingRouteConfig = true\r\n      this.apiMethod.post_request_header(this.data.addURL, this.addRecordForm.value).subscribe(result => {\r\n        console.log(result)\r\n        this.loadingRouteConfig = false\r\n        this.apiMethod.popupMessage('success', ' Record Successfully Added & Sent For Apporoval.')\r\n        this.closeModel()\r\n      }, error => {\r\n        console.log(error)\r\n        this.loadingRouteConfig = false\r\n        this.apiMethod.popupMessage('error', 'Error While Adding Record')\r\n        this.closeModel()\r\n      })\r\n    }\r\n  }\r\n  removeUnderScore(value: any) {\r\n    return value.split('_').join(\" \");\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div class=\"pd-card\">\r\n    <!-- <form [formGroup]=\"updateRecord\"> -->\r\n\r\n    <div class=\"row\">\r\n        <span *ngIf=\"data.fieldValue.length>0\">\r\n            <form [formGroup]=\"addRecordForm\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\" *ngFor=\"let form of data?.fieldValue\">\r\n                        <mat-form-field appearance=\"outline\" *ngIf=\"form!='Unit'; else test\">\r\n                            <mat-label>{{removeUnderScore(form)}}</mat-label>\r\n                            <input matInput type=\"text\" formControlName=\"{{form}}\" required>\r\n                        </mat-form-field>\r\n                        <ng-template #test>\r\n                            <mat-form-field appearance=\"outline\">\r\n                                <mat-label>{{removeUnderScore(form)}}</mat-label>\r\n                                <input matInput type=\"text\" ngModel=\"%\" formControlName=\"{{form}}\" readonly>\r\n                            </mat-form-field>\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </span>\r\n    </div>\r\n    <!-- </form> -->\r\n    <div class=\" text-right\">\r\n        <button mat-stroked-button class=\"mr-10\" (click)=\"closeModel()\">\r\n            Close\r\n        </button>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"addRecordForm.invalid\" (click)=\"addRecord()\">\r\n            Add\r\n            <span *ngIf=\"data.fileName.split('_').length===1\" style=\"text-transform: capitalize;\">\r\n                {{data.fileName.split('_')[0]}}\r\n            </span>\r\n            <span *ngIf=\"data.fileName.split('_').length===2\" style=\"text-transform: capitalize;\">\r\n                {{data.fileName.split('_')[0] +' '+ data.fileName.split('_')[1]}}\r\n            </span>\r\n            <span *ngIf=\"data.fileName.split('_').length===3\" style=\"text-transform: capitalize;\">\r\n                {{data.fileName.split('_')[0] +' '+ data.fileName.split('_')[1] +' '+ data.fileName.split('_')[2]}}\r\n            </span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport * as _ from 'lodash';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { basePriceAddtionData } from '../../smb-interface.service';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { Location } from \"@angular/common\";\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-bulk-upload-base-price-addition',\r\n  templateUrl: './bulk-upload-base-price-addition.component.html',\r\n  styleUrls: ['./bulk-upload-base-price-addition.component.scss']\r\n})\r\nexport class BulkUploadBasePriceAdditionComponent implements OnInit {\r\n\r\n  loading: boolean = false\r\n  uploadBasePriceAddition: string[] = [];\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  tab: any;\r\n  table_data: any;\r\n  data: any = { \"inputaction\": '' };\r\n  alloyBasePriceAddition: any;\r\n\r\n  selectedFiles: any = { \"alloyBasePriceAddition\": { file: '', uploadCompleted: false } };\r\n  loadingRouteConfig: boolean = false\r\n  fileEv: any;\r\n  SelectedTab: any;\r\n  alloyBasePriceAddition_data: any;\r\n  url: any;\r\n  apiStringURL: any;\r\n\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private _snackBar: MatSnackBar,\r\n    private router: Router,\r\n    private location: Location,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.smb\r\n        this.uploadBasePriceAddition = [\r\n          'BusinessCode',\r\n          'Market_Country',\r\n          'Product_Division',\r\n          'Product_Level_02',\r\n          'document_item_currency',\r\n          'Amount',\r\n          'Currency'\r\n        ]\r\n      } else {\r\n        this.apiStringURL = this.apiString.smb_mini_bar\r\n        this.uploadBasePriceAddition = [\r\n          'BusinessCode',\r\n          'Market_Country',\r\n          'Customer_Group',\r\n          'Market_Customer',\r\n          'Beam_Category',\r\n          'document_item_currency',\r\n          'Amount',\r\n          'Currency'\r\n        ]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.data = { \"inputaction\": '' }\r\n  }\r\n\r\n\r\n  // ==================== file change event ========================\r\n  dropFiles(ev: any): any {\r\n\r\n    ev.preventDefault();\r\n    this.fileEv = ev\r\n    let data: any = ev.dataTransfer.items[0]\r\n    console.log(data)\r\n    if (data) {\r\n      console.log(\"coming inside\")\r\n      // If dropped items aren't files, reject them\r\n      const allowed_types = [\r\n        'application/vnd.ms-excel',\r\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];\r\n\r\n      if (!_.includes(allowed_types, data.type)) {\r\n        let imageError: any = 'Only xlsx are allowed.';\r\n        this._snackBar.open(imageError, \"\", {\r\n          duration: 4000,\r\n          panelClass: ['error'],\r\n          horizontalPosition: 'end',\r\n          verticalPosition: 'bottom',\r\n        });\r\n        return false;\r\n      }\r\n      let obj: any\r\n      if (data.kind === 'file') {\r\n        let file = data.getAsFile();\r\n        obj = {\r\n          fileName: file.name,\r\n          selectedFile: file,\r\n        }\r\n      }\r\n      this.selectedFiles.alloyBasePriceAddition = {\r\n        file: obj,\r\n        uploadCompleted: true\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  dragOverHandler(ev: any) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  onSelectFile(event: any) {\r\n    this.fileEv = event\r\n    console.log(event.target.files)\r\n    if (event.target.files && event.target.files[0]) {\r\n      var filesAmount = event.target.files.length;\r\n      for (let i = 0; i < filesAmount; i++) {\r\n        var reader = new FileReader();\r\n        let file: any = event.target.files[i]\r\n        console.log(file)\r\n\r\n        let obj: any = {\r\n          fileName: file.name,\r\n          selectedFile: file\r\n        }\r\n        this.selectedFiles.alloyBasePriceAddition = {\r\n          file: obj,\r\n          uploadCompleted: true\r\n        }\r\n        // this.selectedFiles.push(obj);\r\n        reader.onload = (event: any) => {\r\n        }\r\n\r\n        reader.readAsDataURL(event.target.files[i]);\r\n        event.target.value = ''\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteFile() {\r\n\r\n    this.alloyBasePriceAddition = ''\r\n    this.selectedFiles.alloyBasePriceAddition = {\r\n      file: \"\",\r\n      uploadCompleted: false\r\n    }\r\n    console.log(this.fileEv, \"FILE EV \")\r\n    // this.fileEv.target.value = \"\";\r\n  }\r\n  uploadFiles() {\r\n    const formData = new FormData();\r\n    formData.append(\"filename\", this.selectedFiles.alloyBasePriceAddition.file.selectedFile)\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.post_request_header(this.apiStringURL.upload, formData).subscribe((data) => {\r\n      console.log(data)\r\n      let resultData: any = data\r\n      this.loadingRouteConfig = false\r\n      this.alloyBasePriceAddition_data = resultData\r\n      this.alloyBasePriceAddition = new MatTableDataSource<basePriceAddtionData>(resultData.data)\r\n      setTimeout(() => {\r\n        this.alloyBasePriceAddition.paginator = this.paginator;\r\n        this.alloyBasePriceAddition.sort = this.sort;\r\n      });\r\n      this.apiMethod.popupMessage('success', 'File data read successfully')\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while reading uploaded file')\r\n    })\r\n  }\r\n\r\n  //==========================end===================================\r\n  //filter \r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.alloyBasePriceAddition.filter = filterValue.trim().toLowerCase();\r\n    if (this.alloyBasePriceAddition.paginator) {\r\n      this.alloyBasePriceAddition.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  //data validate\r\n  validateDataForm() {\r\n    let data: any = {\r\n      \"billet\": this.alloyBasePriceAddition_data.data,\r\n      \"filename\": this.alloyBasePriceAddition_data.filename\r\n    }\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.post_request_header(this.apiStringURL.validate, data).subscribe((result: any) => {\r\n      console.log(\"success\")\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('success', 'File Sent for Approval')\r\n      this.router.navigate(['/smb/base-price/list'])\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while validating uploaded file')\r\n    })\r\n  }\r\n  back() {\r\n    this.location.back()\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<mat-card>\r\n    <!-- ========================file upload start here==========================  -->\r\n    <div>\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"text-left mt-10 mb-10\">\r\n                    <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"back()\">\r\n                        <i class=\"fa fa-arrow-alt-circle-left\"></i>\r\n                        Back\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row bg-w\">\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12 col-xl-12 col-12\">\r\n                <div class=\"mtb-10\">\r\n                    <div class=\"height-100\">\r\n                        <div id=\"drag_zone\" class=\"file-upload-wrapper\" (drop)=\"dropFiles($event)\"\r\n                            (dragover)='dragOverHandler($event)'>\r\n                            <div class=\"pointCenter\">\r\n                                <div class=\"card-drag\">\r\n                                    <span class=\"header\">\r\n                                        you can drag & drop your file here .. <br>\r\n                                        OR\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <button type=\"button\" color=\"primary\" mat-raised-button\r\n                                        [disabled]=\"selectedFiles.alloyBasePriceAddition.file!=''\"\r\n                                        (click)=\"fileInput2.click()\">\r\n                                        Choose file\r\n                                    </button>\r\n                                    <input hidden type='file' (change)=\"onSelectFile($event)\" #fileInput2 id=\"file\"\r\n                                        accept=\".xls, .xlsx\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <mat-list>\r\n                                <mat-list-item *ngIf=\"selectedFiles.alloyBasePriceAddition.uploadCompleted\">\r\n                                    <mat-icon mat-list-icon>note</mat-icon>\r\n                                    <div mat-line>{{selectedFiles.alloyBasePriceAddition.file?.fileName}}</div>\r\n\r\n                                    <div>\r\n                                        <button mat-icon-button color=\"primary\" (click)=\"uploadFiles()\">\r\n                                            <mat-icon>upload</mat-icon>\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"warn\" (click)=\"deleteFile()\">\r\n                                            <mat-icon>delete_forever</mat-icon>\r\n                                        </button>\r\n                                    </div>\r\n                                    <mat-divider></mat-divider>\r\n                                </mat-list-item>\r\n                            </mat-list>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- ========================file upload end ========================= -->\r\n    <div class=\"row\" *ngIf=\"alloyBasePriceAddition && (selectedFiles.alloyBasePriceAddition.file)\">\r\n        <!-- <div class=\"row\"> -->\r\n        <div class=\"col-6\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"validateDataForm()\">\r\n                    Validate Alloy Surcharge Wire\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput (keyup)=\"applyFilter($event)\" #input>\r\n                    <mat-icon matSuffix>search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"alloyBasePriceAddition && (selectedFiles.alloyBasePriceAddition.file)\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <table mat-table [dataSource]=\"alloyBasePriceAddition\" class=\"custom_table order_table\" >\r\n\r\n                    <ng-container matColumnDef=\"BusinessCode\">\r\n                        <th mat-header-cell *matHeaderCellDef > Business Code </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                    </ng-container>\r\n    \r\n                    <div *ngIf=\"url[3]!='mini-bar'; else mini_bar\">\r\n    \r\n                        <ng-container matColumnDef=\"Product_Division\">\r\n                            <th mat-header-cell *matHeaderCellDef >Product Division </th>\r\n                            <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                        </ng-container>\r\n    \r\n                        <ng-container matColumnDef=\"Product_Level_02\">\r\n                            <th mat-header-cell *matHeaderCellDef > Product Level 02 </th>\r\n                            <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_02}} </td>\r\n                        </ng-container>\r\n    \r\n                    </div>\r\n    \r\n                    <ng-template #mini_bar>\r\n                        <ng-container matColumnDef=\"Customer_Group\">\r\n                            <th mat-header-cell *matHeaderCellDef > Customer Group </th>\r\n                            <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"Market_Customer\">\r\n                            <th mat-header-cell *matHeaderCellDef > Market - Customer </th>\r\n                            <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                        </ng-container>\r\n    \r\n                        <ng-container matColumnDef=\"Beam_Category\">\r\n                            <th mat-header-cell *matHeaderCellDef > Beam Category </th>\r\n                            <td mat-cell *matCellDef=\"let row\"> {{row.Beam_Category}} </td>\r\n                        </ng-container>\r\n                    </ng-template>\r\n    \r\n                    <ng-container matColumnDef=\"Market_Country\">\r\n                        <th mat-header-cell *matHeaderCellDef >Market Country </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                    </ng-container>\r\n    \r\n                    <ng-container matColumnDef=\"document_item_currency\">\r\n                        <th mat-header-cell *matHeaderCellDef > Document Item Currency </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                    </ng-container>\r\n    \r\n                    <ng-container matColumnDef=\"Amount\">\r\n                        <th mat-header-cell *matHeaderCellDef > Amount </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                    </ng-container>\r\n    \r\n                    <ng-container matColumnDef=\"Currency\">\r\n                        <th mat-header-cell *matHeaderCellDef > Currency </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef=\"uploadBasePriceAddition\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: uploadBasePriceAddition;\"></tr>\r\n\r\n\r\n                </table>\r\n                <!-- <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\" [pageSizeOptions]=\"[500,1000,1500,2000]\"\r\n                    #paginators (page)=\"pageEvent = pageChangeCall($event)\">\r\n                </mat-paginator> -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</mat-card>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { profileLberiaItaly } from '../smb-interface.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { WarnPopupComponent } from '../smb-modal/warn-popup/warn-popup.component';\r\nimport { filter } from 'rxjs/operators';\r\nimport { EditPopupComponent } from '../smb-modal/edit-popup/edit-popup.component';\r\nimport { AddPopupComponent } from '../smb-modal/add-popup/add-popup.component';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n@Component({\r\n  selector: 'app-profile-lberia-italy-list',\r\n  templateUrl: './profile-lberia-italy-list.component.html',\r\n  styleUrls: ['./profile-lberia-italy-list.component.scss']\r\n})\r\nexport class ProfileLberiaItalyListComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  filterValue: any = '';\r\n  selection = new SelectionModel<profileLberiaItaly>(true, []);\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.profile_lberia_italy\r\n        this.displayedColumns = [\r\n          'select',\r\n          'sequence_id',\r\n          'BusinessCode',\r\n          'Market_Country',\r\n          'Delivering_Mill',\r\n          'Product_Level_02',\r\n          'Product_Level_05',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          'action'\r\n        ]\r\n      } else {\r\n        this.apiStringURL = this.apiString.profile_lberia_italy_mini_bar\r\n\r\n        this.displayedColumns =\r\n          [\r\n            'select',\r\n            'sequence_id',\r\n            'BusinessCode',\r\n            'Market_Country',\r\n            'Market_Customer_Group',\r\n            'Market_Customer',\r\n            'Delivering_Mill',\r\n            'Product_Level_02',\r\n            'Product_Level_05',\r\n            'Document_Item_Currency',\r\n            'Amount',\r\n            'Currency',\r\n            'action'\r\n          ]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getProfileLberiaItaly()\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getProfileLberiaItaly() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.apiMethod.get_request_header(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<profileLberiaItaly>(resultData.data)\r\n      setTimeout(() => {\r\n        if (this.filterValue) {\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n        this.dataSource.sort = this.sort;\r\n\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getProfileLberiaItaly()\r\n  }\r\n  //filter \r\n  applyFilter(filterValue: any) {\r\n    console.log(filterValue.trim().toLowerCase())\r\n    this.filterValue = filterValue\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getProfileLberiaItaly()\r\n  }\r\n  actionClicked(rowData: any, viewOn: any) {\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"profile_lberia_italy\",\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'sequence_id' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getProfileLberiaItaly()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            fileName: \"profile_lberia_italy\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getProfileLberiaItaly()\r\n      })\r\n    }\r\n\r\n    if (viewOn === 'delete' || viewOn === 'delete-all') {\r\n      let deleteID: any = []\r\n      if (viewOn === 'delete-all' && this.selection.selected.length === 0) {\r\n        return this.apiMethod.popupMessage('error', 'Select At-least on record')\r\n      }\r\n      if (this.selection.selected.length > 0) {\r\n        this.selection.selected.forEach((x: any) => {\r\n          deleteID.push(x.id)\r\n        })\r\n      } else {\r\n        deleteID = rowData\r\n      }\r\n      console.log(deleteID)\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: deleteID,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        if (result != undefined) {\r\n          this.getProfileLberiaItaly()\r\n          this.selection.clear()\r\n        }\r\n      })\r\n    }\r\n  }\r\n  uploadByXlFile() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/profile-lberia-italy/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/profile-lberia-italy/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadInXlFile() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected(): any {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource?.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource?.data);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: profileLberiaItaly): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.sequence_id + 1}`;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-9\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked('','add')\">\r\n                    <i class=\"fa fa-plus-circle\"></i> Profile Iberia & Italy\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadByXlFile()\">\r\n                    <i class=\"fa fa-upload\"></i> Profile Iberia & Italy\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"downloadInXlFile()\">\r\n                    <i class=\"fa fa-download\"></i> Profile Iberia & Italy\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"actionClicked(selection,'delete-all')\">\r\n                    <i class=\"fa fa-trash\"></i> Profile Iberia & Italy\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-3\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter('search')\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter('search')\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"text-center\">\r\n                <div class=\"my_offer_table_container\">\r\n                    <div class=\"text-center \">\r\n                        <div class=\"table-outer-container offer_table_container position-relative \">\r\n                            <div class=\"table-inner-container  hc example-container mat-elevation-z8\">\r\n                                <table mat-table [dataSource]=\"dataSource\">\r\n\r\n                                    <ng-container matColumnDef=\"select\">\r\n                                        <th mat-header-cell *matHeaderCellDef>\r\n                                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                                [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                                [aria-label]=\"checkboxLabel()\">\r\n                                            </mat-checkbox>\r\n                                        </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                                (change)=\"$event ? selection.toggle(row) : null\"\r\n                                                [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\r\n                                            </mat-checkbox>\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"sequence_id\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Sequence ID </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row?.sequence_id}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"BusinessCode\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Business Code </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Product_Level_02\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Product Level 02 </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_02}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Product_Level_05\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Product Level 05 </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_05}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Delivering_Mill\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Delivering Mill </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <div *ngIf=\"url[3]==='mini-bar'\">\r\n\r\n                                        <ng-container matColumnDef=\"Market_Customer_Group\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Market Customer Group\r\n                                            </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer_Group}} </td>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef=\"Market_Customer\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Market Customer\r\n                                            </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                                        </ng-container>\r\n\r\n                                    </div>\r\n\r\n                                    <ng-container matColumnDef=\"Market_Country\">\r\n                                        <th mat-header-cell *matHeaderCellDef>Market Country </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Doc Item Currency </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Amount\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Currency\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Currency </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"action\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'edit')\">edit</mat-icon>\r\n                                            <!-- <mat-icon class=\"mr-10\" (click)=\"actionClicked([row.id],'delete')\">delete\r\n                                            </mat-icon> -->\r\n\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns ;sticky: true\"></tr>\r\n                                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                    <tr class=\"mat-row\" *matNoDataRow>\r\n                                        <td class=\"mat-cell\" colspan=\"4\">No Record found \"{{searchValue}}\"\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </div>\r\n                            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\"\r\n                                [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                                (page)=\"pageEvent = pageChangeCall($event)\">\r\n                            </mat-paginator>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { basePriceAddtionData } from '../../smb-interface.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { EditBasePriceAdditionComponent } from '../edit-base-price-addition/edit-base-price-addition.component';\r\nimport { WarnPopupComponent } from '../../smb-modal/warn-popup/warn-popup.component';\r\nimport { filter } from 'rxjs/operators';\r\nimport { AddPopupComponent } from '../../smb-modal/add-popup/add-popup.component';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { EditPopupComponent } from '../../smb-modal/edit-popup/edit-popup.component';\r\nimport { ThrowStmt } from '@angular/compiler';\r\n@Component({\r\n  selector: 'app-base-price-addition-list',\r\n  templateUrl: './base-price-addition-list.component.html',\r\n  styleUrls: ['./base-price-addition-list.component.scss']\r\n})\r\nexport class BasePriceAdditionListComponent implements OnInit {\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  resultData: any = [];\r\n  filterValue: any = '';\r\n  selection = new SelectionModel<basePriceAddtionData>(true, []);\r\n  test = true\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private _snackBar: MatSnackBar,\r\n    private popup: MatDialog,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.smb\r\n        this.displayedColumns = ['select', 'sequence_id', 'BusinessCode', 'Market_Country', 'Product_Division', 'Product_Level_02', 'Document_Item_Currency', 'Amount', 'Currency', \"action\"]\r\n      } else {\r\n        this.apiStringURL = this.apiString.smb_mini_bar\r\n        this.displayedColumns = ['select', 'sequence_id', 'BusinessCode', 'Customer_Group', 'Market_Customer','Market_Country', 'Beam_Category', 'Document_Item_Currency', 'Amount', 'Currency', \"action\"]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n      this.getBasePriceAddition()\r\n  }\r\n\r\n  getBasePriceAddition() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.resultData = []\r\n    this.totalCount = 0\r\n    this.apiMethod.get_request_header(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      this.resultData = result\r\n      this.totalCount = this.resultData.totalCount\r\n      console.log(this.totalCount)\r\n      this.loadingRouteConfig = false\r\n      window.stop()\r\n      this.dataSource = new MatTableDataSource<basePriceAddtionData>(this.resultData.data)\r\n      setTimeout(() => {\r\n        if (this.filterValue) {\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n        this.dataSource.sort = this.sort;\r\n        window.stop()\r\n\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n      window.stop()\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getBasePriceAddition()\r\n  }\r\n  //filter \r\n  applyFilter(filterValue: any) {\r\n    console.log(filterValue.trim().toLowerCase())\r\n    this.filterValue = filterValue\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getBasePriceAddition()\r\n  }\r\n  basePriceClick(rowData: any, viewOn: any) {\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"price_addition\",\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'sequence_id' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getBasePriceAddition()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            fileName: \"price_addition\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getBasePriceAddition()\r\n      })\r\n    }\r\n\r\n    // viewOn === 'delete' ||\r\n    if ( viewOn === 'delete-all') {\r\n      let deleteID: any = []\r\n      if (viewOn === 'delete-all' && this.selection.selected.length === 0) {\r\n        return this.apiMethod.popupMessage('error', 'Select At-least on record')\r\n      }\r\n      if (this.selection.selected.length > 0) {\r\n        this.selection.selected.forEach((x: any) => {\r\n          deleteID.push(x.id)\r\n        })\r\n      } \r\n      // else {\r\n      //   deleteID = rowData\r\n      // }\r\n      console.log(deleteID)\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: deleteID,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        if (result != undefined) {\r\n          this.getBasePriceAddition()\r\n          this.selection.clear()\r\n        }\r\n      })\r\n\r\n    }\r\n  }\r\n  uploadSmbBasePrice() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/base-price/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/base-price/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadBasePriceAddition() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected(): any {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource?.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource?.data);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: basePriceAddtionData): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.sequence_id + 1}`;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div class=\"row\">\r\n    <div class=\"col-8\">\r\n        <div class=\"text-left mt-10\">\r\n            <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"basePriceClick('','add')\">\r\n                <i class=\"fa fa-plus-circle\"></i> Base Price\r\n            </button>\r\n            <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadSmbBasePrice()\">\r\n                <i class=\"fa fa-upload\"></i> Base Price\r\n            </button>\r\n            <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"downloadBasePriceAddition()\">\r\n                <i class=\"fa fa-download\"></i> Base Price\r\n            </button>\r\n            <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"basePriceClick(selection,'delete-all')\">\r\n                <i class=\"fa fa-trash\"></i> Base Price\r\n            </button>\r\n        </div>\r\n        <!-- <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter()\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter()\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n     </div> -->\r\n     </div>\r\n    <div class=\"col-4\">\r\n        <div class=\"text-right mt-10\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Search</mat-label>\r\n                <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter('search')\">\r\n                <mat-icon matSuffix (click)=\"applyFilter('search')\" class=\"pointer\">search</mat-icon>\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"text-center\">\r\n            <div class=\"my_offer_table_container\">\r\n                <div class=\"text-center \">\r\n                    <div class=\"table-outer-container offer_table_container position-relative \">\r\n                        <div class=\"table-inner-container hc example-container mat-elevation-z8\">\r\n                            <table mat-table [dataSource]=\"dataSource\">\r\n\r\n                                <ng-container matColumnDef=\"select\">\r\n                                    <th mat-header-cell *matHeaderCellDef>\r\n                                        <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                            [aria-label]=\"checkboxLabel()\">\r\n                                        </mat-checkbox>\r\n                                    </th>\r\n                                    <td mat-cell *matCellDef=\"let row\">\r\n                                        <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                            (change)=\"$event ? selection.toggle(row) : null\"\r\n                                            [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\r\n                                        </mat-checkbox>\r\n                                    </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"sequence_id\">\r\n                                    <th mat-header-cell *matHeaderCellDef> Sequence ID </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row?.sequence_id}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"BusinessCode\">\r\n                                    <th mat-header-cell *matHeaderCellDef> Business Code </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                                </ng-container>\r\n\r\n                                <div *ngIf=\"url[3]!='mini-bar'; else mini_bar\">\r\n\r\n                                    <ng-container matColumnDef=\"Product_Division\">\r\n                                        <th mat-header-cell *matHeaderCellDef>Product Division </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Product_Level_02\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Product Level 02\r\n                                        </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_02}} </td>\r\n                                    </ng-container>\r\n\r\n                                </div>\r\n\r\n                                <ng-template #mini_bar>\r\n\r\n                                    <ng-container matColumnDef=\"Customer_Group\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Customer Group </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                                    </ng-container>\r\n                                    <ng-container matColumnDef=\"Market_Customer\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Market Customer\r\n                                        </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Beam_Category\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Beam Category </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Beam_Category}} </td>\r\n                                    </ng-container>\r\n                                </ng-template>\r\n\r\n                                <ng-container matColumnDef=\"Market_Country\">\r\n                                    <th mat-header-cell *matHeaderCellDef>Market Country </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                                    <th mat-header-cell *matHeaderCellDef> Doc Item Currency </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"Amount\">\r\n                                    <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"Currency\">\r\n                                    <th mat-header-cell *matHeaderCellDef> Currency </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"action\">\r\n                                    <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                                    <td mat-cell *matCellDef=\"let row\">\r\n                                        <mat-icon class=\"mr-10\" (click)=\"basePriceClick(row,'edit')\">edit</mat-icon>\r\n                                        <!-- <mat-icon class=\"mr-10\" (click)=\"basePriceClick([row.id],'delete')\">delete\r\n                                        </mat-icon> -->\r\n\r\n                                    </td>\r\n                                </ng-container>\r\n\r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns ;sticky: true\"></tr>\r\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                <tr class=\"mat-row\" *matNoDataRow>\r\n                                    <td class=\"mat-cell\" colspan=\"4\">No Record found \"{{searchValue}}\"\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                        <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\" [pageSizeOptions]=\"[500,1000,1500,2000]\"\r\n                            #paginators (page)=\"pageEvent = pageChangeCall($event)\">\r\n                        </mat-paginator>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","export const rowData = [{\r\n    'BusinessCode': 'test-data-1',\r\n    'Market_Country': 'test-data-2',\r\n    'Document_Item_Currency': 'test-data-3',\r\n    'Amount': 'test-data-4',\r\n    'Currency': 'test-data-5',\r\n    'Delivering_Mill': 'test-data-6',\r\n    'Product_Division': 'test-data-7',\r\n    'Market_Customer': 'test-data-8',\r\n    'Market_Customer_Group': 'test-data-9',\r\n    'Grade_Category': 'test-data-10',\r\n    'Product_Level_02': 'test-data-11',\r\n    'Product_Level_04': 'test-data-12',\r\n    'Product_Level_05': 'test-data-13',\r\n    'Transport_Mode': 'test-data-14',\r\n    'Length': 'test-data-15',\r\n    'Country_Group': 'test-data-16',\r\n    'Zip_Code_Dest': 'test-data-17',\r\n    'Certificate': 'test-data-20',\r\n    'Beam_Category': 'test-data-21',\r\n    \"id_value\": 12\r\n}]","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport * as _ from 'lodash';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { basePriceAddtionData } from '../../smb-interface.service';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { Location } from \"@angular/common\";\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-incoterm-exceptions-upload',\r\n  templateUrl: './incoterm-exceptions-upload.component.html',\r\n  styleUrls: ['./incoterm-exceptions-upload.component.scss']\r\n})\r\nexport class IncotermExceptionsUploadComponent implements OnInit {\r\n  loading: boolean = false\r\n  displayedColumns: string[] = [];\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  tab: any;\r\n  table_data: any;\r\n  data: any = { \"inputaction\": '' };\r\n  incoterm_exceptions: any;\r\n\r\n  selectedFiles: any = { \"incoterm_exceptions\": { file: '', uploadCompleted: false } };\r\n  loadingRouteConfig: boolean = false\r\n  fileEv: any;\r\n  SelectedTab: any;\r\n  incoterm_exceptions_data: any;\r\n  url: any;\r\n  apiStringURL: any;\r\n\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private _snackBar: MatSnackBar,\r\n    private router: Router,\r\n    private location: Location,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.smb\r\n        this.displayedColumns = ['Market_Country', 'Product_Division', 'Incoterm1', 'Customer_Group', 'Beam_Category', 'Delivering_Mill', 'Document_Item_Currency', 'Amount', 'Currency']\r\n\r\n      } else {\r\n        this.apiStringURL = this.apiString.smb_mini_bar\r\n        this.displayedColumns = ['Market_Country', 'Product_Division', 'Incoterm1', 'Customer_Group', 'Beam_Category', 'Delivering_Mill', 'Document_Item_Currency', 'Amount', 'Currency']\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.data = { \"inputaction\": '' }\r\n  }\r\n\r\n\r\n  // ==================== file change event ========================\r\n  dropFiles(ev: any): any {\r\n\r\n    ev.preventDefault();\r\n    this.fileEv = ev\r\n    let data: any = ev.dataTransfer.items[0]\r\n    console.log(data)\r\n    if (data) {\r\n      console.log(\"coming inside\")\r\n      // If dropped items aren't files, reject them\r\n      const allowed_types = [\r\n        'application/vnd.ms-excel',\r\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];\r\n\r\n      if (!_.includes(allowed_types, data.type)) {\r\n        let imageError: any = 'Only xlsx are allowed.';\r\n        this._snackBar.open(imageError, \"\", {\r\n          duration: 4000,\r\n          panelClass: ['error'],\r\n          horizontalPosition: 'end',\r\n          verticalPosition: 'bottom',\r\n        });\r\n        return false;\r\n      }\r\n      let obj: any\r\n      if (data.kind === 'file') {\r\n        let file = data.getAsFile();\r\n        obj = {\r\n          fileName: file.name,\r\n          selectedFile: file,\r\n        }\r\n      }\r\n      this.selectedFiles.incoterm_exceptions = {\r\n        file: obj,\r\n        uploadCompleted: true\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  dragOverHandler(ev: any) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  onSelectFile(event: any) {\r\n    this.fileEv = event\r\n    console.log(event.target.files)\r\n    if (event.target.files && event.target.files[0]) {\r\n      var filesAmount = event.target.files.length;\r\n      for (let i = 0; i < filesAmount; i++) {\r\n        var reader = new FileReader();\r\n        let file: any = event.target.files[i]\r\n        console.log(file)\r\n\r\n        let obj: any = {\r\n          fileName: file.name,\r\n          selectedFile: file\r\n        }\r\n        this.selectedFiles.incoterm_exceptions = {\r\n          file: obj,\r\n          uploadCompleted: true\r\n        }\r\n        // this.selectedFiles.push(obj);\r\n        reader.onload = (event: any) => {\r\n        }\r\n\r\n        reader.readAsDataURL(event.target.files[i]);\r\n        event.target.value = ''\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteFile() {\r\n\r\n    this.incoterm_exceptions = ''\r\n    this.selectedFiles.incoterm_exceptions = {\r\n      file: \"\",\r\n      uploadCompleted: false\r\n    }\r\n    console.log(this.fileEv, \"FILE EV \")\r\n    // this.fileEv.target.value = \"\";\r\n  }\r\n  uploadFiles() {\r\n    const formData = new FormData();\r\n    formData.append(\"filename\", this.selectedFiles.incoterm_exceptions.file.selectedFile)\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.post_request_header(this.apiStringURL.incoterm_exceptions_upload, formData).subscribe((data) => {\r\n      console.log(data)\r\n      let resultData: any = data\r\n      this.loadingRouteConfig = false\r\n      this.incoterm_exceptions_data = resultData\r\n      this.incoterm_exceptions = new MatTableDataSource<basePriceAddtionData>(resultData.data)\r\n      setTimeout(() => {\r\n        this.incoterm_exceptions.paginator = this.paginator;\r\n        this.incoterm_exceptions.sort = this.sort;\r\n      });\r\n      this.apiMethod.popupMessage('success', 'File data read successfully')\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while reading uploaded file')\r\n    })\r\n  }\r\n\r\n  //==========================end===================================\r\n  //filter \r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.incoterm_exceptions.filter = filterValue.trim().toLowerCase();\r\n    if (this.incoterm_exceptions.paginator) {\r\n      this.incoterm_exceptions.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  //data validate\r\n  validateDataForm() {\r\n    let data: any = {\r\n      \"Incoterm_Exceptions\": this.incoterm_exceptions_data.data,\r\n      \"filename\": this.incoterm_exceptions_data.filename\r\n    }\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.post_request_header(this.apiStringURL.incoterm_exceptions_validate, data).subscribe((result: any) => {\r\n      console.log(\"success\")\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('success', 'File Sent for Approval')\r\n      this.back()\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while validating uploaded file')\r\n    })\r\n  }\r\n  back() {\r\n    this.location.back()\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<mat-card>\r\n    <!-- ========================file upload start here==========================  -->\r\n    <div>\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"text-left mt-10 mb-10\">\r\n                    <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"back()\">\r\n                        <i class=\"fa fa-arrow-alt-circle-left\"></i>\r\n                        Back\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row bg-w\">\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12 col-xl-12 col-12\">\r\n                <div class=\"mtb-10\">\r\n                    <div class=\"height-100\">\r\n                        <div id=\"drag_zone\" class=\"file-upload-wrapper\" (drop)=\"dropFiles($event)\"\r\n                            (dragover)='dragOverHandler($event)'>\r\n                            <div class=\"pointCenter\">\r\n                                <div class=\"card-drag\">\r\n                                    <span class=\"header\">\r\n                                        you can drag & drop your file here .. <br>\r\n                                        OR\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <button type=\"button\" color=\"primary\" mat-raised-button\r\n                                        [disabled]=\"selectedFiles.incoterm_exceptions.file!=''\"\r\n                                        (click)=\"fileInput2.click()\">\r\n                                        Choose file\r\n                                    </button>\r\n                                    <input hidden type='file' (change)=\"onSelectFile($event)\" #fileInput2 id=\"file\"\r\n                                        accept=\".xls, .xlsx\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <mat-list>\r\n                                <mat-list-item *ngIf=\"selectedFiles.incoterm_exceptions.uploadCompleted\">\r\n                                    <mat-icon mat-list-icon>note</mat-icon>\r\n                                    <div mat-line>{{selectedFiles.incoterm_exceptions.file?.fileName}}</div>\r\n\r\n                                    <div>\r\n                                        <button mat-icon-button color=\"primary\" (click)=\"uploadFiles()\">\r\n                                            <mat-icon>upload</mat-icon>\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"warn\" (click)=\"deleteFile()\">\r\n                                            <mat-icon>delete_forever</mat-icon>\r\n                                        </button>\r\n                                    </div>\r\n                                    <mat-divider></mat-divider>\r\n                                </mat-list-item>\r\n                            </mat-list>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- ========================file upload end ========================= -->\r\n    <div class=\"row\" *ngIf=\"incoterm_exceptions && (selectedFiles.incoterm_exceptions.file)\">\r\n        <!-- <div class=\"row\"> -->\r\n        <div class=\"col-6\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"validateDataForm()\">\r\n                    Validate Alloy Surcharge Wire\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput (keyup)=\"applyFilter($event)\" #input>\r\n                    <mat-icon matSuffix>search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"incoterm_exceptions && (selectedFiles.incoterm_exceptions.file)\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <table mat-table [dataSource]=\"incoterm_exceptions\" class=\"custom_table order_table\" >\r\n\r\n                    <ng-container matColumnDef=\"Market_Country\">\r\n                        <th mat-header-cell *matHeaderCellDef > Market Country </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Product_Division\">\r\n                        <th mat-header-cell *matHeaderCellDef >Product Division </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Incoterm1\">\r\n                        <th mat-header-cell *matHeaderCellDef > Incoterm1 </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Incoterm1}} </td>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"Customer_Group\">\r\n                        <th mat-header-cell *matHeaderCellDef > Customer Group </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Beam_Category\">\r\n                        <th mat-header-cell *matHeaderCellDef > Beam Category </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Beam_Category}} </td>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"Delivering_Mill\">\r\n                        <th mat-header-cell *matHeaderCellDef > Delivering Mill </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                        <th mat-header-cell *matHeaderCellDef > Doc Item Cur</th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Amount\">\r\n                        <th mat-header-cell *matHeaderCellDef > Amount </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Currency\">\r\n                        <th mat-header-cell *matHeaderCellDef > Currency </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                    </ng-container>\r\n\r\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                    <tr class=\"mat-row\" *matNoDataRow>\r\n                        <td class=\"mat-cell\" colspan=\"4\">No Record Found !\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n                <!-- <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\" [pageSizeOptions]=\"[500,1000,1500,2000]\"\r\n                    #paginators (page)=\"pageEvent = pageChangeCall($event)\">\r\n                </mat-paginator> -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</mat-card>","\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { profileData } from '../smb-interface.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { WarnPopupComponent } from '../smb-modal/warn-popup/warn-popup.component';\r\nimport { filter } from 'rxjs/operators';\r\nimport { EditPopupComponent } from '../smb-modal/edit-popup/edit-popup.component';\r\nimport { AddPopupComponent } from '../smb-modal/add-popup/add-popup.component';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n@Component({\r\n  selector: 'app-profile-list',\r\n  templateUrl: './profile-list.component.html',\r\n  styleUrls: ['./profile-list.component.scss']\r\n})\r\nexport class ProfileListComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  filterValue: any = '';\r\n  selection = new SelectionModel<profileData>(true, []);\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(\"myurl = \",router.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.profile\r\n        this.displayedColumns = [\r\n          'select',\r\n          'sequence_id',\r\n          'BusinessCode',\r\n          'Market_Country',\r\n          'Product_Division',\r\n          'Product_Level_04',\r\n          'Product_Level_05',\r\n          'Product_Level_02',\r\n          'Delivering_Mill',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          'action'\r\n        ]\r\n      } else {\r\n        this.apiStringURL = this.apiString.profile_mini_bar\r\n        this.displayedColumns = [\r\n          'select',\r\n          'sequence_id',\r\n          'BusinessCode',\r\n          'Customer_Group',\r\n          'Market_Customer',\r\n          'Market_Country',\r\n          'Product_Level_04',\r\n          'Product_Level_05',\r\n          'Product_Level_02',\r\n          'Delivering_Mill',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          'action'\r\n        ]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getProfile()\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getProfile() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.apiMethod.get_request_header(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<profileData>(resultData.data)\r\n      setTimeout(() => {\r\n        if (this.filterValue) {\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n        this.dataSource.sort = this.sort;\r\n\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getProfile()\r\n  }\r\n  //filter \r\n  applyFilter(filterValue: any) {\r\n    console.log(filterValue.trim().toLowerCase())\r\n    this.filterValue = filterValue\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getProfile()\r\n  }\r\n  actionClicked(rowData: any, viewOn: any) {\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"profile\",\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'sequence_id' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getProfile()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            fileName: \"profile\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getProfile()\r\n      })\r\n    }\r\n\r\n    if (viewOn === 'delete' || viewOn === 'delete-all') {\r\n      let deleteID: any = []\r\n      if (viewOn === 'delete-all' && this.selection.selected.length === 0) {\r\n        return this.apiMethod.popupMessage('error', 'Select At-least on record')\r\n      }\r\n      if (this.selection.selected.length > 0) {\r\n        this.selection.selected.forEach((x: any) => {\r\n          deleteID.push(x.id)\r\n        })\r\n      } else {\r\n        deleteID = rowData\r\n      }\r\n      console.log(deleteID)\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: deleteID,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        if (result != undefined) {\r\n          this.getProfile()\r\n          this.selection.clear()\r\n        }\r\n      })\r\n    }\r\n  }\r\n  uploadByXlFile() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/profile/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/profile/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadInXlFile() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected(): any {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource?.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource?.data);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: profileData): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.sequence_id + 1}`;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked('','add')\">\r\n                    <i class=\"fa fa-plus-circle\"></i> Profile\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadByXlFile()\">\r\n                    <i class=\"fa fa-upload\"></i> Profile\r\n                </button>\r\n                <button type=\"button\" color=\"primary\"  class=\"mr-10\" mat-raised-button (click)=\"downloadInXlFile()\">\r\n                    <i class=\"fa fa-download\"></i> Profile\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"actionClicked(selection,'delete-all')\">\r\n                    <i class=\"fa fa-trash\"></i> Profile\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter('search')\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter('search')\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"text-center\">\r\n                <div class=\"my_offer_table_container\">\r\n                    <div class=\"text-center \">\r\n                        <div class=\"table-outer-container offer_table_container position-relative \">\r\n                            <div class=\"table-inner-container  hc example-container mat-elevation-z8\">\r\n                                <table mat-table [dataSource]=\"dataSource\" >\r\n\r\n                                    <ng-container matColumnDef=\"select\">\r\n                                        <th mat-header-cell *matHeaderCellDef>\r\n                                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                                [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                                [aria-label]=\"checkboxLabel()\">\r\n                                            </mat-checkbox>\r\n                                        </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                                (change)=\"$event ? selection.toggle(row) : null\"\r\n                                                [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\r\n                                            </mat-checkbox>\r\n                                        </td>\r\n                                    </ng-container>\r\n    \r\n                                    <ng-container matColumnDef=\"sequence_id\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Sequence ID </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row?.sequence_id}} </td>\r\n                                    </ng-container>\r\n    \r\n                                    <ng-container matColumnDef=\"BusinessCode\">\r\n                                        <th mat-header-cell *matHeaderCellDef > Business Code </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Product_Level_02\">\r\n                                        <th mat-header-cell *matHeaderCellDef > Product Level 02 </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_02}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Product_Level_04\">\r\n                                        <th mat-header-cell *matHeaderCellDef > Product Level 04 </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_04}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Product_Level_05\">\r\n                                        <th mat-header-cell *matHeaderCellDef > Product Level 05 </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_05}} </td>\r\n                                    </ng-container>\r\n\r\n\r\n                                    <ng-container matColumnDef=\"Delivering_Mill\">\r\n                                        <th mat-header-cell *matHeaderCellDef > Delivering Mill </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <div *ngIf=\"url[3]!='mini-bar'; else mini_bar\">\r\n                                        <ng-container matColumnDef=\"Product_Division\">\r\n                                            <th mat-header-cell *matHeaderCellDef > Product Division\r\n                                            </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <ng-template #mini_bar>\r\n\r\n                                        <ng-container matColumnDef=\"Market_Customer\">\r\n                                            <th mat-header-cell *matHeaderCellDef > Market Customer\r\n                                            </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef=\"Customer_Group\">\r\n                                            <th mat-header-cell *matHeaderCellDef > Customer Group </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                                        </ng-container>\r\n                                    </ng-template>\r\n                                    <ng-container matColumnDef=\"Market_Country\">\r\n                                        <th mat-header-cell *matHeaderCellDef >Market Country </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                                        <th mat-header-cell *matHeaderCellDef > Doc Item Currency </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Amount\">\r\n                                        <th mat-header-cell *matHeaderCellDef > Amount </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Currency\">\r\n                                        <th mat-header-cell *matHeaderCellDef > Currency </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"action\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'edit')\">edit</mat-icon>\r\n                                            <!-- <mat-icon class=\"mr-10\" (click)=\"actionClicked([row.id],'delete')\">delete\r\n                                            </mat-icon> -->\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns ;sticky: true\"></tr>\r\n                                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                    <tr class=\"mat-row\" *matNoDataRow>\r\n                                        <td class=\"mat-cell\" colspan=\"4\"> No Record found \"{{searchValue}}\" </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </div>\r\n                            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\"\r\n                                [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                                (page)=\"pageEvent = pageChangeCall($event)\">\r\n                            </mat-paginator>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { freightParityData } from '../smb-interface.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { WarnPopupComponent } from '../smb-modal/warn-popup/warn-popup.component';\r\nimport { filter } from 'rxjs/operators';\r\nimport { rowData } from 'src/app/sample';\r\nimport { EditPopupComponent } from '../smb-modal/edit-popup/edit-popup.component';\r\nimport { AddPopupComponent } from '../smb-modal/add-popup/add-popup.component';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n@Component({\r\n  selector: 'app-freight-parity-list',\r\n  templateUrl: './freight-parity-list.component.html',\r\n  styleUrls: ['./freight-parity-list.component.scss']\r\n})\r\nexport class FreightParityListComponent implements OnInit {\r\n  data: any = rowData\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  filterValue: any = '';\r\n  selection = new SelectionModel<freightParityData>(true, []);\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.freight_parity\r\n        this.displayedColumns = [\r\n          'select',\r\n          'sequence_id',\r\n          \"Delivering_Mill\",\r\n          \"Market_Country\",\r\n          \"Zip_Code_Dest\",\r\n          \"Product_Division\",\r\n          \"Document_Item_Currency\",\r\n          \"Amount\",\r\n          \"Currency\",\r\n          \"action\"\r\n        ]\r\n      } else {\r\n        this.apiStringURL = this.apiString.freight_parity_mini_bar\r\n        this.displayedColumns = [\r\n          'select',\r\n          'sequence_id',\r\n          \"Delivering_Mill\",\r\n          \"Market_Country\",\r\n          \"Market_Customer_Group\",\r\n          'Market_Customer',\r\n          \"Zip_Code_Dest\",\r\n          \"Product_Division\",\r\n          \"Document_Item_Currency\",\r\n          \"Amount\",\r\n          \"Currency\",\r\n          \"action\"\r\n        ]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getFreightParity()\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getFreightParity() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    // this.dataSource = new MatTableDataSource<freightParityData>(this.data)\r\n    this.apiMethod.get_request_header(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<freightParityData>(resultData.data)\r\n      setTimeout(() => {\r\n        if (this.filterValue) {\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n        this.dataSource.sort = this.sort;\r\n\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getFreightParity()\r\n  }\r\n  //filter \r\n  applyFilter(filterValue: any) {\r\n    console.log(filterValue.trim().toLowerCase())\r\n    this.filterValue = filterValue\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getFreightParity()\r\n  }\r\n  actionClicked(rowData: any, viewOn: any) {\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"freight_parity\",\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'sequence_id' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getFreightParity()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            fileName: \"freight_parity\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getFreightParity()\r\n      })\r\n    }\r\n\r\n    if (viewOn === 'delete' || viewOn === 'delete-all') {\r\n      let deleteID: any = []\r\n      if (viewOn === 'delete-all' && this.selection.selected.length === 0) {\r\n        return this.apiMethod.popupMessage('error', 'Select At-least on record')\r\n      }\r\n      if (this.selection.selected.length > 0) {\r\n        this.selection.selected.forEach((x: any) => {\r\n          deleteID.push(x.id)\r\n        })\r\n      } else {\r\n        deleteID = rowData\r\n      }\r\n      console.log(deleteID)\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: deleteID,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        if (result != undefined) {\r\n          this.getFreightParity()\r\n          this.selection.clear()\r\n\r\n        }\r\n      })\r\n    }\r\n  }\r\n  uploadFreightParity() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/freight-parity/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/freight-parity/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadFreightParity() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected(): any {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource?.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource?.data);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: freightParityData): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.sequence_id + 1}`;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked('','add')\">\r\n                    <i class=\"fa fa-plus-circle\"></i> Freight Parity\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadFreightParity()\">\r\n                    <i class=\"fa fa-upload\"></i> Freight Parity\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"downloadFreightParity()\">\r\n                    <i class=\"fa fa-download\"></i> Freight Parity\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"actionClicked(selection,'delete-all')\">\r\n                    <i class=\"fa fa-trash\"></i> Freight Parity\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter('search')\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter('search')\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"text-center\">\r\n                <div class=\"my_offer_table_container\">\r\n                    <div class=\"text-center \">\r\n                        <div class=\"table-outer-container offer_table_container position-relative \">\r\n                            <div class=\"table-inner-container  hc example-container mat-elevation-z8\">\r\n                                <table mat-table [dataSource]=\"dataSource\">\r\n\r\n                                    <ng-container matColumnDef=\"select\">\r\n                                        <th mat-header-cell *matHeaderCellDef>\r\n                                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                                [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                                [aria-label]=\"checkboxLabel()\">\r\n                                            </mat-checkbox>\r\n                                        </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                                (change)=\"$event ? selection.toggle(row) : null\"\r\n                                                [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\r\n                                            </mat-checkbox>\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"sequence_id\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Sequence ID </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row?.sequence_id}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Product_Division\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Product Division </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Delivering_Mill\">\r\n                                        <th mat-header-cell *matHeaderCellDef>Delivering Mill </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <div *ngIf=\"url[3]==='mini-bar'\">\r\n\r\n                                        <ng-container matColumnDef=\"Market_Customer\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Market Customer </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Market_Customer_Group\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Market Customer Group\r\n                                            </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer_Group}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <ng-container matColumnDef=\"Zip_Code_Dest\">\r\n                                        <th mat-header-cell *matHeaderCellDef>Zip Code (Dest) </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Zip_Code_Dest}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Market_Country\">\r\n                                        <th mat-header-cell *matHeaderCellDef>Market Country </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Doc Item Currency </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Amount\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Currency\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Currency </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"action\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'edit')\">edit</mat-icon>\r\n                                            <!-- <mat-icon class=\"mr-10\" (click)=\"actionClicked([row.id],'delete')\">delete\r\n                                            </mat-icon> -->\r\n\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns ;sticky: true\"></tr>\r\n                                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                    <tr class=\"mat-row\" *matNoDataRow>\r\n                                        <td class=\"mat-cell\" colspan=\"4\">No Record Found !\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </div>\r\n                            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\"\r\n                                [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                                (page)=\"pageEvent = pageChangeCall($event)\">\r\n                            </mat-paginator>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { range } from 'lodash';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-popup',\r\n  templateUrl: './edit-popup.component.html',\r\n  styleUrls: ['./edit-popup.component.scss']\r\n})\r\nexport class EditPopupComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  updateRecord: any = FormGroup\r\n  localData:any\r\n  url: any;\r\n  Username:any;\r\n  \r\n  user:any;\r\n  localdata:any;\r\n  apiStringURL: any;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EditPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private fb: FormBuilder,\r\n    private router: Router\r\n  ) {\r\n\r\n    if (this.data.fileName === 'price_addition') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.smb_mini_bar : this.apiString.smb\r\n    } else if (this.data.fileName === 'incoterm_exceptions') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.incoterm_exceptions_mini_bar : this.apiString.incoterm_exceptions\r\n    } else if (this.data.fileName === 'certificate') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.certificate_mini_bar : this.apiString.certificate\r\n    } else if (this.data.fileName === 'freight_parity') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.freight_parity_mini_bar : this.apiString.freight_parity\r\n    } else if (this.data.fileName === 'grade') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.grade_mini_bar : this.apiString.grade\r\n    } else if (this.data.fileName === 'length_logistic') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.length_logistic_mini_bar : this.apiString.length_logistic\r\n    } else if (this.data.fileName === 'length_production') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.length_production_mini_bar : this.apiString.length_production\r\n    } else if (this.data.fileName === 'profile') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.profile_mini_bar : this.apiString.profile\r\n    } else if (this.data.fileName === 'profile_lberia_italy') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.profile_lberia_italy_mini_bar : this.apiString.profile_lberia_italy\r\n    } else if (this.data.fileName === 'transport_mode') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.transport_mode_mini_bar : this.apiString.transport_mode\r\n    } else if (this.data.fileName === 'delivery_mill'){\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.delivery_mill_mini_bar : this.apiString.delivery_mill\r\n    } else if (this.data.fileName === 'minton_leans') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.minton_mini_bar : this.apiString.minton\r\n    }  else if (this.data.fileName === 'price_count'){\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.pricecount_mini_bar : this.apiString.pricecount\r\n    } else if (this.data.fileName === 'dis_earlyptm') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.dis_earlyptm_mini_bar : this.apiString.dis_earlyptm\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n\r\n    console.log(this.url, this.data)\r\n    // this.data.fieldValue.push('sequence_id')\r\n\r\n    this.apiMethod.get_request_header(this.data.url).subscribe(result => {\r\n      // console.log(result)\r\n      console.log(\"FieldValue = \",this.data.fieldValue)\r\n    })\r\n    var objects: any = {};\r\n    this.data.fieldValue.forEach((element: any, index: any) => {\r\n      objects[element] = []\r\n\r\n       \r\n      objects.table_name = this.data.table_name\r\n      objects.Username=this.user\r\n      \r\n      \r\n      if (index === this.data.fieldValue.length - 1) {\r\n        objects['id_value'] = []\r\n        \r\n      }\r\n    });\r\n    console.log(objects)\r\n    this.updateRecord = this.fb.group(objects)\r\n    console.log(this.updateRecord)\r\n    setTimeout(() => {\r\n      this.patchValue()\r\n    })\r\n  }\r\n  patchValue() {\r\n    this.localData = localStorage.getItem('arc-userDetails')\r\n       var user = JSON.parse(this.localData)\r\n       this.user=user.user['user_name']\r\n       \r\n       console.log(this.user)\r\n\r\n    this.updateRecord.patchValue(this.data.content)\r\n    this.updateRecord.patchValue({\r\n      \"id_value\": this.data.content.id\r\n    })\r\n  }\r\n  closeModel() {\r\n    this.dialogRef.close()\r\n\r\n  }\r\n \r\n\r\n  editRecord() {\r\n    \r\n\r\n    let status = true\r\n    let l = this.data.fieldValue.length\r\n    for(let i in range(l)){\r\n      if(this.updateRecord.value[this.data.fieldValue[i]]==''){\r\n        status = false\r\n      }\r\n    }\r\n    if(status == true){\r\n      \r\n      delete this.updateRecord.value.action\r\n      let tablename = {tablename : this.data.tablename}\r\n      let Username={Username:this.user}\r\n     \r\n\r\n      Object.assign(this.updateRecord.value,tablename)\r\n     \r\n      Object.assign(this.updateRecord.value,Username)\r\n     \r\n      \r\n      console.group(this.updateRecord.value)\r\n      this.loadingRouteConfig = true\r\n      this.apiMethod.post_request_header(this.data.updateURL, this.updateRecord.value).subscribe(result => {\r\n        console.log(result)\r\n        this.loadingRouteConfig = false\r\n        this.apiMethod.popupMessage('success', ' Reord Sent for Approval')\r\n        this.closeModel()\r\n      }, error => {\r\n        console.log(error)\r\n        this.loadingRouteConfig = false\r\n        this.apiMethod.popupMessage('error', 'Error While Updating Record')\r\n        this.closeModel()\r\n      })\r\n    }\r\n    else {\r\n      this.apiMethod.popupMessage('error','All Fields Are Mandatory')\r\n    }\r\n    \r\n  }\r\n  removeUnderScore(value: any) {\r\n    return value.split('_').join(\" \");\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div class=\"pd-card\">\r\n    <span *ngIf=\"data.fieldValue.length>0\">\r\n        <form [formGroup]=\"updateRecord\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12\" *ngFor=\"let form of data?.fieldValue\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>{{removeUnderScore(form)}}</mat-label>\r\n                        <input *ngIf=\"form!='Unit'\" matInput type=\"text\" formControlName=\"{{form}}\" required>\r\n                        <input *ngIf=\"form=='Unit'\" matInput type=\"text\" formControlName=\"{{form}}\" readonly >\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </span>\r\n\r\n    <div class=\" text-right\">\r\n        <button mat-stroked-button class=\"mr-10\" (click)=\"closeModel()\">\r\n            Close\r\n        </button>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"updateRecord.invalid\" cdkFocusInitial (click)=\"editRecord()\">\r\n            Update\r\n        </button>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatTabBody } from '@angular/material/tabs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { lengthLogisticData } from '../../smb-interface.service';\r\n\r\n@Component({\r\n  selector: 'app-record-approval',\r\n  templateUrl: './record-approval.component.html',\r\n  styleUrls: ['./record-approval.component.scss']\r\n})\r\nexport class RecordApprovalComponent implements OnInit {\r\n  queryParam: any;\r\n  breadCrumblocationsList: any = []\r\n  loadingRouteConfig: boolean = false\r\n  param1: any;\r\n  displayedColumns:any = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  col:any;\r\n  filterValue: any = '';\r\n  resultValue: any = [];\r\n  resultData: any = []\r\n  old_dataSource:any;\r\n  flag: any;\r\n  color:any = \"not-changed\"\r\n\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.updateBreadCrumb()\r\n    this.route.queryParams.subscribe((param: any) => {\r\n      console.log(\"Record\", param)\r\n      this.queryParam = param\r\n    })\r\n    console.log(this.queryParam)\r\n    this.getApprovalRecord()\r\n    this.param1 = this.route.snapshot.params.id_value;\r\n    console.log(this.param1)\r\n\r\n  }\r\n\r\n  getApprovalRecord() {\r\n    this.loadingRouteConfig = true\r\n    this.resultValue = []\r\n    this.apiMethod.get_request_header_Param(this.apiString.getAprovalRecord, this.queryParam).subscribe((result: any) => {\r\n      console.log(result)\r\n      this.loadingRouteConfig = false\r\n      this.col=result.lis\r\n      this.resultData = result\r\n      this.resultValue = result.data\r\n      this.flag = this.resultData.data[0].flag\r\n      \r\n      if (this.resultData.data.length === 0 || this.resultData.data.length === undefined) {\r\n        return\r\n      }\r\n      this.resultData.data.forEach((e: any) => {\r\n        // delete e.flag;\r\n      });   \r\n\r\n      // Removing Flag column\r\n      this.col.forEach((element:any,index:any)=>{\r\n        if(element=='flag') this.col.splice(index);\r\n      });\r\n      this.displayedColumns = this.col\r\n      console.log(\"columns : \",this.displayedColumns)\r\n      this.totalCount = this.resultData.totalCount\r\n      this.dataSource = new MatTableDataSource<any>(this.resultData.data)\r\n      this.old_dataSource = new MatTableDataSource<any>(this.resultData.old_json)\r\n      setTimeout(() => {\r\n        if (this.filterValue) {\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n        this.dataSource.sort = this.sort;\r\n\r\n      })\r\n    }, error => {\r\n      console.log(error)\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getApprovalRecord()\r\n  }\r\n  //filter \r\n  applyFilter(filterValue: any) {\r\n    console.log(filterValue.trim().toLowerCase())\r\n    this.filterValue = filterValue\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getApprovalRecord()\r\n  }\r\n  approved() {\r\n    this.loadingRouteConfig = true\r\n    let userDetails: any = localStorage.getItem('arc-userDetails')\r\n    this.apiMethod.post_request_header(this.apiString.aproveRecords, { tablename: this.queryParam['tablename'], data: this.resultValue, email: JSON.parse(userDetails).user.email }).subscribe(result => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('success', 'Record approved successfully')\r\n      this.getApprovalRecord()\r\n    }, error => {\r\n      console.log(error)\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n\r\n    })\r\n  }\r\n  reject() {\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.post_request_header(this.apiString.rejectRecords, this.queryParam).subscribe(result => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('success', 'Record Rejected  successfully')\r\n      this.getApprovalRecord()\r\n    }, error => {\r\n      console.log(error)\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n\r\n    })\r\n  }\r\n  updateBreadCrumb() {\r\n    this.breadCrumblocationsList = [\r\n      {\r\n        'locationName': 'Approval List',\r\n        'link': '',\r\n        'currentPage': true\r\n      }\r\n    ];\r\n\r\n    window.scrollTo(0, 0);\r\n    console.log(\"breadCrumblocationsList\", this.breadCrumblocationsList);\r\n  }\r\n  redirect(link: any) {\r\n    console.log(link);\r\n    if (link != undefined && link != '') {\r\n      this.router.navigateByUrl(link);\r\n    }\r\n  }\r\n  removeUnderScore(value: any) {\r\n    return value.split('_').join(\" \");\r\n  }\r\n  //Changed colums color ncode\r\n  colorcode(ind:any,col:any){\r\n    for(let i=0;i<this.resultValue.length;i++){\r\n      var status=this.resultValue[i].changed.includes(col)\r\n      if(status==true){\r\n        if(ind==i){\r\n          this.color = \"changed\"\r\n          return this.color\r\n        }\r\n      }    \r\n    }\r\n    this.color=\"not-changed\"\r\n    return this.color\r\n }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n\r\n<div *ngIf=\"breadCrumblocationsList\" class=\"breadcrumb\">\r\n    <div class=\"row pd-10 bg-w\">\r\n        <div class=\"col-sm-12 col-lg-12 col-md-12 col-xl-12\">\r\n\r\n            <font *ngFor=\"let data of breadCrumblocationsList\" class=\"addArrow\">\r\n\r\n                <a role=\"button\"\r\n                    [ngClass]=\"{'breadCrumbBlue addArroww': data?.currentPage === true, 'breadCrumb addArroww':data?.currentPage === false }\"\r\n                    (click)=\"redirect(data.link)\">\r\n                    {{data.locationName}}\r\n                </a>\r\n            </font>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"(this.resultData?.data?.length != 0 && this.resultData?.data?.length != undefined && flag=='update')\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-2\">\r\n        <h3  style=\"color:#e53606;margin-top:20px;\"><b>&emsp;NEW</b></h3>\r\n        </div>\r\n        <div class=\"col-md-10\">\r\n            <div class=\"text-right mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"approved()\">\r\n                    <i class=\"fa fa-check-circle\"></i> Approve\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"reject()\">\r\n                    <i class=\"fa fa-times-circle\"></i> Reject\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"text-center\">\r\n                <div class=\"my_offer_table_container\">\r\n                    <div class=\"text-center \">\r\n                        <div class=\"table-outer-container offer_table_container position-relative \">\r\n                            <div class=\"table-inner-container example-container mat-elevation-z8\" style=\"margin-bottom:2em\">\r\n                                <table mat-table [dataSource]=\"dataSource\">\r\n                                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n                                    <tr mat-row  *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                                    <ng-container *ngFor=\"let column of displayedColumns\">   \r\n                                        <ng-container  [matColumnDef]=\"column\">\r\n                                            <th  mat-header-cell *matHeaderCellDef style=\"text-transform: capitalize;\">{{\r\n                                                removeUnderScore(column) }}</th>\r\n                                            <ng-container *matCellDef=\"let row;let ind=index\" >\r\n                                                    <td mat-cell  class={{colorcode(ind,column)}} >{{row[column]}}</td>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"(this.resultData?.data?.length != 0 && this.resultData?.data?.length != undefined  && flag=='update')\">\r\n    <!-- <p class=\"text-center\" style=\"font-family: semi-bold;\">Old Records</p> -->\r\n    <h3 style=\"color:#e53606;\"><b>&emsp;&nbsp;&nbsp; PREVIOUS </b></h3>\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"text-center\">\r\n                <div class=\"my_offer_table_container\">\r\n                    <div class=\"text-center \">\r\n                        <div class=\"table-outer-container offer_table_container position-relative \">\r\n                            <div class=\"table-inner-container  example-container mat-elevation-z8\">\r\n                                <table mat-table [dataSource]=\"old_dataSource\">\r\n                                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n                                    <tr mat-row style=\"background-color: rgb(254, 223, 223);\" *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                                    <ng-container *ngFor=\"let column of displayedColumns\">\r\n                                        <ng-container [matColumnDef]=\"column\">\r\n                                            <th mat-header-cell *matHeaderCellDef style=\"text-transform: capitalize;\">{{\r\n                                                removeUnderScore(column) }}</th>\r\n                                            <td mat-cell *matCellDef=\"let row\">{{row[column]}}</td>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"(this.resultData?.data?.length != 0 && this.resultData?.data?.length != undefined  && (flag=='add' || flag=='delete'))\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"text-right mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"approved()\">\r\n                    <i class=\"fa fa-check-circle\"></i> Approve\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"reject()\">\r\n                    <i class=\"fa fa-times-circle\"></i> Reject\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"text-center\">\r\n                <div class=\"my_offer_table_container\">\r\n                    <div class=\"text-center \">\r\n                        <div class=\"table-outer-container offer_table_container position-relative \">\r\n                            <div class=\"table-inner-container  example-container mat-elevation-z8\">\r\n                                <table mat-table [dataSource]=\"dataSource\">\r\n                                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n                                    <tr mat-row style=\"background-color: rgb(254, 223, 223);\" *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                                    <ng-container *ngFor=\"let column of displayedColumns\">\r\n                                        <ng-container [matColumnDef]=\"column\">\r\n                                            <th mat-header-cell *matHeaderCellDef style=\"text-transform: capitalize;\">{{\r\n                                                removeUnderScore(column) }}</th>\r\n                                                <div *ngIf=\"flag=='add'; else delete\">\r\n                                                    <td mat-cell class=\"not-changed\" *matCellDef=\"let row\">{{row[column]}}</td>\r\n                                                </div>\r\n                                                <ng-template #delete>\r\n                                                    <td mat-cell class=\"changed\" *matCellDef=\"let row\">{{row[column]}}</td>\r\n                                                </ng-template>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"(this.resultData?.data?.length === 0 || this.resultData?.data?.length === undefined)\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"text-center\">\r\n                <p>No Record Found !!</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { deliveryMillModeData } from '../smb-interface.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { WarnPopupComponent } from '../smb-modal/warn-popup/warn-popup.component';\r\nimport { filter } from 'rxjs/operators';\r\nimport { EditPopupComponent } from '../smb-modal/edit-popup/edit-popup.component';\r\nimport { AddPopupComponent } from '../smb-modal/add-popup/add-popup.component';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n@Component({\r\n  selector: 'app-delivery-mill-list',\r\n  templateUrl: './delivery-mill-list.component.html',\r\n  styleUrls: ['./delivery-mill-list.component.scss']\r\n})\r\nexport class DeliveryMillListComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  filterValue: any = '';\r\n  selection = new SelectionModel<deliveryMillModeData>(true, []);\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.delivery_mill\r\n        this.displayedColumns = [\r\n          'select',\r\n          'sequence_id',\r\n          'BusinessCode',\r\n          'Market_Country',\r\n          'Delivering_Mill',\r\n          'Product_Division',\r\n          'Beam_Category',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          \"action\"\r\n        ]\r\n      } else {\r\n        this.apiStringURL = this.apiString.delivery_mill_mini_bar\r\n        this.displayedColumns = [\r\n          'select',\r\n          'sequence_id',\r\n          'Market_Country',\r\n          'Market_Customer_Group',\r\n          'Market_Customer',\r\n          'Delivering_Mill',\r\n          'Product_Division',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          \"action\"\r\n        ]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getDeliveryMill()\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getDeliveryMill() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.apiMethod.get_request_header(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<deliveryMillModeData>(resultData.data)\r\n      setTimeout(() => {\r\n        if (this.filterValue) {\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n        this.dataSource.sort = this.sort;\r\n\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getDeliveryMill()\r\n  }\r\n  //filter \r\n  applyFilter(filterValue: any) {\r\n    console.log(filterValue.trim().toLowerCase())\r\n    this.filterValue = filterValue\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getDeliveryMill()\r\n  }\r\n  actionClicked(rowData: any, viewOn: any) {\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"delivery_mill\",\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'sequence_id' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getDeliveryMill()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            fileName: \"delivery_mill\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getDeliveryMill()\r\n      })\r\n    }\r\n\r\n    if (viewOn === 'delete' || viewOn === 'delete-all') {\r\n      let deleteID: any = []\r\n      if (viewOn === 'delete-all' && this.selection.selected.length === 0) {\r\n        return this.apiMethod.popupMessage('error', 'Select At-least on record')\r\n      }\r\n      if (this.selection.selected.length > 0) {\r\n        this.selection.selected.forEach((x: any) => {\r\n          deleteID.push(x.id)\r\n        })\r\n      } else {\r\n        deleteID = rowData\r\n      }\r\n      console.log(deleteID)\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: deleteID,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        if (result != undefined) {\r\n          this.getDeliveryMill()\r\n          this.selection.clear()\r\n        }\r\n      })\r\n    }\r\n  }\r\n  uploadFreightParity() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/delivery-mill/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/delivery-mill/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadFreightParity() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected(): any {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource?.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource?.data);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: deliveryMillModeData): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.sequence_id + 1}`;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked('','add')\">\r\n                    <i class=\"fa fa-plus-circle\"></i> Delivery Mill\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadFreightParity()\">\r\n                    <i class=\"fa fa-upload\"></i> Delivery Mill\r\n                </button>\r\n                <button type=\"button\" color=\"primary\"  class=\"mr-10\" mat-raised-button (click)=\"downloadFreightParity()\">\r\n                    <i class=\"fa fa-download\"></i> Delivery Mill\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"actionClicked(selection,'delete-all')\">\r\n                    <i class=\"fa fa-trash\"></i> Delivery Mill\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter('search')\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter('search')\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"text-center\">\r\n                <div class=\"my_offer_table_container\">\r\n                    <div class=\"text-center \">\r\n                        <div class=\"table-outer-container offer_table_container position-relative \">\r\n                            <div class=\"table-inner-container  hc example-container mat-elevation-z8\">\r\n                                <table mat-table [dataSource]=\"dataSource\" class=\"custom_table order_table\">\r\n\r\n                                    <ng-container matColumnDef=\"select\">\r\n                                        <th mat-header-cell *matHeaderCellDef>\r\n                                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                                [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                                [aria-label]=\"checkboxLabel()\">\r\n                                            </mat-checkbox>\r\n                                        </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                                (change)=\"$event ? selection.toggle(row) : null\"\r\n                                                [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\r\n                                            </mat-checkbox>\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"sequence_id\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Sequence ID </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row?.sequence_id}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <div *ngIf=\"url[3]!='mini-bar'; else mini_bar\">\r\n\r\n                                        <ng-container matColumnDef=\"BusinessCode\">\r\n                                            <th mat-header-cell *matHeaderCellDef>Business Code </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Beam_Category\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Beam Category </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Beam_Category}} </td>\r\n                                        </ng-container>\r\n\r\n                                    </div>\r\n\r\n                                    <ng-template #mini_bar>\r\n\r\n                                        <ng-container matColumnDef=\"Market_Customer\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Market Customer </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Market_Customer_Group\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Market Customer Group\r\n                                            </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer_Group}} </td>\r\n                                        </ng-container>\r\n                                    </ng-template>\r\n                                    <ng-container matColumnDef=\"Product_Division\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Product Division </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Delivering_Mill\">\r\n                                        <th mat-header-cell *matHeaderCellDef>Delivering Mill </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Market_Country\">\r\n                                        <th mat-header-cell *matHeaderCellDef>Market Country </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Doc Item Currency </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Amount\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Currency\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Currency </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"action\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'edit')\">edit</mat-icon>\r\n                                            <!-- <mat-icon class=\"mr-10\" (click)=\"actionClicked([row.id],'delete')\">delete\r\n                                            </mat-icon> -->\r\n\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n\r\n                                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n                                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                    <tr class=\"mat-row\" *matNoDataRow>\r\n                                        <td class=\"mat-cell\" colspan=\"4\">No Record found !\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </div>\r\n                            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\"\r\n                                [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                                (page)=\"pageEvent = pageChangeCall($event)\">\r\n                            </mat-paginator>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport * as _ from 'lodash';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { basePriceAddtionData } from '../../smb-interface.service';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { Location } from \"@angular/common\";\r\nimport { filter } from 'rxjs/operators';\r\n@Component({\r\n  selector: 'app-upload-validate-modal',\r\n  templateUrl: './upload-validate-modal.component.html',\r\n  styleUrls: ['./upload-validate-modal.component.scss']\r\n})\r\nexport class UploadValidateModalComponent implements OnInit {\r\n\r\n  loading: boolean = false\r\n  displayedColumns: string[] = [];\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  tab: any;\r\n  table_data: any;\r\n  data: any = { \"inputaction\": '' };\r\n  uploadValidateModal: any;\r\n\r\n  selectedFiles: any = { \"uploadValidateModal\": { file: '', uploadCompleted: false } };\r\n  loadingRouteConfig: boolean = false\r\n  fileEv: any;\r\n  SelectedTab: any;\r\n  uploadValidateModal_data: any;\r\n  url: any;\r\n  apiStringURL: any;\r\n  table_name: any;\r\n  f_data: any;\r\n\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private _snackBar: MatSnackBar,\r\n    private router: Router,\r\n    private location: Location,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[2] === 'base-price') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.smb_mini_bar\r\n          this.displayedColumns = ['BusinessCode', 'Customer_Group', 'Market_Customer', 'Market_Country', 'Beam_Category', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        } else {\r\n          this.apiStringURL = this.apiString.smb\r\n          this.displayedColumns = ['BusinessCode', 'Market_Country', 'Product_Division', 'Product_Level_02', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        }\r\n\r\n      } else if (this.url[2] === 'incoterm-exceptions') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.incoterm_exceptions_mini_bar\r\n          this.displayedColumns = ['Market_Country', 'Product_Division', 'Incoterm1', 'Customer_Group', 'Beam_Category', 'Delivering_Mill', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        } else {\r\n          this.apiStringURL = this.apiString.incoterm_exceptions\r\n          this.displayedColumns = ['Market_Country', 'Customer_Group', 'Incoterm1', 'Product_Division', 'Beam_Category', 'Delivering_Mill', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        }\r\n\r\n      } else if (this.url[2] === 'extra-certificate') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.certificate_mini_bar\r\n          this.displayedColumns = ['BusinessCode', 'Customer_Group', 'Market_Customer', 'Market_Country', 'Certificate', 'Grade_Category', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        } else {\r\n          this.apiStringURL = this.apiString.certificate\r\n          this.displayedColumns = ['BusinessCode', 'Certificate', 'Grade_Category', 'Market_Country', 'Delivering_Mill', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        }\r\n\r\n      } else if (this.url[2] === 'freight-parity') {\r\n        console.log(\"coming in  freight-parity\")\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.freight_parity_mini_bar\r\n          this.displayedColumns = [\"Delivering_Mill\", \"Market_Country\", \"Market_Customer_Group\", 'Market_Customer', \"Zip_Code_Dest\", \"Product_Division\", \"Document_Item_Currency\", \"Amount\", \"Currency\"]\r\n        } else {\r\n          this.apiStringURL = this.apiString.freight_parity\r\n          this.displayedColumns = [\"Delivering_Mill\", \"Market_Country\", \"Zip_Code_Dest\", \"Product_Division\", \"Document_Item_Currency\", \"Amount\", \"Currency\"]\r\n        }\r\n\r\n      } else if (this.url[2] === 'grade') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.grade_mini_bar\r\n          this.displayedColumns = ['BusinessCode', 'Customer_Group', 'Market_Customer', 'Market_Country', 'Grade_Category', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        } else {\r\n          this.apiStringURL = this.apiString.grade\r\n          this.displayedColumns = ['BusinessCode', 'Grade_Category', 'Market_Country', 'Product_Division', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        }\r\n\r\n      } else if (this.url[2] === 'length-logistic') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.length_logistic_mini_bar\r\n          this.displayedColumns = ['Customer_Group', 'Market_Customer', 'Market_Country', 'Delivering_Mill', 'Length', 'Length_From', 'Length_To', 'Transport_Mode', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        } else {\r\n          this.apiStringURL = this.apiString.length_logistic\r\n          this.displayedColumns = [ 'Market_Country', 'Delivering_Mill', 'Length', 'Length_From', 'Length_To', 'Transport_Mode', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        }\r\n\r\n      } else if (this.url[2] === 'length-production') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.length_production_mini_bar\r\n          this.displayedColumns = ['BusinessCode', 'Customer_Group', 'Market_Customer', 'Market_Country', 'Delivering_Mill', 'Length', 'Length_From', 'Length_To', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        } else {\r\n          this.apiStringURL = this.apiString.length_production\r\n          this.displayedColumns = ['BusinessCode', 'Market_Country', 'Delivering_Mill', 'Length', 'Length_From', 'Length_To', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        }\r\n\r\n      } else if (this.url[2] === 'profile') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.profile_mini_bar\r\n          this.displayedColumns = ['BusinessCode', 'Customer_Group', 'Market_Customer', 'Market_Country', 'Product_Level_04', 'Product_Level_05', 'Product_Level_02', 'Delivering_Mill', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        } else {\r\n          this.apiStringURL = this.apiString.profile\r\n          this.displayedColumns = ['BusinessCode', 'Market_Country', 'Product_Division', 'Product_Level_04', 'Product_Level_05', 'Product_Level_02', 'Delivering_Mill', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        }\r\n\r\n      } else if (this.url[2] === 'profile-lberia-italy') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.profile_lberia_italy_mini_bar\r\n          this.displayedColumns = ['BusinessCode', 'Market_Country', 'Market_Customer_Group', 'Market_Customer', 'Delivering_Mill', 'Product_Level_02', 'Product_Level_05', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        } else {\r\n          this.apiStringURL = this.apiString.profile_lberia_italy\r\n          this.displayedColumns = ['BusinessCode', 'Market_Country', 'Delivering_Mill', 'Product_Level_02', 'Product_Level_05', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        }\r\n\r\n      } else if (this.url[2] === 'transport-mode') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.transport_mode_mini_bar\r\n          this.displayedColumns = ['Product_Division', 'Market_Country', 'Market_Customer_Group', 'Market_Customer', 'Transport_Mode', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        } else {\r\n          this.apiStringURL = this.apiString.transport_mode\r\n          this.displayedColumns = ['Product_Division', 'Market_Country', 'Transport_Mode', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        }\r\n\r\n      } else {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.delivery_mill_mini_bar\r\n          this.displayedColumns = ['Market_Country', 'Market_Customer_Group', 'Market_Customer', 'Delivering_Mill', 'Product_Division', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        } else {\r\n          this.apiStringURL = this.apiString.delivery_mill\r\n          this.displayedColumns = ['BusinessCode', 'Market_Country', 'Delivering_Mill', 'Product_Division', 'Beam_Category', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        }\r\n\r\n        if (this.url[2] === \"minton-leans\") {\r\n          if (this.url[3] === \"mini-bar\") {\r\n            this.apiStringURL = this.apiString.generic\r\n            this.table_name = \"SMBExtMinTon_LeanS_Minibar\"\r\n            this.displayedColumns = ['BusinessCode', 'Customer_Group', 'Customer', 'Tonnage_From', 'Tonnage_To', 'Amount', 'Currency']\r\n          } else {\r\n            this.apiStringURL = this.apiString.generic\r\n            this.table_name = \"SMBExtMinTon_LeanS\"\r\n            this.displayedColumns = ['BusinessCode', 'Country', 'Tonnage_From', 'Tonnage_To', 'Amount', 'Currency']\r\n          }\r\n        }\r\n        if (this.url[2] === \"piececount\") {\r\n          if (this.url[3] === \"mini-bar\") {\r\n            this.table_name = \"SMBExtPieceCount_Minibar\"\r\n            this.apiStringURL = this.apiString.generic\r\n            this.displayedColumns = ['BusinessCode', 'Customer_Group', 'Customer', 'Unit_of_Quantity', 'Amount', 'Currency']\r\n          } else {\r\n            this.table_name = \"SMBExtPieceCount\"\r\n            this.apiStringURL = this.apiString.generic\r\n            this.displayedColumns = ['BusinessCode', 'Country', 'Unit_of_Quantity', 'Amount', 'Currency']\r\n          }\r\n        }\r\n        if (this.url[2] === \"dis-earlypmt\") {\r\n          if (this.url[3] === \"mini-bar\") {\r\n            this.table_name = \"SMBDisEarlyPmt_Minibar\"\r\n            this.apiStringURL = this.apiString.generic\r\n            this.displayedColumns = ['BusinessCode', 'Customer_Group', 'Customer', 'Value', 'Unit']\r\n          } else {\r\n            this.table_name = \"SMBDisEarlyPmt\"\r\n            this.apiStringURL = this.apiString.generic\r\n            this.displayedColumns = ['BusinessCode', 'Country', 'Value', 'Unit']\r\n          }\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.data = { \"inputaction\": '' }\r\n\r\n  }\r\n\r\n\r\n  // ==================== file change event ========================\r\n  dropFiles(ev: any): any {\r\n    ev.preventDefault();\r\n    this.fileEv = ev\r\n    let data: any = ev.dataTransfer.items[0]\r\n    console.log(data)\r\n    if (data) {\r\n      console.log(\"coming inside\")\r\n      // If dropped items aren't files, reject them\r\n      const allowed_types = [\r\n        'application/vnd.ms-excel',\r\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];\r\n\r\n      if (!_.includes(allowed_types, data.type)) {\r\n        let imageError: any = 'Only xlsx are allowed.';\r\n        this._snackBar.open(imageError, \"\", {\r\n          duration: 4000,\r\n          panelClass: ['error'],\r\n          horizontalPosition: 'end',\r\n          verticalPosition: 'bottom',\r\n        });\r\n        return false;\r\n      }\r\n      let obj: any\r\n      if (data.kind === 'file') {\r\n        let file = data.getAsFile();\r\n        obj = {\r\n          fileName: file.name,\r\n          selectedFile: file,\r\n        }\r\n      }\r\n      this.selectedFiles.uploadValidateModal = {\r\n        file: obj,\r\n        uploadCompleted: true\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  dragOverHandler(ev: any) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  onSelectFile(event: any) {\r\n    this.fileEv = event\r\n    console.log(event.target.files)\r\n    if (event.target.files && event.target.files[0]) {\r\n      var filesAmount = event.target.files.length;\r\n      for (let i = 0; i < filesAmount; i++) {\r\n        var reader = new FileReader();\r\n        let file: any = event.target.files[i]\r\n        console.log(file)\r\n\r\n        let obj: any = {\r\n          fileName: file.name,\r\n          selectedFile: file\r\n        }\r\n        this.selectedFiles.uploadValidateModal = {\r\n          file: obj,\r\n          uploadCompleted: true\r\n        }\r\n        // this.selectedFiles.push(obj);\r\n        reader.onload = (event: any) => {\r\n        }\r\n\r\n        reader.readAsDataURL(event.target.files[i]);\r\n        event.target.value = ''\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteFile() {\r\n\r\n    this.uploadValidateModal = ''\r\n    this.selectedFiles.uploadValidateModal = {\r\n      file: \"\",\r\n      uploadCompleted: false\r\n    }\r\n    console.log(this.fileEv, \"FILE EV \")\r\n    // this.fileEv.target.value = \"\";\r\n  }\r\n  uploadFiles() {\r\n    console.log(\"coming\", this.selectedFiles)\r\n    const formData = new FormData();\r\n    this.f_data = formData\r\n    formData.append(\"filename\", this.selectedFiles.uploadValidateModal.file.selectedFile,this.table_name)\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.post_request_header(this.apiStringURL.upload,this.f_data ).subscribe((data) => {\r\n      console.log(\"Mydata :\",data)\r\n      let resultData: any = data\r\n      this.loadingRouteConfig = false\r\n      this.uploadValidateModal_data = resultData\r\n      this.uploadValidateModal = new MatTableDataSource<basePriceAddtionData>(resultData.data)\r\n      setTimeout(() => {\r\n        this.uploadValidateModal.paginator = this.paginator;\r\n        this.uploadValidateModal.sort = this.sort;\r\n      });\r\n      this.apiMethod.popupMessage('success', 'File data read successfully')\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while reading uploaded file')\r\n    })\r\n  }\r\n\r\n  //==========================end===================================\r\n  //filter \r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.uploadValidateModal.filter = filterValue.trim().toLowerCase();\r\n    if (this.uploadValidateModal.paginator) {\r\n      this.uploadValidateModal.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  // custom pop-up\r\n  popupMessage(statusType: any, message: any) {\r\n    if (statusType === 'success') {\r\n        this._snackBar.open(message, \"\", {\r\n            duration: 4000,\r\n            panelClass: ['success'],\r\n            horizontalPosition: 'end',\r\n            verticalPosition: 'top',\r\n        });\r\n    } else {\r\n        this._snackBar.open(message, \"\", {\r\n            duration: 4000,\r\n            panelClass: ['error'],\r\n            horizontalPosition: 'end',\r\n            verticalPosition: 'top',\r\n        });\r\n    }\r\n\r\n}\r\n\r\n  //data validate\r\n  validateDataForm() {\r\n    let data: any = {\r\n      \"billet\": this.uploadValidateModal_data.data,\r\n      \"filename\": this.uploadValidateModal_data.filename\r\n    }\r\n    data.table_name = this.table_name\r\n    this.uploadValidateModal_data.data.table_name = this.uploadValidateModal_data.table_name\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.post_request_header(this.apiStringURL.validate, data).subscribe((result: any) => {\r\n      console.log(\"success\")\r\n      this.loadingRouteConfig = false\r\n      this.popupMessage('success','File Sent for Approval')\r\n      this.location.back()\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.popupMessage('error', 'Error while validating uploaded file')\r\n    })\r\n  }\r\n  back() {\r\n    this.location.back()\r\n  }\r\n\r\n\r\n\r\n  \r\n\r\n\r\n  \r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<mat-card>\r\n    <!-- ========================file upload start here==========================  -->\r\n    <div>\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"text-left mt-10 mb-10\">\r\n                    <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"back()\">\r\n                        <i class=\"fa fa-arrow-alt-circle-left\"></i>\r\n                        Back\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row bg-w\">\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12 col-xl-12 col-12\">\r\n                <div class=\"mtb-10\">\r\n                    <div class=\"height-100\">\r\n                        <div id=\"drag_zone\" class=\"file-upload-wrapper\" (drop)=\"dropFiles($event)\"\r\n                            (dragover)='dragOverHandler($event)'>\r\n                            <div class=\"pointCenter\">\r\n                                <div class=\"card-drag\">\r\n                                    <span class=\"header\">\r\n                                        you can drag & drop your file here .. <br>\r\n                                        OR\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <button type=\"button\" color=\"primary\" mat-raised-button\r\n                                        [disabled]=\"selectedFiles.uploadValidateModal.file!=''\"\r\n                                        (click)=\"fileInput2.click()\">\r\n                                        Choose file\r\n                                    </button>\r\n                                    <input hidden type='file' (change)=\"onSelectFile($event)\" #fileInput2 id=\"file\"\r\n                                        accept=\".xls, .xlsx\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <mat-list>\r\n                                <mat-list-item *ngIf=\"selectedFiles.uploadValidateModal.uploadCompleted\">\r\n                                    <mat-icon mat-list-icon>note</mat-icon>\r\n                                    <div mat-line>{{selectedFiles.uploadValidateModal.file?.fileName}}</div>\r\n\r\n                                    <div>\r\n                                        <button mat-icon-button color=\"primary\" (click)=\"uploadFiles()\">\r\n                                            <mat-icon>upload</mat-icon>\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"warn\" (click)=\"deleteFile()\">\r\n                                            <mat-icon>delete_forever</mat-icon>\r\n                                        </button>\r\n                                    </div>\r\n                                    <mat-divider></mat-divider>\r\n                                </mat-list-item>\r\n                            </mat-list>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- ========================file upload end ========================= -->\r\n    <div class=\"row\" *ngIf=\"uploadValidateModal && (selectedFiles.uploadValidateModal.file)\">\r\n        <!-- <div class=\"row\"> -->\r\n        <div class=\"col-6\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"validateDataForm()\">\r\n                    Validate\r\n                    <span *ngIf=\"this.url[2].split('-').length===1\" style=\"text-transform: capitalize;\">\r\n                        {{url[2].split('-')[0]}}\r\n                    </span>\r\n                    <span *ngIf=\"this.url[2].split('-').length===2\" style=\"text-transform: capitalize;\">\r\n                        {{url[2].split('-')[0] +' '+ url[2].split('-')[1]}}\r\n                    </span>\r\n                    <span *ngIf=\"this.url[2].split('-').length===3\" style=\"text-transform: capitalize;\">\r\n                        {{url[2].split('-')[0] +' '+ url[2].split('-')[1] +' '+ url[2].split('-')[2]}}\r\n                    </span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput (keyup)=\"applyFilter($event)\" #input>\r\n                    <mat-icon matSuffix>search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"uploadValidateModal && (selectedFiles.uploadValidateModal.file)\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <table mat-table [dataSource]=\"uploadValidateModal\" class=\"custom_table order_table\" >\r\n                    <div *ngIf=\"url[3]==='mini-bar';else sample\">\r\n                        <div *ngIf=\"!(\r\n                            (url[2]==='delivery-mill') || \r\n                            (url[2]==='freight-parity') || \r\n                            (url[2]==='length-logistic') ||\r\n                            (url[2]==='transport-mode') \r\n                            )\">\r\n                            <ng-container matColumnDef=\"BusinessCode\">\r\n                                <th mat-header-cell *matHeaderCellDef > Business Code </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n                        <div *ngIf=\"!(\r\n                            (url[2]==='smb') || \r\n                            (url[2]==='extra-certificate') ||\r\n                            (url[2]==='grade') ||\r\n                            (url[2]==='transport-mode') \r\n                        )\">\r\n                            <ng-container matColumnDef=\"Delivering_Mill\">\r\n                                <th mat-header-cell *matHeaderCellDef >Delivering Mill </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='delivery-mill') ||\r\n                            (url[2]==='freight-parity') ||\r\n                            (url[2]==='transport-mode') \r\n                        )\">\r\n                            <ng-container matColumnDef=\"Product_Division\">\r\n                                <th mat-header-cell *matHeaderCellDef >Product Division </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n                        <div *ngIf=\"!(\r\n                            (url[2]==='delivery-mill') ||\r\n                            (url[2]==='freight_-arity') ||\r\n                            (url[2]==='profile-lberia_italy') ||\r\n                            (url[2]==='transport-mode') \r\n                            )\">\r\n                            <ng-container matColumnDef=\"Customer_Group\">\r\n                                <th mat-header-cell *matHeaderCellDef >Customer Group </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='delivery-mill') ||\r\n                            (url[2]==='freight-parity') ||\r\n                            (url[2]==='profile-lberia-italy') ||\r\n                            (url[2]==='transport-mode') \r\n                            )\">\r\n                            <ng-container matColumnDef=\"Market_Customer_Group\">\r\n                                <th mat-header-cell *matHeaderCellDef >Market Customer Group </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer_Group}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n                        <ng-container matColumnDef=\"Market_Customer\">\r\n                            <th mat-header-cell *matHeaderCellDef > Market - Customer </th>\r\n                            <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                        </ng-container>\r\n\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='extra-certificate') ||\r\n                            (url[2]==='grade') \r\n                            )\">\r\n                            <ng-container matColumnDef=\"Grade_Category\">\r\n                                <th mat-header-cell *matHeaderCellDef >Grade Category </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Grade_Category}} </td>\r\n                            </ng-container>\r\n\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='profile') ||\r\n                            (url[2]==='profile-lberia-italy')\r\n                            )\">\r\n\r\n                            <ng-container matColumnDef=\"Product_Level_02\">\r\n                                <th mat-header-cell *matHeaderCellDef > Product Level 02 </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_02}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(url[2]==='profile')\">\r\n                            <ng-container matColumnDef=\"Product_Level_04\">\r\n                                <th mat-header-cell *matHeaderCellDef > Product Level 04 </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_04}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='profile') ||\r\n                            (url[2]==='profile-lberia-italy')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Product_Level_05\">\r\n                                <th mat-header-cell *matHeaderCellDef > Product Level 05 </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_05}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='length-logistic') ||\r\n                            (url[2]==='transport-mode')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Transport_Mode\">\r\n                                <th mat-header-cell *matHeaderCellDef > Transport Mode </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Transport_Mode}} </td>\r\n                            </ng-container>\r\n\r\n                        </div>\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='length-logistic') ||\r\n                            (url[2]==='length-production')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Length\">\r\n                                <th mat-header-cell *matHeaderCellDef > Length </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Length}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(url[2]==='extra-certificate')\">\r\n                            <ng-container matColumnDef=\"Certificate\">\r\n                                <th mat-header-cell *matHeaderCellDef > Certificate </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Certificate}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(url[2]==='freight-parity')\">\r\n                            <ng-container matColumnDef=\"Zip_Code_Dest\">\r\n                                <th mat-header-cell *matHeaderCellDef > Zip Code Dest </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Zip_Code_Dest}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div class=\"col-6\" *ngIf=\"(\r\n                            (url[2]==='length-logistic') ||\r\n                            (url[2]==='length-production')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Length_From\">\r\n                                <th mat-header-cell *matHeaderCellDef > Length From </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Length_From}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div class=\"col-6\" *ngIf=\"(\r\n                            (url[2]==='length-logistic') ||\r\n                            (url[2]==='length-production')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Length_To\">\r\n                                <th mat-header-cell *matHeaderCellDef > Length To </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Length_To}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <!-- =========================simple table ================================ -->\r\n                    <ng-template #sample>\r\n                        <div *ngIf=\"!(\r\n                            (url[2]==='freight-parity') || \r\n                            (url[2]==='length-logistic') ||\r\n                            (url[2]==='transport-mode') \r\n                        )\">\r\n                            <ng-container matColumnDef=\"BusinessCode\">\r\n                                <th mat-header-cell *matHeaderCellDef > Business Code </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"!(\r\n                            (url[2]==='smb') || \r\n                            (url[2]==='grade') ||\r\n                            (url[2]==='transport-mode')\r\n                        )\">\r\n                            <ng-container matColumnDef=\"Delivering_Mill\">\r\n                                <th mat-header-cell *matHeaderCellDef > Delivering Mill </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n                       \r\n                        <div *ngIf=\"(\r\n                            (url[2]==='smb') || \r\n                            (url[2]==='delivery-mill') ||\r\n                            (url[2]==='freight-parity') ||\r\n                            (url[2]==='profile') ||\r\n                            (url[2]==='grade') ||\r\n                            (url[2]==='transport-mode') ||\r\n                            (url[2]==='incoterm-exceptions')  \r\n                            )\">\r\n                            <ng-container matColumnDef=\"Product_Division\">\r\n                                <th mat-header-cell *matHeaderCellDef > Product Division </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='extra-certificate') ||\r\n                            (url[2]==='grade') \r\n                            )\">\r\n                            <ng-container matColumnDef=\"Grade_Category\">\r\n                                <th mat-header-cell *matHeaderCellDef > Grade Category </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Grade_Category}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='smb') ||\r\n                            (url[2]==='profile') ||\r\n                            (url[2]==='profile-lberia-italy') \r\n                            )\">\r\n                            <ng-container matColumnDef=\"Product_Level_02\">\r\n                                <th mat-header-cell *matHeaderCellDef > Product Level 02 </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_02}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='profile') \r\n                            )\">\r\n                            <ng-container matColumnDef=\"Product_Level_04\">\r\n                                <th mat-header-cell *matHeaderCellDef > Product Level 04 </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_04}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='profile') ||\r\n                            (url[2]==='profile-lberia-italy')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Product_Level_05\">\r\n                                <th mat-header-cell *matHeaderCellDef > Product Level 05 </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_05}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='length-logistic') ||\r\n                            (url[2]==='transport-mode')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Transport_Mode\">\r\n                                <th mat-header-cell *matHeaderCellDef > Transport Mode </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Transport_Mode}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='length-logistic') ||\r\n                            (url[2]==='length-production')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Length\">\r\n                                <th mat-header-cell *matHeaderCellDef > Length </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Length}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <!-- <div *ngIf=\"(\r\n                            (url[2]==='grade') ||\r\n                            (url[2]==='length-logistic') ||\r\n                            (url[2]==='length-production')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Country_Group\">\r\n                                <th mat-header-cell *matHeaderCellDef > Country Group </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Country_Group}} </td>\r\n                            </ng-container>\r\n                        </div> -->\r\n\r\n                        <div *ngIf=\"(url[2]==='freight-parity')\">\r\n                            <ng-container matColumnDef=\"Zip_Code_Dest\">\r\n                                <th mat-header-cell *matHeaderCellDef > Zip Code Dest </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Zip_Code_Dest}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(url[2]==='extra-certificate') \">\r\n                            <ng-container matColumnDef=\"Certificate\">\r\n                                <th mat-header-cell *matHeaderCellDef > Certificate </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Certificate}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"((url[2]==='delivery-mill') ||\r\n                        (url[2]==='incoterm-exceptions') )\">\r\n                            <ng-container matColumnDef=\"Beam_Category\">\r\n                                <th mat-header-cell *matHeaderCellDef > Beam Category </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Beam_Category}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(url[2]==='incoterm-exceptions')\">\r\n                            <ng-container matColumnDef=\"Customer_Group\">\r\n                                <th mat-header-cell *matHeaderCellDef >Customer Group </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n                        <div *ngIf=\"(url[2]==='incoterm-exceptions')\">\r\n                            <ng-container matColumnDef=\"Incoterm1\">\r\n                                <th mat-header-cell *matHeaderCellDef >Incoterm1 </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Incoterm1}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n                        <div class=\"col-6\" *ngIf=\"(\r\n                            (url[2]==='length-logistic') ||\r\n                            (url[2]==='length-production')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Length_From\">\r\n                                <th mat-header-cell *matHeaderCellDef > Length From </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Length_From}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div class=\"col-6\" *ngIf=\"(\r\n                            (url[2]==='length-logistic') ||\r\n                            (url[2]==='length-production')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Length_To\">\r\n                                <th mat-header-cell *matHeaderCellDef > Length To </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Length_To}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-container matColumnDef=\"Market_Country\">\r\n                        <th mat-header-cell *matHeaderCellDef > Market Country </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                        <th mat-header-cell *matHeaderCellDef > Document Item Currency</th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Amount\">\r\n                        <th mat-header-cell *matHeaderCellDef > Amount </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Currency\">\r\n                        <th mat-header-cell *matHeaderCellDef > Currency </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                    </ng-container>\r\n<!-- mine -->\r\n                    <div *ngIf=\"(\r\n                        (url[2]=='minton-leans') ||\r\n                        (url[2]==='piececount') ||\r\n                        (url[2]==='dis-earlypmt')\r\n                    )\">\r\n            <ng-container matColumnDef=\"Country\">\r\n                <th mat-header-cell *matHeaderCellDef> Country </th>\r\n                <td mat-cell *matCellDef=\"let row\"> {{row.Country}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"Customer\">\r\n                <th mat-header-cell *matHeaderCellDef> Customer </th>\r\n                <td mat-cell *matCellDef=\"let row\"> {{row.Customer}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"Unit_of_Quantity\">\r\n                <th mat-header-cell *matHeaderCellDef> Unit Of Quantity </th>\r\n                <td mat-cell *matCellDef=\"let row\"> {{row.Unit_of_Quantity}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"Tonnage_From\">\r\n                <th mat-header-cell *matHeaderCellDef> Tonnage From </th>\r\n                <td mat-cell *matCellDef=\"let row\"> {{row.Tonnage_From}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"Tonnage_To\">\r\n                <th mat-header-cell *matHeaderCellDef> Tonnage To </th>\r\n                <td mat-cell *matCellDef=\"let row\"> {{row.Tonnage_To}} </td>\r\n            </ng-container>\r\n\r\n             <ng-container matColumnDef=\"Value\">\r\n                    <th mat-header-cell *matHeaderCellDef> Value </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Value}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Unit\">\r\n                    <th mat-header-cell *matHeaderCellDef> Unit </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Unit}} </td>\r\n                </ng-container>\r\n\r\n        </div>\r\n\r\n\r\n                    <!--=====================================simple design end ===============================  -->\r\n\r\n                    <!--========================== common rows ================================= -->\r\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n\r\n                </table>\r\n            </div>\r\n            <!-- ========================== simple design ================================= -->\r\n        </div>\r\n    </div>\r\n</mat-card>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SidebarComponent } from 'src/app/common-use/sidebar/sidebar.component';\r\nimport { AuthGuardService } from 'src/app/services/authGard.service';\r\nimport { BasePriceAdditionListComponent } from './base-price/base-price-addition-list/base-price-addition-list.component';\r\nimport { BulkUploadBasePriceAdditionComponent } from './base-price/bulk-upload-base-price-addition/bulk-upload-base-price-addition.component';\r\nimport { DeliveryMillListComponent } from './delivery-mill-list/delivery-mill-list.component';\r\nimport { ExtraCertificateListComponent } from './extra-certificate-list/extra-certificate-list.component';\r\nimport { FreightParityListComponent } from './freight-parity-list/freight-parity-list.component';\r\nimport { GradeListComponent } from './grade-list/grade-list.component';\r\nimport { IncotermExceptionsListComponent } from './incoterm-exceptions/incoterm-exceptions-list/incoterm-exceptions-list.component';\r\nimport { LengthLogisticListComponent } from './length-logistic-list/length-logistic-list.component';\r\nimport { LengthProductionListComponent } from './length-production-list/length-production-list.component';\r\nimport { ProfileLberiaItalyListComponent } from './profile-lberia-italy-list/profile-lberia-italy-list.component';\r\nimport { ProfileListComponent } from './profile-list/profile-list.component';\r\nimport { HistoryModalComponent } from './smb-modal/history-modal/history-modal.component';\r\nimport { RecordApprovalComponent } from './smb-modal/record-approval/record-approval.component';\r\nimport { UploadValidateModalComponent } from './smb-modal/upload-validate-modal/upload-validate-modal.component';\r\nimport { SMBDisEarlyPtmComponent } from './smbdis-early-ptm/smbdis-early-ptm.component';\r\nimport { SMBExtMinTonLeanSComponent } from './smbext-min-ton-lean-s/smbext-min-ton-lean-s.component';\r\nimport { SMBExtPieceCountComponent } from './smbext-piece-count/smbext-piece-count.component';\r\nimport { TransportModeListComponent } from './transport-mode-list/transport-mode-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SidebarComponent,\r\n    children: [\r\n      {\r\n        path: \"base-price\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: BasePriceAdditionListComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: BulkUploadBasePriceAdditionComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"delivery-mill\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: DeliveryMillListComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"extra-certificate\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: ExtraCertificateListComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"freight-parity\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: FreightParityListComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"grade\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: GradeListComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"length-logistic\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: LengthLogisticListComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"length-production\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: LengthProductionListComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"profile\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: ProfileListComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"profile-lberia-italy\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: ProfileLberiaItalyListComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"transport-mode\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: TransportModeListComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"incoterm-exceptions\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: IncotermExceptionsListComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n\r\n      //mine\r\n      {\r\n        path: \"minton-leans\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: SMBExtMinTonLeanSComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"piececount\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: SMBExtPieceCountComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"dis-earlypmt\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: SMBDisEarlyPtmComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent,\r\n                  canActivate: [AuthGuardService]\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"record\",\r\n        canActivate: [AuthGuardService],\r\n        children: [\r\n          {\r\n            path: 'approve',\r\n            component: RecordApprovalComponent\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SmbRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { transportModeData } from '../smb-interface.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { WarnPopupComponent } from '../smb-modal/warn-popup/warn-popup.component';\r\nimport { filter } from 'rxjs/operators';\r\nimport { EditPopupComponent } from '../smb-modal/edit-popup/edit-popup.component';\r\nimport { AddPopupComponent } from '../smb-modal/add-popup/add-popup.component';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n@Component({\r\n  selector: 'app-transport-mode-list',\r\n  templateUrl: './transport-mode-list.component.html',\r\n  styleUrls: ['./transport-mode-list.component.scss']\r\n})\r\nexport class TransportModeListComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  filterValue: any = '';\r\n  selection = new SelectionModel<transportModeData>(true, []);\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.transport_mode\r\n        this.displayedColumns = [\r\n          'select',\r\n          'sequence_id',\r\n          'Product_Division',\r\n          'Market_Country',\r\n          'Transport_Mode',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          'action'\r\n        ]\r\n      } else {\r\n        this.apiStringURL = this.apiString.transport_mode_mini_bar\r\n\r\n        this.displayedColumns = [\r\n          'select',\r\n          'sequence_id',\r\n          'Product_Division',\r\n          'Market_Country',\r\n          'Market_Customer_Group',\r\n          'Market_Customer',\r\n          'Transport_Mode',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          'action'\r\n        ]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getTransportMode()\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getTransportMode() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.apiMethod.get_request_header(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<transportModeData>(resultData.data)\r\n      setTimeout(() => {\r\n        if (this.filterValue) {\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n        this.dataSource.sort = this.sort;\r\n\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getTransportMode()\r\n  }\r\n  //filter \r\n  applyFilter(filterValue: any) {\r\n    console.log(filterValue.trim().toLowerCase())\r\n    this.filterValue = filterValue\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getTransportMode()\r\n  }\r\n  actionClicked(rowData: any, viewOn: any) {\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"transport_mode\",\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'sequence_id' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getTransportMode()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            fileName: \"transport_mode\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getTransportMode()\r\n      })\r\n    }\r\n\r\n    if (viewOn === 'delete' || viewOn === 'delete-all') {\r\n      let deleteID: any = []\r\n      if (viewOn === 'delete-all' && this.selection.selected.length === 0) {\r\n        return this.apiMethod.popupMessage('error', 'Select At-least on record')\r\n      }\r\n      if (this.selection.selected.length > 0) {\r\n        this.selection.selected.forEach((x: any) => {\r\n          deleteID.push(x.id)\r\n        })\r\n      } else {\r\n        deleteID = rowData\r\n      }\r\n      console.log(deleteID)\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: deleteID,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        if (result != undefined) {\r\n          this.getTransportMode()\r\n          this.selection.clear()\r\n        }\r\n      })\r\n    }\r\n  }\r\n  uploadByXlFile() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/transport-mode/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/transport-mode/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadInXlFile() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected(): any {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource?.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource?.data);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: transportModeData): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.sequence_id + 1}`;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked('','add')\">\r\n                    <i class=\"fa fa-plus-circle\"></i> Transport Mode\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadByXlFile()\">\r\n                    <i class=\"fa fa-upload\"></i> Transport Mode\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"downloadInXlFile()\">\r\n                    <i class=\"fa fa-download\"></i> Transport Mode\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"actionClicked(selection,'delete-all')\">\r\n                    <i class=\"fa fa-trash\"></i> Transport Mode\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter('search')\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter('search')\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"text-center\">\r\n                <div class=\"my_offer_table_container\">\r\n                    <div class=\"text-center \">\r\n                        <div class=\"table-outer-container offer_table_container position-relative \">\r\n                            <div class=\"table-inner-container  hc example-container mat-elevation-z8\">\r\n                                <table mat-table [dataSource]=\"dataSource\">\r\n\r\n                                    <ng-container matColumnDef=\"select\">\r\n                                        <th mat-header-cell *matHeaderCellDef>\r\n                                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                                [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                                [aria-label]=\"checkboxLabel()\">\r\n                                            </mat-checkbox>\r\n                                        </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                                (change)=\"$event ? selection.toggle(row) : null\"\r\n                                                [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\r\n                                            </mat-checkbox>\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"sequence_id\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Sequence ID </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row?.sequence_id}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Product_Division\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Product Division </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Transport_Mode\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Transport Mode </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Transport_Mode}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <div *ngIf=\"url[3]==='mini-bar'\">\r\n\r\n                                        <ng-container matColumnDef=\"Market_Customer_Group\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Market Customer Group\r\n                                            </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer_Group}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Market_Customer\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Market Customer\r\n                                            </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <ng-container matColumnDef=\"Grade_Category\">\r\n                                        <th mat-header-cell *matHeaderCellDef>Grade Category </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Grade_Category}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Market_Country\">\r\n                                        <th mat-header-cell *matHeaderCellDef>Market Country </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Doc Item Currency </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Amount\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Currency\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Currency </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"action\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'edit')\">edit</mat-icon>\r\n                                            <!-- <mat-icon class=\"mr-10\" (click)=\"actionClicked([row.id],'delete')\">delete\r\n                                            </mat-icon> -->\r\n\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns ;sticky: true\"></tr>\r\n                                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                    <tr class=\"mat-row\" *matNoDataRow>\r\n                                        <td class=\"mat-cell\" colspan=\"4\">No Record found \"{{searchValue}}\"\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </div>\r\n                            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\"\r\n                                [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                                (page)=\"pageEvent = pageChangeCall($event)\">\r\n                            </mat-paginator>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { incotermExceptionsData } from '../../smb-interface.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { WarnPopupComponent } from '../../smb-modal/warn-popup/warn-popup.component';\r\nimport { filter } from 'rxjs/operators';\r\nimport { rowData } from 'src/app/sample';\r\nimport { AddPopupComponent } from '../../smb-modal/add-popup/add-popup.component';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { EditPopupComponent } from '../../smb-modal/edit-popup/edit-popup.component';\r\n\r\n@Component({\r\n  selector: 'app-incoterm-exceptions-list',\r\n  templateUrl: './incoterm-exceptions-list.component.html',\r\n  styleUrls: ['./incoterm-exceptions-list.component.scss']\r\n})\r\nexport class IncotermExceptionsListComponent implements OnInit {\r\n\r\n  data: any = rowData\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  filterValue: any = '';\r\n  selection = new SelectionModel<incotermExceptionsData>(true, []);\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.incoterm_exceptions\r\n        this.displayedColumns = [\r\n          'select',\r\n          'sequence_id',\r\n          'Market_Country',\r\n          'Customer_Group',\r\n          'Incoterm1',\r\n          'Product_Division',\r\n          'Beam_Category',\r\n          'Delivering_Mill',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          \"action\"\r\n        ]\r\n      } else {\r\n        this.apiStringURL = this.apiString.incoterm_exceptions_mini_bar\r\n        this.displayedColumns = [\r\n          'select',\r\n          'sequence_id',\r\n          'Market_Country',\r\n          'Product_Division',\r\n          'Incoterm1',\r\n          'Customer_Group',\r\n          'Beam_Category',\r\n          'Delivering_Mill',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          \"action\"\r\n        ]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getIncotermExceptions()\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getIncotermExceptions() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    // this.dataSource = new MatTableDataSource<incotermExceptionsData>(this.data)\r\n    this.apiMethod.get_request_header(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<incotermExceptionsData>(resultData.data)\r\n      setTimeout(() => {\r\n        if (this.filterValue) {\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n        this.dataSource.sort = this.sort;\r\n\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getIncotermExceptions()\r\n  }\r\n  //filter \r\n  applyFilter(filterValue: any) {\r\n    console.log(filterValue.trim().toLowerCase())\r\n    this.filterValue = filterValue\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getIncotermExceptions()\r\n  }\r\n  incotermExceptionsClick(rowData: any, viewOn: any) {\r\n    console.log(rowData)\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"incoterm_exceptions\",\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'sequence_id' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getIncotermExceptions()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            fileName: \"incoterm_exceptions\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns.filter((x: any) =>\r\n              x != 'select' && x != 'action'\r\n            )\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getIncotermExceptions()\r\n      })\r\n    }\r\n\r\n    if (viewOn === 'delete' || viewOn === 'delete-all') {\r\n      let deleteID: any = []\r\n      if (viewOn === 'delete-all' && this.selection.selected.length === 0) {\r\n        return this.apiMethod.popupMessage('error', 'Select At-least on record')\r\n      }\r\n      if (this.selection.selected.length > 0) {\r\n        this.selection.selected.forEach((x: any) => {\r\n          deleteID.push(x.id)\r\n        })\r\n      } else {\r\n        deleteID = rowData\r\n      }\r\n      console.log(deleteID)\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: deleteID,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        if (result != undefined) {\r\n          this.getIncotermExceptions()\r\n          this.selection.clear()\r\n        }\r\n      })\r\n\r\n    }\r\n  }\r\n  uploadIncotermExceptions() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/incoterm-exceptions/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/incoterm-exceptions/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadIncotermExceptions() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected(): any {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource?.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource?.data);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: incotermExceptionsData): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.sequence_id + 1}`;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button\r\n                    (click)=\"incotermExceptionsClick('','add')\">\r\n                    <i class=\"fa fa-plus-circle\"></i> Incoterm\r\n                </button>\r\n\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button\r\n                    (click)=\"uploadIncotermExceptions()\">\r\n                    <i class=\"fa fa-upload\"></i> Incoterm\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button\r\n                    (click)=\"downloadIncotermExceptions()\">\r\n                    <i class=\"fa fa-download\"></i> Incoterm\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"incotermExceptionsClick(selection,'delete-all')\">\r\n                    <i class=\"fa fa-trash\"></i> Incoterm\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter('search')\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter('search')\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"text-center\">\r\n                <div class=\"my_offer_table_container\">\r\n                    <div class=\"text-center \">\r\n                        <div class=\"table-outer-container offer_table_container position-relative \">\r\n                            <div class=\"table-inner-container  hc example-container mat-elevation-z8\">\r\n                                <table mat-table [dataSource]=\"dataSource\">\r\n\r\n                                    <ng-container matColumnDef=\"select\">\r\n                                        <th mat-header-cell *matHeaderCellDef>\r\n                                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                                [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                                [aria-label]=\"checkboxLabel()\">\r\n                                            </mat-checkbox>\r\n                                        </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                                (change)=\"$event ? selection.toggle(row) : null\"\r\n                                                [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\r\n                                            </mat-checkbox>\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"sequence_id\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Sequence ID </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row?.sequence_id}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Market_Country\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Market Country </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Product_Division\">\r\n                                        <th mat-header-cell *matHeaderCellDef>Product Division </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Incoterm1\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Incoterm1 </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Incoterm1}} </td>\r\n                                    </ng-container>\r\n\r\n\r\n                                    <ng-container matColumnDef=\"Customer_Group\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Customer Group </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Beam_Category\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Beam Category </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Beam_Category}} </td>\r\n                                    </ng-container>\r\n\r\n\r\n                                    <ng-container matColumnDef=\"Delivering_Mill\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Delivering Mill </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                                    </ng-container>\r\n                                    <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Doc Item Cur</th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Amount\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"Currency\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Currency </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"action\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                                        <td mat-cell *matCellDef=\"let row\">\r\n                                            <mat-icon class=\"mr-10\" (click)=\"incotermExceptionsClick(row,'edit')\">edit\r\n                                            </mat-icon>\r\n                                            <!-- <mat-icon class=\"mr-10\" (click)=\"incotermExceptionsClick([row.id],'delete')\">\r\n                                                delete</mat-icon> -->\r\n\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns ;sticky: true\"></tr>\r\n                                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                    <tr class=\"mat-row\" *matNoDataRow>\r\n                                        <td class=\"mat-cell\" colspan=\"4\">No Record found \"{{searchValue}}\"\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </div>\r\n                            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\"\r\n                                [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                                (page)=\"pageEvent = pageChangeCall($event)\">\r\n                            </mat-paginator>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-smb',\r\n  templateUrl: './smb.component.html',\r\n  styleUrls: ['./smb.component.scss']\r\n})\r\nexport class SmbComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>smb works!</p>\r\n"],"sourceRoot":"webpack:///"}