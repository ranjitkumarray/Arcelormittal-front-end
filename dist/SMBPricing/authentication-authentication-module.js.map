{"version":3,"sources":["./src/app/authentication/authentication.module.ts","./src/app/authentication/authentication-routing.module.ts","./src/app/authentication/login/login.component.ts","./src/app/authentication/login/login.component.html","./src/app/authentication/authentication.component.ts","./src/app/authentication/authentication.component.html","./src/app/authentication/forgot-password/forgot-password.component.ts","./src/app/authentication/forgot-password/forgot-password.component.html","./src/app/authentication/reset-password/reset-password.component.ts","./src/app/authentication/reset-password/reset-password.component.html"],"names":[],"mappings":"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","file":"authentication-authentication-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialsModule } from '../materials/materials.module';\r\n\r\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\r\nimport { AuthenticationComponent } from './authentication.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AuthenticationComponent,\r\n    LoginComponent,\r\n    ForgotPasswordComponent,\r\n    ResetPasswordComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AuthenticationRoutingModule,\r\n    MaterialsModule,\r\n    MatStepperModule\r\n  ]\r\n})\r\nexport class AuthenticationModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component'; \r\nimport { AuthenticationComponent } from './authentication.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', \r\n  component:AuthenticationComponent ,\r\n  children: [\r\n    {\r\n      path: 'login',\r\n      component: LoginComponent\r\n    },\r\n    {\r\n      path: 'forgot-password',\r\n      component: ForgotPasswordComponent\r\n    },\r\n    {\r\n      path: 'reset-password',\r\n      component: ResetPasswordComponent\r\n    }\r\n  ]\r\n  \r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthenticationRoutingModule { }\r\n","import { Location } from \"@angular/common\";\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\n\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport user from './user.json';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  login: any = FormGroup;\r\n  hide = true;\r\n  loginData: any;\r\n  Users = user;\r\n  a: any;\r\n  test=true\r\n\r\n  emailPattern = \"^[a-z0-9._%+-]+@['gmail']+\\.[com]{2,4}$\";\r\n  loadingRouteConfig: boolean = false;\r\n  constructor(private fb: FormBuilder,\r\n    private apimethod: ApiService,\r\n    private apiString: CitGlobalConstantService,\r\n    private router: Router,\r\n    private location: Location) { }\r\n\r\n  ngOnInit(): void {\r\n    this.login = this.fb.group({\r\n      'username': ['', Validators.required],\r\n      'password': ['', Validators.required]\r\n    })\r\n  }\r\n\r\n  loginSubmit() {\r\n    if (this.login.status == \"VALID\") {\r\n      this.loadingRouteConfig = true\r\n      console.log(this.login.value)\r\n      this.apimethod.get_request_Param(this.apiString.userAccess.login, this.login.value).subscribe(result => {\r\n        this.loadingRouteConfig = false\r\n        this.apimethod.popupMessage('success', 'Login Successfuly!!')\r\n        localStorage.setItem('arc-userDetails', JSON.stringify(result))\r\n        console.log(document.referrer)\r\n               \r\n        if (document.referrer != '') {\r\n           \r\n          // setTimeout(() => {\r\n          //   window.location.reload()\r\n          // }, 100); \r\n          this.router.navigate(['/alloy-scrap/upload']) \r\n\r\n          setTimeout(() => {\r\n            window.location.reload()\r\n          },  3000);\r\n         \r\n          \r\n          // Logic\r\n          // if(this.test=true){\r\n          //   console.log(this.test)\r\n          //   setTimeout(()=>{\r\n          //     window.location.reload(),\r\n          //     this.test=false,\r\n          //     console.log(this.test)\r\n          //   }, 100);  \r\n          //   this.location.back()            \r\n          // }\r\n\r\n          // this.location.back()\r\n        } else {\r\n          //Logic\r\n          // if(this.test=true){\r\n          //   console.log(this.test)\r\n          //   setTimeout(()=>{\r\n          //     window.location.reload(),\r\n          //     this.test=false,\r\n          //     console.log(this.test)\r\n          //   }, 100);  \r\n          //   this.router.navigate(['/alloy-scrap/upload/'])          \r\n          // }\r\n          \r\n         \r\n          //   \r\n          this.router.navigate(['/alloy-scrap/upload'])\r\n          setTimeout(() => {\r\n            window.location.reload()\r\n          }, 3000);\r\n         \r\n            \r\n        }\r\n      }, error => {\r\n        console.log(error)\r\n        this.loadingRouteConfig = false\r\n        this.apimethod.popupMessage('error', 'Invalid Details')\r\n      })\r\n    } else {\r\n      this.apimethod.popupMessage('error', 'Fill all required details')\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n  <div class=\"loading-overlay is-active\">\r\n    <span class=\"signal\"></span>\r\n  </div>\r\n</ng-container>\r\n<div class=\"row output\">\r\n  <mat-card>\r\n    <form [formGroup]=\"login\" (submit)=\"loginSubmit()\">\r\n      <div class=\"container-fluid logo_outer\">\r\n        <a class=\"logo\">\r\n          <img src=\"../../../assets/images/arcelorMittal_logo.png\" alt=\"logo\" />\r\n        </a>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <mat-label>Username<sup>*</sup></mat-label>\r\n          <mat-form-field class=\"full-width w-100\" appearance=\"outline\">\r\n            <input matInput type=\"text\" formControlName=\"username\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-md-12\">\r\n          <mat-label>Password <sup>*</sup></mat-label>\r\n          <mat-form-field class=\"full-width w-100\" appearance=\"outline\">\r\n            <input matInput [type]=\"hide ? 'password':'text'\" formControlName=\"password\">\r\n            <mat-icon type=\"button\" matSuffix (click)=\"hide=!hide\">\r\n              {{hide?'visibility_off':'visibility'}}\r\n            </mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-md-12 text-right\">\r\n          <a [routerLink]=\"['../forgot-password']\" class=\"text-center\">Forgot Password</a>\r\n        </div>\r\n        <div class=\"col-md-12 text-center\">\r\n          <button mat-raised-button class='mr-10' color='primary'>Login</button>\r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n  </mat-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-authentication',\r\n  templateUrl: './authentication.component.html',\r\n  styleUrls: ['./authentication.component.scss']\r\n})\r\nexport class AuthenticationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  ForgotPassword: any = FormGroup;\r\n  loadingRouteConfig: boolean = false;\r\n  emailPattern = \"^[a-z0-9._%+-]+@['gmail']+\\.[com]{2,4}$\";\r\n  constructor(private fb:FormBuilder,private apimethod:ApiService,private router: Router,  private apiString: CitGlobalConstantService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.ForgotPassword=this.fb.group({\r\n      'email':['',[Validators.required,\r\n      \r\n        Validators.email,\r\n        Validators.pattern(this.emailPattern)\r\n      ]]\r\n    })\r\n  }\r\n  \r\n\r\n\r\n  reset_password() {\r\n    this.loadingRouteConfig = true\r\n  this.apimethod.get_request_Param(this.apiString.userAccess.resetemail, this.ForgotPassword.value).subscribe((result: any) => {\r\n      console.log(\"success\")\r\n      this.loadingRouteConfig = false\r\n     \r\n      setTimeout(()=>{\r\n           \r\n          }, 2000);\r\n           this.apimethod.popupMessage('success', 'Email sent for password reset')\r\n      this.router.navigate(['/auth/login/'])\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apimethod.popupMessage('error', 'Invalid Email')\r\n    })\r\n  }\r\n\r\n\r\n}","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div class=\"row main-div\">\r\n    <mat-card>\r\n        <form [formGroup]=\"ForgotPassword\"   >\r\n            <div class=\"container-fluid logo_outer\">\r\n                <a class=\"logo\">\r\n                    <img src=\"../../../assets/images/arcelorMittal_logo.png\" alt=\"logo\" />\r\n                </a>\r\n            </div>\r\n\r\n            <p> Enter your registered email<sup>*</sup></p>\r\n\r\n            <div class=\"col-md-12\">\r\n                <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                    <mat-label></mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"email\">\r\n                    <!-- [(ngModel)]=\"value\" -->\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"btn\">\r\n                <button mat-raised-button class='mr-10'  (click)=\"reset_password()\" color='primary'>Reset\r\n                    Password </button>\r\n            </div>\r\n            <!-- <mat-divider></mat-divider> -->\r\n\r\n            <div class=\"card-footer text-right\">\r\n                <a [routerLink]=\"['../login']\">back to login</a>\r\n            </div>\r\n        </form>\r\n    </mat-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.scss']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\nresetPassword:any=FormGroup;\r\n  \r\n  queryParam: any;\r\n  constructor(private fb: FormBuilder,private apimethod:ApiService, private router: Router, private apiString: CitGlobalConstantService,private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.route.queryParams.subscribe((param: any) => {\r\n      console.log(\"Record\", param)\r\n      this.queryParam = param\r\n    })\r\n\r\n    this.resetPassword = this.fb.group({\r\n     'email': this.queryParam.email,\r\n     'user_id':this.queryParam.user_id,\r\n    \r\n      'NewPassword': ['', [\r\n        Validators.required,\r\n      ]],\r\n      'ConfirmPassword': ['', [\r\n        Validators.required,\r\n\r\n      ]]\r\n    })\r\n  }\r\n\r\n\r\n\r\n  \r\n  reset_password() {\r\n    \r\n    \r\n    this.apimethod.get_request_Param(this.apiString.userAccess.reset_password, this.resetPassword.value).subscribe((result: any) => {\r\n        console.log(\"success\")\r\n        \r\n        this.apimethod.popupMessage('success', 'Password Changed Successfully')\r\n\r\n        this.router.navigate(['/auth/login/'])\r\n      \r\n      }, error => {\r\n    \r\n        this.apimethod.popupMessage('error', 'Please enter the password correctly')\r\n      })\r\n    }\r\n}\r\n","<div class=\"row output\">\r\n    <mat-card>\r\n        <form [formGroup]=\"resetPassword\">\r\n            <div class=\"container-fluid logo_outer\">\r\n                <a  [routerLink]=\"['../login']\" class=\"logo\">\r\n                    <img src=\"../../../assets/images/arcelorMittal_logo.png\" alt=\"logo\" />\r\n                </a>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class='col-md-12'>\r\n                    <mat-label>Enter New Password<sup>*</sup></mat-label>\r\n                    <mat-form-field class=\"full-width w-100\" appearance=\"outline\">\r\n                        <input matInput type=\"password\" formControlName=\"NewPassword\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class='col-md-12'>\r\n                    <mat-label>Confirm Password<sup>*</sup></mat-label>\r\n                    <mat-form-field class=\"full-width w-100\" appearance=\"outline\">\r\n                        <input matInput type='password' formControlName=\"ConfirmPassword\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-12 text-center\">\r\n                    <button (click)=\"reset_password()\" mat-raised-button class='mr-10' color='primary'>Reset</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </mat-card>\r\n</div>"],"sourceRoot":"webpack:///"}