{"version":3,"sources":["./src/app/views/alloy-scrap/history-alloy-scrap/history-alloy-scrap.component.ts","./src/app/views/alloy-scrap/history-alloy-scrap/history-alloy-scrap.component.html","./src/app/views/alloy-scrap/alloy-scrap.component.ts","./src/app/views/alloy-scrap/alloy-scrap.component.html","./src/app/views/alloy-scrap/upload-alloy-scrap/upload-alloy-scrap.component.ts","./src/app/views/alloy-scrap/upload-alloy-scrap/upload-alloy-scrap.component.html","./src/app/views/alloy-scrap/alloy-scrap-routing.module.ts","./src/app/views/alloy-scrap/alloy-scrap.module.ts","./src/app/views/alloy-scrap/files-detailed-preview/files-detailed-preview.component.ts","./src/app/views/alloy-scrap/files-detailed-preview/files-detailed-preview.component.html"],"names":[],"mappings":"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","file":"views-alloy-scrap-alloy-scrap-module.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\nimport { ApiService } from 'src/app/services/api.service';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { Router } from '@angular/router';\nimport { historyData } from '../alloy-scrap-interface.service';\n\n\n@Component({\n  selector: 'app-history-alloy-scrap',\n  templateUrl: './history-alloy-scrap.component.html',\n  styleUrls: ['./history-alloy-scrap.component.scss']\n})\nexport class HistoryAlloyScrapComponent implements OnInit {\n  loadingRouteConfig: boolean = false\n  displayedColumns: string[] = ['Batch_ID', 'filename', 'username', 'condition_type', 'date_time', \"action\"];\n  dataSource: any;\n  searchValue: any\n  pageEvent: any = PageEvent;\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\n  @ViewChild(MatSort) sort: any = MatSort;\n  pageLength: any = 10;\n  pageOffset: any = 0;\n  totalCount: any = 0;\n  constructor(\n    private apiString: CitGlobalConstantService,\n    private apiMethod: ApiService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getHistory()\n  }\n  //getting uploaded history of alloy scrap \n  getHistory() {\n    this.loadingRouteConfig = true\n    let searchString: any\n    if (this.searchValue) {\n      searchString = this.searchValue\n    } else {\n      searchString = \"all\"\n    }\n    this.apiMethod.get_request(this.apiString.alloy_scrap_history + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\n      console.log(result)\n      let resultData: any = result\n      this.totalCount = resultData.totalCount\n      this.loadingRouteConfig = false\n      this.dataSource = new MatTableDataSource<historyData>(resultData.data)\n      setTimeout(() => {\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })\n    }, error => {\n      this.loadingRouteConfig = false\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\n    })\n  }\n  //page change \n  pageChangeCall(event: any) {\n    console.log(event)\n    this.pageOffset = event.pageIndex\n    this.pageLength = event.pageSize\n    this.getHistory()\n  }\n  //filter \n  applyFilter() {\n    const filterValue = this.searchValue;\n    this.pageOffset = 0\n    this.pageLength = 10\n    this.getHistory()\n  }\n  viewDetails(rowData: any) {\n    console.log(rowData)\n    let string = (rowData.filename + \"&\" + rowData.condition_type + \"&\" + rowData.Batch_ID)\n    console.log(string)\n    var encodedString = btoa(string);\n    console.log(string, encodedString)\n    this.router.navigate(['/alloy-scrap/history/fileDetails/' + encodedString])\n  }\n\n}\n","<ng-container *ngIf=\"loadingRouteConfig\">\n    <div class=\"loading-overlay is-active\">\n        <span class=\"signal\"></span>\n    </div>\n</ng-container>\n<div>\n    <mat-card>\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class=\"text-right mt-10\">\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>Search</mat-label>\n                        <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter()\">\n                        <mat-icon matSuffix (click)=\"applyFilter()\" class=\"pointer\">search</mat-icon>\n                    </mat-form-field>\n\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class=\"my_offer_table_container\">\n                    <div class=\"text-center h-100\">\n                        <div class=\"table-outer-container offer_table_container position-relative h-100\">\n                            <div class=\"table-inner-container h-100\">\n                                <table mat-table [dataSource]=\"dataSource\" class=\"custom_table order_table\" matSort>\n\n\n                                    <ng-container matColumnDef=\"Batch_ID\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Batch ID </th>\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Batch_ID}} </td>\n                                    </ng-container>\n\n\n                                    <ng-container matColumnDef=\"filename\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header>File Name </th>\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.filename}} </td>\n                                    </ng-container>\n\n                                    <ng-container matColumnDef=\"username\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> User Name </th>\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.username}} </td>\n                                    </ng-container>\n\n                                    <ng-container matColumnDef=\"condition_type\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Condition Type </th>\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.condition_type}} </td>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"date_time\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.date_time}} </td>\n                                    </ng-container>\n\n                                    <ng-container matColumnDef=\"action\">\n                                        <th mat-header-cell *matHeaderCellDef> Action </th>\n                                        <td mat-cell *matCellDef=\"let row\" >\n                                            <mat-icon (click)=\"viewDetails(row)\">visibility</mat-icon>\n                                        </td>\n                                    </ng-container>\n\n                                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                                    <tr class=\"mat-row\" *matNoDataRow>\n                                        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{searchValue}}\"\n                                        </td>\n                                    </tr>\n                                </table>\n                                <mat-paginator [length]=\"totalCount\" [pageSize]=\"10\" [pageSizeOptions]=\"[10,25,50,100,150,200]\" #paginators\n                                (page)=\"pageEvent = pageChangeCall($event)\">\n                            </mat-paginator>\n                               \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-alloy-scrap',\n  templateUrl: './alloy-scrap.component.html',\n  styleUrls: ['./alloy-scrap.component.scss']\n})\nexport class AlloyScrapComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport * as _ from 'lodash';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { billetData, wireData, scrapData } from '../alloy-scrap-interface.service';\n\n@Component({\n  selector: 'app-upload-alloy-scrap',\n  templateUrl: './upload-alloy-scrap.component.html',\n  styleUrls: ['./upload-alloy-scrap.component.scss']\n})\nexport class UploadAlloyScrapComponent implements OnInit {\n  loading: boolean = false\n  displayedColumns_wire: string[] = ['VKORG', 'COND_TYPE', 'DST_CH', 'DIV', 'Month_year', 'Amount', 'Customer_ID', 'Internal_Grade'];\n  displayedColumns_billet: string[] = ['VKORG', 'COND_TYPE', 'DST_CH', 'DIV', 'Month_year', 'Amount', 'WARENEMPFAENGER_NR', 'SEL_NR_MELDUNG', 'dRUCKSPERRE'];\n  displayedColumns_scrap: string[] = [\n    'VKORG',\n    'COND_TYPE',\n    'DST_CH',\n    'DIV',\n    'Month_year',\n    'Model',\n    'Amount',\n    \"Monthly_Deviation\",\n    \"Product\"]\n\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\n  @ViewChild(MatSort) sort: any = MatSort;\n  tab: any;\n  table_data: any;\n  data: any = { \"inputaction\": '' };\n  alloy_surcharge_billet: any;\n  alloy_surcharge_wire: any;\n  scrap_surcharge_billet: any;\n  selectedFiles: any = {\n    \"alloy_surcharge_billet\": { file: '', uploadCompleted: false },\n    \"alloy_surcharge_wire\": { file: '', uploadCompleted: false },\n    \"scrap_surcharge_billet\": { file: '', uploadCompleted: false }\n  };\n  loadingRouteConfig: boolean = false\n  fileEv: any;\n  SelectedTab: any;\n  alloy_surcharge_billet_data: any;\n  scrap_surcharge_billet_data: any;\n  alloy_surcharge_wire_data: any;\n\n  constructor(\n    private apiString: CitGlobalConstantService,\n    private apiMethod: ApiService,\n    private _snackBar: MatSnackBar,\n  ) {\n  }\n\n  ngOnInit() {\n    this.data = { \"inputaction\": '' }\n    this.myTaksTabChange(\"Alloy Surcharge Wire\")\n  }\n\n\n  //tab change event \n  myTaksTabChange(tabLable: any) {\n    if (tabLable === 'Alloy Surcharge Wire') {\n      this.SelectedTab = \"alloy_surcharge_wire\"\n      console.log(this.SelectedTab)\n    } else if (tabLable === 'Alloy Surcharge Billet') {\n      console.log(tabLable)\n      this.SelectedTab = \"alloy_surcharge_billet\"\n\n    } else {\n      console.log(tabLable)\n      this.SelectedTab = \"scrap_surcharge_billet\"\n    }\n  }\n  // ==================== file change event ========================\n  dropFiles(ev: any): any {\n\n    ev.preventDefault();\n    this.fileEv = ev\n    let data: any = ev.dataTransfer.items[0]\n    console.log(data)\n    if (data) {\n      console.log(\"coming inside\")\n      // If dropped items aren't files, reject them\n      const allowed_types = [\n        'application/vnd.ms-excel',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];\n\n      if (!_.includes(allowed_types, data.type)) {\n        let imageError: any = 'Only xlsx are allowed.';\n        this._snackBar.open(imageError, \"\", {\n          duration: 4000,\n          panelClass: ['error'],\n          horizontalPosition: 'end',\n          verticalPosition: 'bottom',\n        });\n        return false;\n      }\n      let obj: any\n      if (data.kind === 'file') {\n        let file = data.getAsFile();\n        obj = {\n          fileName: file.name,\n          selectedFile: file,\n        }\n      }\n      if (this.SelectedTab === \"alloy_surcharge_billet\") {\n        this.selectedFiles.alloy_surcharge_billet = {\n          file: obj,\n          uploadCompleted: true\n        }\n      } else if (this.SelectedTab === \"alloy_surcharge_wire\") {\n        this.selectedFiles.alloy_surcharge_wire = {\n          file: obj,\n          uploadCompleted: true\n        }\n      } else {\n        this.selectedFiles.scrap_surcharge_billet = {\n          file: obj,\n          uploadCompleted: true\n        }\n      }\n    }\n  }\n\n  dragOverHandler(ev: any) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  onSelectFile(event: any) {\n    this.fileEv = event\n    console.log(event.target.files)\n    if (event.target.files && event.target.files[0]) {\n      var filesAmount = event.target.files.length;\n      for (let i = 0; i < filesAmount; i++) {\n        var reader = new FileReader();\n        let file: any = event.target.files[i]\n        console.log(file)\n\n        let obj: any = {\n          fileName: file.name,\n          selectedFile: file\n        }\n        if (this.SelectedTab === \"alloy_surcharge_billet\") {\n          this.selectedFiles.alloy_surcharge_billet = {\n            file: obj,\n            uploadCompleted: true\n          }\n        } else if (this.SelectedTab === \"alloy_surcharge_wire\") {\n          this.selectedFiles.alloy_surcharge_wire = {\n            file: obj,\n            uploadCompleted: true\n          }\n        } else {\n          this.selectedFiles.scrap_surcharge_billet = {\n            file: obj,\n            uploadCompleted: true\n          }\n        }\n        // this.selectedFiles.push(obj);\n        reader.onload = (event: any) => {\n        }\n\n        reader.readAsDataURL(event.target.files[i]);\n        event.target.value = ''\n\n      }\n    }\n  }\n\n  deleteFile(file: any, tabName: any) {\n\n    if (this.SelectedTab === \"alloy_surcharge_billet\") {\n      this.alloy_surcharge_billet = ''\n      this.selectedFiles.alloy_surcharge_billet = {\n        file: \"\",\n        uploadCompleted: false\n      }\n    } else if (this.SelectedTab === \"alloy_surcharge_wire\") {\n      this.alloy_surcharge_wire = ''\n      this.selectedFiles.alloy_surcharge_wire = {\n        file: \"\",\n        uploadCompleted: false\n      }\n    } else {\n      this.scrap_surcharge_billet = ''\n      this.selectedFiles.scrap_surcharge_billet = {\n        file: \"\",\n        uploadCompleted: false\n      }\n    }\n    console.log(this.fileEv, \"FILE EV \")\n    // this.fileEv.target.value = \"\";\n  }\n  uploadFiles(uploadDataTo: any) {\n    console.log(uploadDataTo)\n    const formData = new FormData();\n    let urlString: any\n    if (uploadDataTo === \"alloy_surcharge_billet\") {\n      formData.append(\"filename\", this.selectedFiles.alloy_surcharge_billet.file.selectedFile)\n      urlString = this.apiString.alloy_billet_upload\n    } else if (uploadDataTo === \"alloy_surcharge_wire\") {\n      formData.append(\"filename\", this.selectedFiles.alloy_surcharge_wire.file.selectedFile)\n      urlString = this.apiString.alloy_wire_upload\n\n    } else {\n      formData.append(\"filename\", this.selectedFiles.scrap_surcharge_billet.file.selectedFile)\n      urlString = this.apiString.scrap_upload\n    }\n    this.loadingRouteConfig = true\n    this.apiMethod.post_request(urlString, formData).subscribe((data) => {\n      console.log(data)\n      let resultData: any = data\n      this.loadingRouteConfig = false\n      if (uploadDataTo === \"alloy_surcharge_billet\") {\n        this.alloy_surcharge_billet_data = resultData\n        this.alloy_surcharge_billet = new MatTableDataSource<billetData>(JSON.parse(resultData.data))\n\n        setTimeout(() => {\n          this.alloy_surcharge_billet.paginator = this.paginator;\n          this.alloy_surcharge_billet.sort = this.sort;\n        }, 3000);\n      } else if (uploadDataTo === \"alloy_surcharge_wire\") {\n        this.alloy_surcharge_wire_data = resultData\n        this.alloy_surcharge_wire = new MatTableDataSource<wireData>(JSON.parse(resultData.data))\n        setTimeout(() => {\n          this.alloy_surcharge_wire.paginator = this.paginator;\n          this.alloy_surcharge_wire.sort = this.sort;\n        });\n      } else {\n        this.scrap_surcharge_billet_data = resultData\n        this.scrap_surcharge_billet = new MatTableDataSource<scrapData>(JSON.parse(resultData.data))\n        setTimeout(() => {\n          this.scrap_surcharge_billet.paginator = this.paginator;\n          this.scrap_surcharge_billet.sort = this.sort;\n        });\n      }\n      this.apiMethod.popupMessage('success', 'File data read successfully')\n    }, error => {\n      this.loadingRouteConfig = false\n      this.apiMethod.popupMessage('error', 'Error while reading uploaded file')\n    })\n  }\n\n  //==========================end===================================\n  //filter \n  applyFilter(event: Event, searchFrom: any) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    console.log(filterValue, this.alloy_surcharge_wire,)\n    if (searchFrom === \"alloy_surcharge_billet\") {\n      this.alloy_surcharge_billet.filter = filterValue.trim().toLowerCase();\n      if (this.alloy_surcharge_billet.paginator) {\n        this.alloy_surcharge_billet.paginator.firstPage();\n      }\n    } else if (searchFrom === \"alloy_surcharge_wire\") {\n      this.alloy_surcharge_wire.filter = filterValue.trim().toLowerCase();\n\n      if (this.alloy_surcharge_wire.paginator) {\n        this.alloy_surcharge_wire.paginator.firstPage();\n      }\n    } else {\n      this.scrap_surcharge_billet.filter = filterValue.trim().toLowerCase();\n\n      if (this.scrap_surcharge_billet.paginator) {\n        this.scrap_surcharge_billet.paginator.firstPage();\n      }\n    }\n  }\n\n  //data validate\n  validateDataForm(uploadDataTo: any) {\n    let urlString: any\n    let data: any\n    if (uploadDataTo === \"alloy_surcharge_billet\") {\n      urlString = this.apiString.alloy_billet_validate\n      data = {\n        \"billet\": JSON.parse(this.alloy_surcharge_billet_data.data),\n        \"filename\": this.alloy_surcharge_billet_data.filename\n      }\n    } else if (uploadDataTo === \"alloy_surcharge_wire\") {\n      urlString = this.apiString.alloy_wire_validate\n      data = {\n        \"wire\": JSON.parse(this.alloy_surcharge_wire_data.data),\n        \"filename\": this.alloy_surcharge_wire_data.filename\n      }\n    } else {\n      urlString = this.apiString.scrap_validate\n      data = {\n        \"scrap\": JSON.parse(this.scrap_surcharge_billet_data.data),\n        \"filename\": this.scrap_surcharge_billet_data.filename\n      }\n    }\n    this.loadingRouteConfig = true\n    this.apiMethod.post_request(urlString, data).subscribe((result: any) => {\n      console.log(\"success\")\n      this.loadingRouteConfig = false\n      this.apiMethod.popupMessage('success', 'File validated successfully')\n    }, error => {\n      this.loadingRouteConfig = false\n      this.apiMethod.popupMessage('error', 'Error while validating uploaded file')\n    })\n  }\n}\n","<ng-container *ngIf=\"loadingRouteConfig\">\n    <div class=\"loading-overlay is-active\">\n        <span class=\"signal\"></span>\n    </div>\n</ng-container>\n<mat-tab-group (selectedTabChange)=\"myTaksTabChange($event.tab.textLabel)\">\n    <mat-tab label=\"Alloy Surcharge Wire\">\n        <mat-card>\n            <!-- ========================file upload start here==========================  -->\n            <div>\n                <div class=\"row bg-w\">\n                    <div class=\"col-sm-12 col-lg-12 col-md-12 col-xl-12 col-12\">\n                        <div class=\"mtb-10\">\n                            <div class=\"height-100\">\n                                <div id=\"drag_zone\" class=\"file-upload-wrapper\" (drop)=\"dropFiles($event)\"\n                                    (dragover)='dragOverHandler($event)'>\n                                    <div class=\"pointCenter\">\n                                        <div class=\"card-drag\">\n                                            <span class=\"header\">\n                                                you can drag & drop your file here .. <br>\n                                                OR\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <button type=\"button\" color=\"primary\" mat-raised-button\n                                                [disabled]=\"selectedFiles.alloy_surcharge_wire.file!=''\"\n                                                (click)=\"fileInput2.click()\">\n                                                Choose file\n                                            </button>\n                                            <input hidden type='file' (change)=\"onSelectFile($event)\" #fileInput2\n                                                id=\"file\" accept=\".xls, .xlsx\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div>\n                                    <mat-list>\n                                        <mat-list-item *ngIf=\"selectedFiles.alloy_surcharge_wire.uploadCompleted\">\n                                            <mat-icon mat-list-icon>note</mat-icon>\n                                            <div mat-line>{{selectedFiles.alloy_surcharge_wire.file?.fileName}}</div>\n\n                                            <div>\n                                                <button mat-icon-button color=\"primary\"\n                                                    (click)=\"uploadFiles(SelectedTab)\">\n                                                    <mat-icon>upload</mat-icon>\n                                                </button>\n                                                <button mat-icon-button color=\"warn\"\n                                                    (click)=\"deleteFile(selectedFiles.alloy_surcharge_wire.file,SelectedTab)\">\n                                                    <mat-icon>delete_forever</mat-icon>\n                                                </button>\n                                            </div>\n                                            <mat-divider></mat-divider>\n                                        </mat-list-item>\n                                    </mat-list>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- ========================file upload end ========================= -->\n            <div class=\"row\" *ngIf=\"alloy_surcharge_wire && (selectedFiles.alloy_surcharge_wire.file)\">\n                <!-- <div class=\"row\"> -->\n                <div class=\"col-6\">\n                    <div class=\"text-left mt-10\">\n                        <button type=\"button\" color=\"primary\" mat-raised-button\n                            (click)=\"validateDataForm('alloy_surcharge_wire')\">\n                            Validate Alloy Surcharge Wire\n                        </button>\n                    </div>\n                </div>\n                <div class=\"col-6\">\n                    <div class=\"text-right mt-10\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Search</mat-label>\n                            <input matInput (keyup)=\"applyFilter($event,SelectedTab)\" #input>\n                            <mat-icon matSuffix>search</mat-icon>\n                        </mat-form-field>\n\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\" *ngIf=\"alloy_surcharge_wire && (selectedFiles.alloy_surcharge_wire.file)\">\n                <div class=\"col-12\">\n                    <div class=\"my_offer_table_container\">\n                        <div class=\"text-center h-100\">\n                            <div class=\"table-outer-container offer_table_container position-relative h-100\">\n                                <div class=\"table-inner-container h-100\">\n                                    <table mat-table [dataSource]=\"alloy_surcharge_wire\"\n                                        class=\"custom_table order_table\" matSort>\n\n                                        <ng-container matColumnDef=\"VKORG\">\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> VKORG</th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.VKORG}} </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"COND_TYPE\">\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> COND_TYPE</th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.COND_TYPE}} </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"DST_CH\">\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> DST_CH </th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.DST_CH}} </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"DIV\">\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> DIV</th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.DIV}} </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"Month_year\">\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Month_year</th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Month_year}} </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"Amount\">\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount</th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Amount }} </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"Customer_ID\">\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Customer_ID </th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Customer_ID}} </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"Internal_Grade\">\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Internal_Grade </th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Internal_Grade}} </td>\n                                        </ng-container>\n\n                                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns_wire\"></tr>\n                                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns_wire;\"></tr>\n\n                                    </table>\n                                    <mat-paginator [pageSizeOptions]=\"[10, 30, 50, 100]\"\n                                        aria-label=\"Select page of users\"></mat-paginator>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </mat-card>\n    </mat-tab>\n\n    <!-- ************************************************************************************************************** -->\n\n    <mat-tab label=\"Alloy Surcharge Billet\">\n        <mat-card>\n            <!-- ========================file upload start here==========================  -->\n            <div>\n                <div class=\"row bg-w\">\n                    <div class=\"col-sm-12 col-lg-12 col-md-12 col-xl-12 col-12\">\n                        <div class=\"mtb-10\">\n                            <div class=\"height-100\">\n                                <div id=\"drag_zone\" class=\"file-upload-wrapper\" (drop)=\"dropFiles($event)\"\n                                    (dragover)='dragOverHandler($event)'>\n                                    <div class=\"pointCenter\">\n                                        <div class=\"card-drag\">\n                                            <span class=\"header\">\n                                                you can drag & drop your file here .. <br>\n                                                OR\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <button type=\"button\" color=\"primary\" mat-raised-button\n                                                [disabled]=\"selectedFiles.alloy_surcharge_billet.file!=''\"\n                                                (click)=\"fileInput2.click()\">\n                                                Choose file\n                                            </button>\n                                            <input hidden type='file' (change)=\"onSelectFile($event)\" #fileInput2\n                                                id=\"file\" accept=\".xls, .xlsx\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div>\n                                    <mat-list>\n                                        <mat-list-item *ngIf=\"selectedFiles.alloy_surcharge_billet.uploadCompleted\">\n                                            <mat-icon mat-list-icon>note</mat-icon>\n                                            <div mat-line>{{selectedFiles.alloy_surcharge_billet.file?.fileName}}</div>\n\n                                            <div>\n                                                <button mat-icon-button color=\"primary\"\n                                                    (click)=\"uploadFiles(SelectedTab)\">\n                                                    <mat-icon>upload</mat-icon>\n                                                </button>\n                                                <button mat-icon-button color=\"warn\"\n                                                    (click)=\"deleteFile(selectedFiles.alloy_surcharge_billet.file,SelectedTab)\">\n                                                    <mat-icon>delete_forever</mat-icon>\n                                                </button>\n                                            </div>\n                                            <mat-divider></mat-divider>\n                                        </mat-list-item>\n                                    </mat-list>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- ========================file upload end ========================= -->\n            <div class=\"row\" *ngIf=\"alloy_surcharge_billet && (selectedFiles.alloy_surcharge_billet.file)\">\n                <div class=\"col-6\">\n                    <div class=\"text-left mt-10\">\n                        <button type=\"button\" color=\"primary\" class=\"text-right mt-10\" mat-raised-button\n                            (click)=\"validateDataForm('alloy_surcharge_billet')\">\n                            Validate Alloy Surcharge Billet\n                        </button>\n                    </div>\n                </div>\n                <div class=\"col-6\">\n                    <div class=\"text-right mt-10\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Search</mat-label>\n                            <input matInput (keyup)=\"applyFilter($event,SelectedTab)\" #input>\n                            <mat-icon matSuffix>search</mat-icon>\n                        </mat-form-field>\n\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\" *ngIf=\"alloy_surcharge_billet && (selectedFiles.alloy_surcharge_billet.file)\">\n                <div class=\"col-12\">\n                    <div class=\"my_offer_table_container\">\n                        <div class=\"text-center h-100\">\n                            <div class=\"table-outer-container offer_table_container position-relative h-100\">\n                                <div class=\"table-inner-container h-100\">\n                                    <table mat-table [dataSource]=\"alloy_surcharge_billet\"\n                                        class=\"custom_table order_table\">\n\n                                        <ng-container matColumnDef=\"VKORG\">\n                                            <th mat-header-cell *matHeaderCellDef> VKORG</th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.VKORG}} </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"COND_TYPE\">\n                                            <th mat-header-cell *matHeaderCellDef> COND_TYPE</th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.COND_TYPE}} </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"DST_CH\">\n                                            <th mat-header-cell *matHeaderCellDef> DST_CH </th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.DST_CH}} </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"DIV\">\n                                            <th mat-header-cell *matHeaderCellDef> DIV </th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.DIV}} </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"Month_year\">\n                                            <th mat-header-cell *matHeaderCellDef> Month_year</th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Month_year}} </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"Amount\">\n                                            <th mat-header-cell *matHeaderCellDef> Amount</th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Amount }} </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"WARENEMPFAENGER_NR\">\n                                            <th mat-header-cell *matHeaderCellDef> WARENEMPFAENGER_NR</th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.WARENEMPFAENGER_NR }}\n                                            </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"SEL_NR_MELDUNG\">\n                                            <th mat-header-cell *matHeaderCellDef> SEL_NR_MELDUNG</th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.SEL_NR_MELDUNG }} </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"dRUCKSPERRE\">\n                                            <th mat-header-cell *matHeaderCellDef> DRUCKSPERRE</th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.dRUCKSPERRE }} </td>\n                                        </ng-container>\n\n                                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns_billet\"></tr>\n                                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns_billet;\"></tr>\n                                    </table>\n                                    <mat-paginator [pageSizeOptions]=\"[10, 30, 50, 100]\"\n                                        aria-label=\"Select page of users\"></mat-paginator>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </mat-card>\n    </mat-tab>\n\n    <mat-tab label=\"Scrap Surcharge Billet\">\n        <mat-card>\n            <!-- ========================file upload start here==========================  -->\n            <div>\n                <div class=\"row bg-w\">\n                    <div class=\"col-sm-12 col-lg-12 col-md-12 col-xl-12 col-12\">\n                        <div class=\"mtb-10\">\n                            <div class=\"height-100\">\n                                <div id=\"drag_zone\" class=\"file-upload-wrapper\" (drop)=\"dropFiles($event)\"\n                                    (dragover)='dragOverHandler($event)'>\n                                    <div class=\"pointCenter\">\n                                        <div class=\"card-drag\">\n                                            <span class=\"header\">\n                                                you can drag & drop your file here .. <br>\n                                                OR\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <button type=\"button\" color=\"primary\" mat-raised-button\n                                                [disabled]=\"selectedFiles.scrap_surcharge_billet.file!=''\"\n                                                (click)=\"fileInput2.click()\">\n                                                Choose file\n                                            </button>\n                                            <input hidden type='file' (change)=\"onSelectFile($event)\" #fileInput2\n                                                id=\"file\" accept=\".xls, .xlsx\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div>\n                                    <mat-list>\n                                        <mat-list-item *ngIf=\"selectedFiles.scrap_surcharge_billet.uploadCompleted\">\n                                            <mat-icon mat-list-icon>note</mat-icon>\n                                            <div mat-line>{{selectedFiles.scrap_surcharge_billet.file?.fileName}}</div>\n                                            <div>\n                                                <button mat-icon-button color=\"primary\"\n                                                    (click)=\"uploadFiles(SelectedTab)\">\n                                                    <mat-icon>upload</mat-icon>\n                                                </button>\n                                                <button mat-icon-button color=\"warn\"\n                                                    (click)=\"deleteFile(selectedFiles.scrap_surcharge_billet.file,SelectedTab)\">\n                                                    <mat-icon>delete_forever</mat-icon>\n                                                </button>\n                                            </div>\n                                            <mat-divider></mat-divider>\n                                        </mat-list-item>\n                                    </mat-list>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- ========================file upload end ========================= -->\n            <div class=\"row\" *ngIf=\"scrap_surcharge_billet && (selectedFiles.scrap_surcharge_billet.file)\">\n                <div class=\"col-6 \">\n                    <div class=\"text-left mt-10\">\n                        <button type=\"button\" color=\"primary\" mat-raised-button\n                            (click)=\"validateDataForm('scrap_surcharge_billet')\">\n                            Validate Scrap Surcharge Billet\n                        </button>\n                    </div>\n                </div>\n                <div class=\"col-6\">\n                    <div class=\"text-right mt-10\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Search</mat-label>\n                            <input matInput (keyup)=\"applyFilter($event,SelectedTab)\" #input>\n                            <mat-icon matSuffix>search</mat-icon>\n                        </mat-form-field>\n\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\" *ngIf=\"scrap_surcharge_billet && (selectedFiles.scrap_surcharge_billet.file)\">\n                <div class=\"col-12\">\n                    <div class=\"my_offer_table_container\">\n                        <div class=\"text-center h-100\">\n                            <div class=\"table-outer-container offer_table_container position-relative h-100\">\n                                <div class=\"table-inner-container h-100\">\n                                    <table mat-table [dataSource]=\"scrap_surcharge_billet\"\n                                        class=\"custom_table order_table\">\n\n                                        <ng-container matColumnDef=\"VKORG\">\n                                            <th mat-header-cell *matHeaderCellDef> VKORG </th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.VKORG}} </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"COND_TYPE\">\n                                            <th mat-header-cell *matHeaderCellDef> COND_TYPE </th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.COND_TYPE}} </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"DST_CH\">\n                                            <th mat-header-cell *matHeaderCellDef> DST_CH</th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.DST_CH}} </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"DIV\">\n                                            <th mat-header-cell *matHeaderCellDef> DIV</th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.DIV}} </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"Month_year\">\n                                            <th mat-header-cell *matHeaderCellDef> Month_year</th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Month_year}} </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"Model\">\n                                            <th mat-header-cell *matHeaderCellDef> Model</th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Model}} </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"Monthly_Deviation\">\n                                            <th mat-header-cell *matHeaderCellDef> Monthly Deviation</th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Monthly_Deviation }}\n                                            </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"Product\">\n                                            <th mat-header-cell *matHeaderCellDef> Product</th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Product }} </td>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"Amount\">\n                                            <th mat-header-cell *matHeaderCellDef> Amount</th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Amount }} </td>\n                                        </ng-container>\n\n                                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns_scrap\"></tr>\n                                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns_scrap;\"></tr>\n                                    </table>\n                                    <mat-paginator [pageSizeOptions]=\"[10, 30, 50, 100]\"\n                                        aria-label=\"Select page of users\"></mat-paginator>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </mat-card>\n    </mat-tab>\n</mat-tab-group>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SidebarComponent } from 'src/app/common-use/sidebar/sidebar.component';\nimport { AlloyScrapComponent } from './alloy-scrap.component';\nimport { FilesDetailedPreviewComponent } from './files-detailed-preview/files-detailed-preview.component';\nimport { HistoryAlloyScrapComponent } from './history-alloy-scrap/history-alloy-scrap.component';\nimport { UploadAlloyScrapComponent } from './upload-alloy-scrap/upload-alloy-scrap.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SidebarComponent,\n    children: [\n      {\n        path: 'upload',\n        component: UploadAlloyScrapComponent\n      },\n      {\n        path: 'history',\n        children: [\n          {\n            path: '',\n            component: HistoryAlloyScrapComponent,\n          },\n          {\n            path: \"fileDetails/:fileDetails\",\n            component: FilesDetailedPreviewComponent\n          }\n        ]\n      }\n    ]\n  }\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AlloyScrapRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AlloyScrapRoutingModule } from './alloy-scrap-routing.module';\nimport { AlloyScrapComponent } from './alloy-scrap.component';\nimport { UploadAlloyScrapComponent } from './upload-alloy-scrap/upload-alloy-scrap.component';\nimport { HistoryAlloyScrapComponent } from './history-alloy-scrap/history-alloy-scrap.component';\nimport { MaterialsModule } from 'src/app/materials/materials.module';\nimport { FilesDetailedPreviewComponent } from './files-detailed-preview/files-detailed-preview.component';\n\n\n@NgModule({\n  declarations: [\n    AlloyScrapComponent,\n    UploadAlloyScrapComponent,\n    HistoryAlloyScrapComponent,\n    FilesDetailedPreviewComponent\n  ],\n  imports: [\n    CommonModule,\n    AlloyScrapRoutingModule,\n    MaterialsModule\n\n  ]\n})\nexport class AlloyScrapModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\nimport { ApiService } from 'src/app/services/api.service';\nimport { Location } from \"@angular/common\";\nimport { wireData, billetData, scrapData } from '../alloy-scrap-interface.service';\n\n@Component({\n  selector: 'app-files-detailed-preview',\n  templateUrl: './files-detailed-preview.component.html',\n  styleUrls: ['./files-detailed-preview.component.scss']\n})\nexport class FilesDetailedPreviewComponent implements OnInit {\n  fileDetails: any;\n  loadingRouteConfig: boolean = false\n  displayedColumns_wire: string[] = ['VKORG', 'COND_TYPE', 'DST_CH', 'DIV', 'Month_year', 'Amount', 'Customer_ID', 'Internal_Grade'];\n  displayedColumns_billet: string[] = ['VKORG', 'COND_TYPE', 'DST_CH', 'DIV', 'Month_year', 'Amount', 'WARENEMPFAENGER_NR', 'Materialnr', 'dRUCKSPERRE'];\n  displayedColumns_scrap: string[] = [\n    'VKORG',\n    'COND_TYPE',\n    'DST_CH',\n    'DIV',\n    'Month_year',\n    'Model',\n    'Amount',\n    \"Monthly_Deviation\",\n    \"Product\"]\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\n  @ViewChild(MatSort) sort: any = MatSort;\n  alloy_surcharge_billet: any;\n  alloy_surcharge_wire: any;\n  scrap_surcharge_billet: any;\n  constructor(\n    private Route: ActivatedRoute,\n    private router: Router,\n    private apiString: CitGlobalConstantService,\n    private apiMethod: ApiService,\n    private location: Location\n  ) { }\n\n  ngOnInit(): void {\n    this.Route.paramMap.subscribe(params => {\n      this.fileDetails = params.get('fileDetails')\n    })\n    if (this.fileDetails) {\n      console.log(atob(this.fileDetails))\n      this.getDetails()\n    }\n  }\n  getDetails() {\n    let requiredData = atob(this.fileDetails).split('&')\n    let body = {\n      filename: requiredData[0],\n      condition_type: requiredData[1],\n      Batch_ID: requiredData[2]\n    }\n    this.loadingRouteConfig = true\n    this.apiMethod.get_request_Param(this.apiString.get_history_file_data, body).subscribe(result => {\n      console.log(result)\n      this.loadingRouteConfig = false\n      let resultData: any = result\n      let tablename = Object.keys(result)\n      console.log(tablename)\n      if (tablename[0] === 'table_wire') {\n        this.alloy_surcharge_wire = new MatTableDataSource<wireData>((resultData.table_wire))\n        setTimeout(() => {\n          this.alloy_surcharge_wire.paginator = this.paginator;\n          this.alloy_surcharge_wire.sort = this.sort;\n        });\n\n      }\n      if (tablename[0] === 'table_billet') {\n        this.alloy_surcharge_billet = new MatTableDataSource<billetData>((resultData.table_billet))\n        setTimeout(() => {\n          this.alloy_surcharge_billet.paginator = this.paginator;\n          this.alloy_surcharge_billet.sort = this.sort;\n        });\n      }\n      if (tablename[0] === 'table_scrap') {\n        this.scrap_surcharge_billet = new MatTableDataSource<scrapData>((resultData.table_scrap))\n        setTimeout(() => {\n          this.scrap_surcharge_billet.paginator = this.paginator;\n          this.scrap_surcharge_billet.sort = this.sort;\n        });\n      }\n    }, error => {\n      this.loadingRouteConfig = false\n      this.apiMethod.popupMessage('error', 'Error while fatching file details')\n    })\n  }\n  applyFilter(event: Event, searchFrom: any) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    console.log(filterValue, this.alloy_surcharge_wire,)\n    if (searchFrom === \"alloy_surcharge_billet\") {\n      this.alloy_surcharge_billet.filter = filterValue.trim().toLowerCase();\n      if (this.alloy_surcharge_billet.paginator) {\n        this.alloy_surcharge_billet.paginator.firstPage();\n      }\n    }\n    if (searchFrom === \"alloy_surcharge_wire\") {\n      this.alloy_surcharge_wire.filter = filterValue.trim().toLowerCase();\n\n      if (this.alloy_surcharge_wire.paginator) {\n        this.alloy_surcharge_wire.paginator.firstPage();\n      }\n    }\n    if (searchFrom === \"scrap_surcharge_billet\") {\n      this.scrap_surcharge_billet.filter = filterValue.trim().toLowerCase();\n\n      if (this.scrap_surcharge_billet.paginator) {\n        this.scrap_surcharge_billet.paginator.firstPage();\n      }\n    }\n  }\n  back() {\n    this.location.back()\n  }\n}\n","<ng-container *ngIf=\"loadingRouteConfig\">\n    <div class=\"loading-overlay is-active\">\n        <span class=\"signal\"></span>\n    </div>\n</ng-container>\n<mat-card>\n    <!-- ========================alloy_surcharge_wire ========================= -->\n    <div class=\"row\" *ngIf=\"alloy_surcharge_wire\">\n        <!-- <div class=\"row\"> -->\n        <div class=\"col-6\">\n            <div class=\"text-left mt-10\">\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"back()\">\n                    <i class=\"fa fa-arrow-alt-circle-left\"></i>\n                    Back\n                </button>\n            </div>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"text-right mt-10\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Search</mat-label>\n                    <input matInput (keyup)=\"applyFilter($event,'alloy_surcharge_wire')\" #input>\n                </mat-form-field>\n\n            </div>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"alloy_surcharge_wire \">\n        <div class=\"col-12\">\n            <div class=\"my_offer_table_container\">\n                <div class=\"text-center h-100\">\n                    <div class=\"table-outer-container offer_table_container position-relative h-100\">\n                        <div class=\"table-inner-container h-100\">\n                            <table mat-table [dataSource]=\"alloy_surcharge_wire\" class=\"custom_table order_table\"\n                                matSort>\n\n                                <ng-container matColumnDef=\"VKORG\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> VKORG</th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.VKORG}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"COND_TYPE\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> COND_TYPE</th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.COND_TYPE}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"DST_CH\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> DST_CH </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.DST_CH}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"DIV\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> DIV</th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.DIV}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"Month_year\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Month_year</th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Month_year}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"Amount\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount</th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Amount }} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"Customer_ID\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Customer_ID </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Customer_ID}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"Internal_Grade\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Internal_Grade </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Internal_Grade}} </td>\n                                </ng-container>\n\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns_wire\"></tr>\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns_wire;\"></tr>\n\n                            </table>\n                            <mat-paginator [pageSizeOptions]=\"[10, 30, 50, 100]\" aria-label=\"Select page of users\">\n                            </mat-paginator>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- ****************************************** alloy_surcharge_billet******************************************************************** -->\n    <div class=\"row\" *ngIf=\"alloy_surcharge_billet\">\n        <!-- <div class=\"row\"> -->\n        <div class=\"col-6\">\n            <div class=\"text-left mt-10\">\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"back()\">\n                    <i class=\"fa fa-arrow-alt-circle-left\"></i>\n                    Back\n                </button>\n            </div>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"text-right mt-10\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Search</mat-label>\n                    <input matInput (keyup)=\"applyFilter($event,'alloy_surcharge_billet')\" #input>\n                </mat-form-field>\n\n            </div>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"alloy_surcharge_billet\">\n        <div class=\"col-12\">\n            <div class=\"my_offer_table_container\">\n                <div class=\"text-center h-100\">\n                    <div class=\"table-outer-container offer_table_container position-relative h-100\">\n                        <div class=\"table-inner-container h-100\">\n                            <table mat-table [dataSource]=\"alloy_surcharge_billet\" class=\"custom_table order_table\">\n\n                                <ng-container matColumnDef=\"VKORG\">\n                                    <th mat-header-cell *matHeaderCellDef> VKORG</th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.VKORG}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"COND_TYPE\">\n                                    <th mat-header-cell *matHeaderCellDef> COND_TYPE</th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.COND_TYPE}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"DST_CH\">\n                                    <th mat-header-cell *matHeaderCellDef> DST_CH </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.DST_CH}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"DIV\">\n                                    <th mat-header-cell *matHeaderCellDef> DIV </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.DIV}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"Month_year\">\n                                    <th mat-header-cell *matHeaderCellDef> Month_year</th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Month_year}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"Amount\">\n                                    <th mat-header-cell *matHeaderCellDef> Amount</th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Amount }} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"WARENEMPFAENGER_NR\">\n                                    <th mat-header-cell *matHeaderCellDef> WARENEMPFAENGER_NR</th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.WARENEMPFAENGER_NR }}\n                                    </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"Materialnr\">\n                                    <th mat-header-cell *matHeaderCellDef> Materialnr</th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Materialnr }} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"dRUCKSPERRE\">\n                                    <th mat-header-cell *matHeaderCellDef> DRUCKSPERRE</th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.dRUCKSPERRE }} </td>\n                                </ng-container>\n\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns_billet\"></tr>\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns_billet;\"></tr>\n                            </table>\n                            <mat-paginator [pageSizeOptions]=\"[10, 30, 50, 100]\" aria-label=\"Select page of users\">\n                            </mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- ***************************************** scrap_surcharge_billet ********************************************************************* -->\n    <div class=\"row\" *ngIf=\"scrap_surcharge_billet\">\n        <!-- <div class=\"row\"> -->\n        <div class=\"col-6\">\n            <div class=\"text-left mt-10\">\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"back()\">\n                    <i class=\"fa fa-arrow-alt-circle-left\"></i>\n                    Back\n                </button>\n            </div>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"text-right mt-10\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Search</mat-label>\n                    <input matInput (keyup)=\"applyFilter($event,'scrap_surcharge_billet')\" #input>\n                </mat-form-field>\n\n            </div>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"scrap_surcharge_billet \">\n        <div class=\"col-12\">\n            <div class=\"my_offer_table_container\">\n                <div class=\"text-center h-100\">\n                    <div class=\"table-outer-container offer_table_container position-relative h-100\">\n                        <div class=\"table-inner-container h-100\">\n                            <table mat-table [dataSource]=\"scrap_surcharge_billet\" class=\"custom_table order_table\">\n\n                                <ng-container matColumnDef=\"VKORG\">\n                                    <th mat-header-cell *matHeaderCellDef> VKORG </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.VKORG}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"COND_TYPE\">\n                                    <th mat-header-cell *matHeaderCellDef> COND_TYPE </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.COND_TYPE}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"DST_CH\">\n                                    <th mat-header-cell *matHeaderCellDef> DST_CH</th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.DST_CH}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"DIV\">\n                                    <th mat-header-cell *matHeaderCellDef> DIV</th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.DIV}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"Month_year\">\n                                    <th mat-header-cell *matHeaderCellDef> Month_year</th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Month_year}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"Model\">\n                                    <th mat-header-cell *matHeaderCellDef> Model</th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Model}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"Monthly_Deviation\">\n                                    <th mat-header-cell *matHeaderCellDef> Monthly Deviation</th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Monthly_Deviation }}\n                                    </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"Product\">\n                                    <th mat-header-cell *matHeaderCellDef> Product</th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Product }} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"Amount\">\n                                    <th mat-header-cell *matHeaderCellDef> Amount</th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Amount }} </td>\n                                </ng-container>\n\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns_scrap\"></tr>\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns_scrap;\"></tr>\n                            </table>\n                            <mat-paginator [pageSizeOptions]=\"[10, 30, 50, 100]\" aria-label=\"Select page of users\">\n                            </mat-paginator>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</mat-card>"],"sourceRoot":"webpack:///"}