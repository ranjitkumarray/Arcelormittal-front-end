{"version":3,"sources":["./src/app/views/alloy-scrap/history-alloy-scrap/history-alloy-scrap.component.ts","./src/app/views/alloy-scrap/history-alloy-scrap/history-alloy-scrap.component.html","./src/app/views/alloy-scrap/alloy-scrap.component.ts","./src/app/views/alloy-scrap/alloy-scrap.component.html","./src/app/views/alloy-scrap/upload-alloy-scrap/upload-alloy-scrap.component.ts","./src/app/views/alloy-scrap/upload-alloy-scrap/upload-alloy-scrap.component.html","./node_modules/ngx-csv/ngx-csv.js","./src/app/views/alloy-scrap/alloy-scrap-routing.module.ts","./src/app/views/alloy-scrap/alloy-scrap.module.ts","./src/app/views/alloy-scrap/files-detailed-preview/files-detailed-preview.component.ts","./src/app/views/alloy-scrap/files-detailed-preview/files-detailed-preview.component.html","./src/app/views/alloy-scrap/upload-alloy-scrap/validate-popup/validate-popup.component.ts","./src/app/views/alloy-scrap/upload-alloy-scrap/validate-popup/validate-popup.component.html"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;AACY;AAGS;;;;;;;;;;;;;;ICLtE,wEAAyC;IACrC,0EAAuC;IACnC,sEAA4B;IAChC,4DAAM;IACV,qEAAe;;;IA0ByB,yEAAuC;IAAC,qEAAS;IAAA,4DAAK;;;IACtD,yEAAmC;IAAC,uDAAiB;IAAA,4DAAK;;;IAAtB,0DAAiB;IAAjB,4FAAiB;;;IAKrD,yEAAuC;IAAA,qEAAU;IAAA,4DAAK;;;IACtD,yEAAmC;IAAC,uDAAiB;IAAA,4DAAK;;;IAAtB,0DAAiB;IAAjB,4FAAiB;;;IAIrD,yEAAuC;IAAC,sEAAU;IAAA,4DAAK;;;IACvD,yEAAmC;IAAC,uDAAiB;IAAA,4DAAK;;;IAAtB,0DAAiB;IAAjB,4FAAiB;;;IAIrD,yEAAuC;IAAC,2EAAe;IAAA,4DAAK;;;IAC5D,yEAAmC;IAAC,uDAAuB;IAAA,4DAAK;;;IAA5B,0DAAuB;IAAvB,kGAAuB;;;IAG3D,yEAAuC;IAAC,iEAAK;IAAA,4DAAK;;;IAClD,yEAAmC;IAAC,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,6FAAkB;;;IAItD,yEAAsC;IAAC,mEAAO;IAAA,4DAAK;;;;IACnD,yEAAoC;IAChC,+EAAqC;IAA3B,2WAA0B;IAAC,qEAAU;IAAA,4DAAW;IAC9D,4DAAK;;;IAGT,oEAA4D;;;IAC5D,oEAAkE;;;IAElE,yEAAkC;IAC9B,yEAAiC;IAAA,uDACjC;IAAA,4DAAK;IACT,4DAAK;;;IAFgC,0DACjC;IADiC,8HACjC;;;ADnDjC,MAAM,0BAA0B;IAYrC,YACU,SAAmC,EACnC,SAAqB,EACrB,MAAc;QAFd,cAAS,GAAT,SAAS,CAA0B;QACnC,cAAS,GAAT,SAAS,CAAY;QACrB,WAAM,GAAN,MAAM,CAAQ;QAdxB,uBAAkB,GAAY,KAAK;QACnC,qBAAgB,GAAa,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,gBAAgB,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC;QAG3G,cAAS,GAAQ,qEAAS,CAAC;QACF,cAAS,GAAQ,wEAAY,CAAC;QACnC,SAAI,GAAQ,8DAAO,CAAC;QACxC,eAAU,GAAQ,EAAE,CAAC;QACrB,eAAU,GAAQ,CAAC,CAAC;QACpB,eAAU,GAAQ,CAAC,CAAC;QACpB,gBAAW,GAAM,EAAE,CAAC;IAMpB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE;IACnB,CAAC;IACD,0CAA0C;IAC1C,UAAU;QACR,IAAI,CAAC,kBAAkB,GAAG,IAAI;QAC9B,IAAI,YAAiB;QACrB,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,YAAY,GAAG,IAAI,CAAC,WAAW;SAChC;aAAM;YACL,YAAY,GAAG,KAAK;SACrB;QACD,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAmB,GAAG,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,SAAS,GAAG,IAAI,CAAC,UAAU,GAAG,iBAAiB,GAAG,YAAY,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACvL,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;YACnB,IAAI,UAAU,GAAQ,MAAM;YAC5B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU;YACvC,IAAI,CAAC,kBAAkB,GAAG,KAAK;YAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAc,UAAU,CAAC,IAAI,CAAC;YACtE,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,IAAI,CAAC,WAAW,EAAE;oBACpB,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;iBAC5C;gBACD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAEnC,CAAC,CAAC;QACJ,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,kBAAkB,GAAG,KAAK;YAC/B,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,OAAO,EAAE,8BAA8B,CAAC;QACtE,CAAC,CAAC;IACJ,CAAC;IACD,cAAc;IACd,cAAc,CAAC,KAAU;QACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,SAAS;QACjC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,QAAQ;QAChC,IAAI,CAAC,UAAU,EAAE;IACnB,CAAC;IACD,SAAS;IACT,WAAW,CAAC,WAAgB;QAC1B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC7C,IAAI,CAAC,WAAW,GAAG,WAAW;QAC9B,IAAI,CAAC,UAAU,GAAG,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,GAAG;QACrB,IAAI,CAAC,UAAU,EAAE;IACnB,CAAC;IACD,WAAW,CAAC,OAAY;QACtB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACpB,IAAI,MAAM,GAAG,CAAC,OAAO,CAAC,QAAQ,GAAG,GAAG,GAAG,OAAO,CAAC,cAAc,GAAG,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC;QACvF,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACnB,IAAI,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,aAAa,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mCAAmC,GAAG,aAAa,CAAC,CAAC;IAC7E,CAAC;;oGAvEU,0BAA0B;0GAA1B,0BAA0B;kEAM1B,wEAAY;kEACZ,8DAAO;;;;;;QCtBpB,wIAIe;QACf,sEAAK;QACD,2EAAU;QACN,yEAAiB;QACb,yEAAoB;QAChB,yEAA8B;QAC1B,oFAAqC;QACjC,4EAAW;QAAA,iEAAM;QAAA,4DAAY;QAC7B,2EAAgF;QAAhE,mMAAyB,qGAAgB,gBAAY,QAAQ,CAAC,IAArC;QAAzC,4DAAgF;QAChF,+EAAoE;QAAhD,qJAAS,gBAAY,QAAQ,CAAC,IAAC;QAAiB,kEAAM;QAAA,4DAAW;QACzF,4DAAiB;QAErB,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,0EAAiB;QACb,0EAAoB;QAChB,0EAAsC;QAClC,0EAA+B;QAC3B,0EAAiF;QAC7E,2EAAyC;QACrC,6EAA6E;QAGzE,6EAAsC;QAClC,uHAAsD;QACtD,uHAA0D;QAC9D,qEAAe;QAGf,6EAAsC;QAClC,uHAAsD;QACtD,uHAA0D;QAC9D,qEAAe;QAEf,6EAAsC;QAClC,uHAAuD;QACvD,uHAA0D;QAC9D,qEAAe;QAEf,6EAA4C;QACxC,uHAA4D;QAC5D,uHAAgE;QACpE,qEAAe;QACf,6EAAuC;QACnC,uHAAkD;QAClD,uHAA2D;QAC/D,qEAAe;QAEf,6EAAoC;QAChC,uHAAmD;QACnD,uHAEK;QACT,qEAAe;QAEf,uHAA4D;QAC5D,uHAAkE;QAElE,uHAGK;QACT,4DAAQ;QACR,yFAC4C;QAA5C,8KAAoB,0BAAsB,IAAC;QAC/C,4DAAgB;QAEhB,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAW;QACf,4DAAM;;QAhFS,wFAAwB;QAYC,0DAAyB;QAAzB,oFAAyB;QAchB,0DAAyB;QAAzB,sFAAyB;QAmClB,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAOhD,0DAAqB;QAArB,kFAAqB;;;;;;;;;;;;;;;;;;;;AC9D7D,MAAM,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;sFALU,mBAAmB;mGAAnB,mBAAmB;QCPhC,2EAA+B;;;;;;;;;;;;;;ACI/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AAC+B;AACV;AACY;AAGsB;AAE1C;;;;;;;;;;;;;;;;;;;ICZzC,wEAAyC;IACrC,0EAAuC;IACnC,sEAA4B;IAChC,4DAAM;IACV,qEAAe;;;;IAgCyB,gFAA0E;IACtE,+EAAwB;IAAA,+DAAI;IAAA,4DAAW;IACvC,0EAAc;IAAA,uDAAqD;IAAA,4DAAM;IAEzE,sEAAK;IACD,6EACuC;IAAnC,gWAAkC;IAClC,2EAAU;IAAA,iEAAM;IAAA,4DAAW;IAC/B,4DAAS;IACT,6EAC8E;IAA1E,gZAAyE;IACzE,4EAAU;IAAA,0EAAc;IAAA,4DAAW;IACvC,4DAAS;IACb,4DAAM;IACN,0EAA2B;IAC/B,4DAAgB;;;IAbE,0DAAqD;IAArD,wLAAqD;;;;IAsBnG,0EAA2F;IAEvF,0EAAmB;IACf,0EAA6B;IAKzB,6EACoD;IAAhD,gUAAuB,sBAAsB,KAAE;IAC/C,0FACJ;IAAA,4DAAS;IAET,6EAAqH;IAAhD,gUAAuB,sBAAsB,KAAE;IAChH,mEAA8B;IAAC,qEACnC;IAAA,4DAAS;IACb,4DAAM;IACV,4DAAM;IACN,0EAAmB;IACf,0EAA8B;IAC1B,sFAAqC;IACjC,6EAAW;IAAA,kEAAM;IAAA,4DAAY;IAC7B,iFAAiE;IAAjD,oWAAyC;IAAzD,4DAAiE;IACjE,gFAAoB;IAAA,kEAAM;IAAA,4DAAW;IACzC,4DAAiB;IAErB,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAa0B,yEAAuC;IAAC,kEAAM;IAAA,4DAAK;;;IACnD,yEAAuC;IAAC,uDAAmB;IAAA,4DAAK;;;IAAxB,0DAAmB;IAAnB,0HAAmB;;;IAI3D,yEAAuC;IAAC,qEAAS;IAAA,4DAAK;;;IACtD,yEAAuC;IAAC,uDAAuB;IAAA,4DAAK;;;IAA5B,0DAAuB;IAAvB,8HAAuB;;;IAI/D,yEAAuC;IAAC,mEAAO;IAAA,4DAAK;;;IACpD,yEAAuC;IAAC,uDAAoB;IAAA,4DAAK;;;IAAzB,0DAAoB;IAApB,2HAAoB;;;IAI5D,yEAAuC;IAAC,+DAAG;IAAA,4DAAK;;;IAChD,yEAAuC;IAAC,uDAAiB;IAAA,4DAAK;;;IAAtB,0DAAiB;IAAjB,wHAAiB;;;IAIzD,yEAAuC;IAAC,sEAAU;IAAA,4DAAK;;;IACvD,yEAAuC;IAAC,uDAAwB;IAAA,4DAAK;;;IAA7B,0DAAwB;IAAxB,+HAAwB;;;IAIhE,yEAAuC;IAAC,kEAAM;IAAA,4DAAK;;;IACnD,yEAAuC;IAAC,uDAAqB;IAAA,4DAAK;;;IAA1B,0DAAqB;IAArB,2HAAqB;;;IAI7D,yEAAuC;IAAC,wEAAY;IAAA,4DAAK;;;IACzD,yEAAuC;IAAC,uDAAyB;IAAA,4DAAK;;;IAA9B,0DAAyB;IAAzB,gIAAyB;;;IAIjE,yEAAuC;IAAC,2EAAe;IAAA,4DAAK;;;IAC5D,yEAAuC;IAAC,uDAA4B;IAAA,4DAAK;;;IAAjC,0DAA4B;IAA5B,mIAA4B;;;IAKpE,yEAAuC;IAAC,wEAAY;IAAA,4DAAK;;;IACzD,yEAAuC;IAAC,uDAAyB;IAAA,4DAAK;;;IAA9B,0DAAyB;IAAzB,gIAAyB;;;IAGjE,yEAAuC;IAAC,yEAAa;IAAA,4DAAK;;;IAC1D,yEAAuC;IAAC,uDAA0B;IAAA,4DAAK;;;IAA/B,0DAA0B;IAA1B,iIAA0B;;;IAGlE,yEAAuC;IAAC,8EAAkB;IAAA,4DAAK;;;IAC/D,yEAAuC;IAAC,uDAAgC;IAAA,4DAAK;;;IAArC,0DAAgC;IAAhC,uIAAgC;;;IAGxE,yEAAuC;IAAC,gFAAoB;IAAA,4DAAK;;;IACjE,yEAAuC;IAAC,uDAAiC;IAAA,4DAAK;;;IAAtC,0DAAiC;IAAjC,wIAAiC;;;IAK7E,oEAAiE;;;IACjE,oEAAuE;;;;IAxEnG,0EAA2F;IACvF,0EAAoB;IAChB,0EAAsC;IAClC,0EAA+B;IAC3B,0EAAiF;IAC7E,0EAAyC;IAGrC,4EACqC;IAEjC,4EAAmC;IAC/B,2HAAmD;IACnD,2HAAgE;IACpE,qEAAe;IAEf,6EAAuC;IACnC,6HAAsD;IACtD,6HAAoE;IACxE,qEAAe;IAEf,6EAAoC;IAChC,6HAAoD;IACpD,6HAAiE;IACrE,qEAAe;IAEf,6EAAiC;IAC7B,6HAAgD;IAChD,6HAA8D;IAClE,qEAAe;IAEf,6EAAwC;IACpC,6HAAuD;IACvD,6HAAqE;IACzE,qEAAe;IAEf,6EAAoC;IAChC,6HAAmD;IACnD,6HAAkE;IACtE,qEAAe;IAEf,6EAAyC;IACrC,6HAAyD;IACzD,6HAAsE;IAC1E,qEAAe;IAEf,6EAA4C;IACxC,6HAA4D;IAC5D,6HAAyE;IAC7E,qEAAe;IAGf,6EAAyC;IACrC,6HAAyD;IACzD,6HAAsE;IAC1E,qEAAe;IACf,6EAA0C;IACtC,6HAA0D;IAC1D,6HAAuE;IAC3E,qEAAe;IACf,6EAAgD;IAC5C,6HAA+D;IAC/D,6HAA6E;IACjF,qEAAe;IACf,6EAAiD;IAC7C,6HAAiE;IACjE,6HAA8E;IAClF,qEAAe;IAIf,6HAAiE;IACjE,6HAAuE;IAE3E,4DAAQ;IACR,gFACsD;IAE1D,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IA3EmC,0DAAmC;IAAnC,mGAAmC;IA+D5B,2DAAsC;IAAtC,yGAAsC;IACzB,0DAA+B;IAA/B,0GAA+B;IAGrD,0DAAqC;IAArC,kJAAqC;;;;IA4ChD,gFAA4E;IACxE,+EAAwB;IAAA,+DAAI;IAAA,4DAAW;IACvC,0EAAc;IAAA,uDAAuD;IAAA,4DAAM;IAE3E,sEAAK;IACD,6EACuC;IAAnC,gWAAkC;IAClC,2EAAU;IAAA,iEAAM;IAAA,4DAAW;IAC/B,4DAAS;IACT,6EACgF;IAA5E,kZAA2E;IAC3E,4EAAU;IAAA,0EAAc;IAAA,4DAAW;IACvC,4DAAS;IACb,4DAAM;IACN,0EAA2B;IAC/B,4DAAgB;;;IAbE,0DAAuD;IAAvD,4LAAuD;;;;IAsBrG,0EAA+F;IAC3F,0EAAmB;IACf,0EAA6B;IACzB,6EAEsD;IAAlD,gUAAuB,wBAAwB,KAAE;IACjD,4FACJ;IAAA,4DAAS;IACT,6EAAuH;IAAlD,gUAAuB,wBAAwB,KAAE;IAClH,mEAA8B;IAAC,qEACnC;IAAA,4DAAS;IACb,4DAAM;IACV,4DAAM;IACN,0EAAmB;IACf,0EAA8B;IAC1B,sFAAqC;IACjC,6EAAW;IAAA,kEAAM;IAAA,4DAAY;IAC7B,iFAAiE;IAAjD,oWAAyC;IAAzD,4DAAiE;IACjE,gFAAoB;IAAA,kEAAM;IAAA,4DAAW;IACzC,4DAAiB;IAErB,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAW0B,yEAAsC;IAAC,iEAAK;IAAA,4DAAK;;;IACjD,yEAAuC;IAAC,uDAAmB;IAAA,4DAAK;;;IAAxB,0DAAmB;IAAnB,0HAAmB;;;IAI3D,yEAAsC;IAAC,qEAAS;IAAA,4DAAK;;;IACrD,yEAAuC;IAAC,uDAAuB;IAAA,4DAAK;;;IAA5B,0DAAuB;IAAvB,8HAAuB;;;IAI/D,yEAAsC;IAAC,mEAAO;IAAA,4DAAK;;;IACnD,yEAAuC;IAAC,uDAAoB;IAAA,4DAAK;;;IAAzB,0DAAoB;IAApB,2HAAoB;;;IAI5D,yEAAsC;IAAC,gEAAI;IAAA,4DAAK;;;IAChD,yEAAuC;IAAC,uDAAiB;IAAA,4DAAK;;;IAAtB,0DAAiB;IAAjB,wHAAiB;;;IAIzD,yEAAsC;IAAC,sEAAU;IAAA,4DAAK;;;IACtD,yEAAuC;IAAC,uDAAwB;IAAA,4DAAK;;;IAA7B,0DAAwB;IAAxB,+HAAwB;;;IAIhE,yEAAsC;IAAC,kEAAM;IAAA,4DAAK;;;IAClD,yEAAuC;IAAC,uDAAqB;IAAA,4DAAK;;;IAA1B,0DAAqB;IAArB,2HAAqB;;;IAI7D,yEAAsC;IAAC,8EAAkB;IAAA,4DAAK;;;IAC9D,yEAAuC;IAAC,uDACxC;IAAA,4DAAK;;;IADmC,0DACxC;IADwC,uIACxC;;;IAIA,yEAAsC;IAAC,0EAAc;IAAA,4DAAK;;;IAC1D,yEAAuC;IAAC,uDAA6B;IAAA,4DAAK;;;IAAlC,0DAA6B;IAA7B,mIAA6B;;;IAIrE,yEAAsC;IAAC,uEAAW;IAAA,4DAAK;;;IACvD,yEAAuC;IAAC,uDAA0B;IAAA,4DAAK;;;IAA/B,0DAA0B;IAA1B,gIAA0B;;;IAGtE,oEAAmE;;;IACnE,oEAAyE;;;IAxDrG,0EAA+F;IAC3F,0EAAoB;IAChB,0EAAsC;IAClC,0EAA+B;IAC3B,0EAAiF;IAC7E,0EAAyC;IACrC,4EACqC;IAEjC,4EAAmC;IAC/B,2HAAiD;IACjD,2HAAgE;IACpE,qEAAe;IAEf,6EAAuC;IACnC,6HAAqD;IACrD,6HAAoE;IACxE,qEAAe;IAEf,6EAAoC;IAChC,6HAAmD;IACnD,6HAAiE;IACrE,qEAAe;IAEf,6EAAiC;IAC7B,6HAAgD;IAChD,6HAA8D;IAClE,qEAAe;IAEf,6EAAwC;IACpC,6HAAsD;IACtD,6HAAqE;IACzE,qEAAe;IAEf,6EAAoC;IAChC,6HAAkD;IAClD,6HAAkE;IACtE,qEAAe;IAEf,6EAAgD;IAC5C,6HAA8D;IAC9D,6HACK;IACT,qEAAe;IAEf,6EAA4C;IACxC,6HAA0D;IAC1D,6HAA0E;IAC9E,qEAAe;IAEf,6EAAyC;IACrC,6HAAuD;IACvD,6HAAuE;IAC3E,qEAAe;IAEf,6HAAmE;IACnE,6HAAyE;IAC7E,4DAAQ;IACR,gFACsD;IAC1D,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IA3DmC,0DAAqC;IAArC,qGAAqC;IAiD9B,2DAAwC;IAAxC,2GAAwC;IAC3B,0DAAiC;IAAjC,4GAAiC;IAEvD,0DAAqC;IAArC,kJAAqC;;;;IAyChD,gFAA4E;IACxE,+EAAwB;IAAA,+DAAI;IAAA,4DAAW;IACvC,0EAAc;IAAA,uDAAuD;IAAA,4DAAM;IAC3E,sEAAK;IACD,6EACuC;IAAnC,gWAAkC;IAClC,2EAAU;IAAA,iEAAM;IAAA,4DAAW;IAC/B,4DAAS;IACT,6EACgF;IAA5E,sZAA2E;IAC3E,4EAAU;IAAA,0EAAc;IAAA,4DAAW;IACvC,4DAAS;IACb,4DAAM;IACN,0EAA2B;IAC/B,4DAAgB;;;IAZE,0DAAuD;IAAvD,8LAAuD;;;;IAqBrG,0EAA+F;IAC3F,0EAAoB;IAChB,0EAA6B;IACzB,6EACsD;IAAlD,mUAAuB,wBAAwB,KAAE;IACjD,4FACJ;IAAA,4DAAS;IACT,6EAAuH;IAAlD,mUAAuB,wBAAwB,KAAE;IAClH,mEAA8B;IAAC,qEACnC;IAAA,4DAAS;IACb,4DAAM;IACV,4DAAM;IACN,0EAAmB;IACf,0EAA8B;IAC1B,sFAAqC;IACjC,6EAAW;IAAA,kEAAM;IAAA,4DAAY;IAC7B,iFAAiE;IAAjD,wWAAyC;IAAzD,4DAAiE;IACjE,gFAAoB;IAAA,kEAAM;IAAA,4DAAW;IACzC,4DAAiB;IAErB,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAW0B,yEAAsC;IAAC,kEAAM;IAAA,4DAAK;;;IAClD,yEAAuC;IAAC,uDAAmB;IAAA,4DAAK;;;IAAxB,0DAAmB;IAAnB,4HAAmB;;;IAI3D,yEAAsC;IAAC,sEAAU;IAAA,4DAAK;;;IACtD,yEAAuC;IAAC,uDAAuB;IAAA,4DAAK;;;IAA5B,0DAAuB;IAAvB,gIAAuB;;;IAI/D,yEAAsC;IAAC,kEAAM;IAAA,4DAAK;;;IAClD,yEAAuC;IAAC,uDAAoB;IAAA,4DAAK;;;IAAzB,0DAAoB;IAApB,6HAAoB;;;IAI5D,yEAAsC;IAAC,+DAAG;IAAA,4DAAK;;;IAC/C,yEAAuC;IAAC,uDAAiB;IAAA,4DAAK;;;IAAtB,0DAAiB;IAAjB,0HAAiB;;;IAIzD,yEAAsC;IAAC,sEAAU;IAAA,4DAAK;;;IACtD,yEAAuC;IAAC,uDAAwB;IAAA,4DAAK;;;IAA7B,0DAAwB;IAAxB,iIAAwB;;;IAIhE,yEAAsC;IAAC,iEAAK;IAAA,4DAAK;;;IACjD,yEAAuC;IAAC,uDAAmB;IAAA,4DAAK;;;IAAxB,0DAAmB;IAAnB,4HAAmB;;;IAI3D,yEAAsC;IAAC,6EAAiB;IAAA,4DAAK;;;IAC7D,yEAAuC;IAAC,uDACxC;IAAA,4DAAK;;;IADmC,0DACxC;IADwC,wIACxC;;;IAIA,yEAAsC;IAAC,mEAAO;IAAA,4DAAK;;;IACnD,yEAAuC;IAAC,uDAAsB;IAAA,4DAAK;;;IAA3B,0DAAsB;IAAtB,8HAAsB;;;IAI9D,yEAAsC;IAAC,kEAAM;IAAA,4DAAK;;;IAClD,yEAAuC;IAAC,uDAAqB;IAAA,4DAAK;;;IAA1B,0DAAqB;IAArB,6HAAqB;;;IAGjE,oEAAkE;;;IAClE,oEAAwE;;;IAxDpG,0EAA+F;IAC3F,0EAAoB;IAChB,0EAAsC;IAClC,0EAA+B;IAC3B,0EAAiF;IAC7E,0EAAyC;IACrC,4EACqC;IAEjC,4EAAmC;IAC/B,2HAAkD;IAClD,2HAAgE;IACpE,qEAAe;IAEf,6EAAuC;IACnC,6HAAsD;IACtD,6HAAoE;IACxE,qEAAe;IAEf,6EAAoC;IAChC,6HAAkD;IAClD,6HAAiE;IACrE,qEAAe;IAEf,6EAAiC;IAC7B,6HAA+C;IAC/C,6HAA8D;IAClE,qEAAe;IAEf,6EAAwC;IACpC,6HAAsD;IACtD,6HAAqE;IACzE,qEAAe;IAEf,6EAAmC;IAC/B,6HAAiD;IACjD,6HAAgE;IACpE,qEAAe;IAEf,6EAA+C;IAC3C,6HAA6D;IAC7D,6HACK;IACT,qEAAe;IAEf,6EAAqC;IACjC,6HAAmD;IACnD,6HAAmE;IACvE,qEAAe;IAEf,6EAAoC;IAChC,6HAAkD;IAClD,6HAAkE;IACtE,qEAAe;IAEf,6HAAkE;IAClE,6HAAwE;IAC5E,4DAAQ;IACR,gFACsD;IAE1D,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IA5DmC,0DAAqC;IAArC,sGAAqC;IAiD9B,2DAAuC;IAAvC,2GAAuC;IAC1B,0DAAgC;IAAhC,4GAAgC;IAEtD,0DAAqC;IAArC,kJAAqC;;ADvbjF,MAAM,yBAAyB;IAoCpC,YACU,SAAmC,EACnC,SAAqB,EACrB,SAAsB,EACtB,KAAgB;QAHhB,cAAS,GAAT,SAAS,CAA0B;QACnC,cAAS,GAAT,SAAS,CAAY;QACrB,cAAS,GAAT,SAAS,CAAa;QACtB,UAAK,GAAL,KAAK,CAAW;QAvC1B,YAAO,GAAY,KAAK;QACxB,0BAAqB,GAAa,CAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,YAAY,EAAE,QAAQ,EAAE,aAAa,EAAE,gBAAgB,EAAC,aAAa,EAAC,cAAc,EAAC,oBAAoB,EAAC,qBAAqB,CAAC,CAAC;QAC3M,4BAAuB,GAAa,CAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,YAAY,EAAE,QAAQ,EAAE,oBAAoB,EAAE,gBAAgB,EAAE,aAAa,CAAC,CAAC;QAC3J,2BAAsB,GAAa;YACjC,OAAO;YACP,WAAW;YACX,QAAQ;YACR,KAAK;YACL,YAAY;YACZ,OAAO;YACP,QAAQ;YACR,mBAAmB;YACnB,SAAS;SAAC;QAEa,cAAS,GAAQ,wEAAY,CAAC;QACnC,SAAI,GAAQ,8DAAO,CAAC;QAGxC,SAAI,GAAQ,EAAE,aAAa,EAAE,EAAE,EAAE,CAAC;QAIlC,kBAAa,GAAQ;YACnB,wBAAwB,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,eAAe,EAAE,KAAK,EAAE;YAC9D,sBAAsB,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,eAAe,EAAE,KAAK,EAAE;YAC5D,wBAAwB,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,eAAe,EAAE,KAAK,EAAE;SAC/D,CAAC;QACF,uBAAkB,GAAY,KAAK;QAMnC,qBAAgB,GAAM,KAAK,CAAC;IAQ5B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,EAAE,aAAa,EAAE,EAAE,EAAE;QACjC,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC;IAC9C,CAAC;IAGD,mBAAmB;IACnB,eAAe,CAAC,QAAa;QAC3B,IAAI,QAAQ,KAAK,sBAAsB,EAAE;YACvC,IAAI,CAAC,WAAW,GAAG,sBAAsB;YACzC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;SAC9B;aAAM,IAAI,QAAQ,KAAK,wBAAwB,EAAE;YAChD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;YACrB,IAAI,CAAC,WAAW,GAAG,wBAAwB;SAE5C;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;YACrB,IAAI,CAAC,WAAW,GAAG,wBAAwB;SAC5C;IACH,CAAC;IACD,kEAAkE;IAClE,SAAS,CAAC,EAAO;QAEf,EAAE,CAAC,cAAc,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,EAAE;QAChB,IAAI,IAAI,GAAQ,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACjB,IAAI,IAAI,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;YAC5B,6CAA6C;YAC7C,MAAM,aAAa,GAAG;gBACpB,0BAA0B;gBAC1B,mEAAmE;aAAC,CAAC;YAEvE,IAAI,CAAC,+CAAU,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;gBACzC,IAAI,UAAU,GAAQ,wBAAwB,CAAC;gBAC/C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,EAAE;oBAClC,QAAQ,EAAE,IAAI;oBACd,UAAU,EAAE,CAAC,OAAO,CAAC;oBACrB,kBAAkB,EAAE,KAAK;oBACzB,gBAAgB,EAAE,QAAQ;iBAC3B,CAAC,CAAC;gBACH,OAAO,KAAK,CAAC;aACd;YACD,IAAI,GAAQ;YACZ,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;gBACxB,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;gBAC5B,GAAG,GAAG;oBACJ,QAAQ,EAAE,IAAI,CAAC,IAAI;oBACnB,YAAY,EAAE,IAAI;iBACnB;aACF;YACD,IAAI,IAAI,CAAC,WAAW,KAAK,wBAAwB,EAAE;gBACjD,IAAI,CAAC,aAAa,CAAC,sBAAsB,GAAG;oBAC1C,IAAI,EAAE,GAAG;oBACT,eAAe,EAAE,IAAI;iBACtB;aACF;iBAAM,IAAI,IAAI,CAAC,WAAW,KAAK,sBAAsB,EAAE;gBACtD,IAAI,CAAC,aAAa,CAAC,oBAAoB,GAAG;oBACxC,IAAI,EAAE,GAAG;oBACT,eAAe,EAAE,IAAI;iBACtB;aACF;iBAAM;gBACL,IAAI,CAAC,aAAa,CAAC,sBAAsB,GAAG;oBAC1C,IAAI,EAAE,GAAG;oBACT,eAAe,EAAE,IAAI;iBACtB;aACF;SACF;IACH,CAAC;IAED,eAAe,CAAC,EAAO;QACrB,EAAE,CAAC,cAAc,EAAE,CAAC;QACpB,EAAE,CAAC,eAAe,EAAE,CAAC;IACvB,CAAC;IAED,YAAY,CAAC,KAAU;QACrB,IAAI,CAAC,MAAM,GAAG,KAAK;QACnB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC/B,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YAC/C,IAAI,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;YAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;gBACpC,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;gBAC9B,IAAI,IAAI,GAAQ,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBAEjB,IAAI,GAAG,GAAQ;oBACb,QAAQ,EAAE,IAAI,CAAC,IAAI;oBACnB,YAAY,EAAE,IAAI;iBACnB;gBACD,IAAI,IAAI,CAAC,WAAW,KAAK,wBAAwB,EAAE;oBACjD,IAAI,CAAC,aAAa,CAAC,sBAAsB,GAAG;wBAC1C,IAAI,EAAE,GAAG;wBACT,eAAe,EAAE,IAAI;qBACtB;iBACF;qBAAM,IAAI,IAAI,CAAC,WAAW,KAAK,sBAAsB,EAAE;oBACtD,IAAI,CAAC,aAAa,CAAC,oBAAoB,GAAG;wBACxC,IAAI,EAAE,GAAG;wBACT,eAAe,EAAE,IAAI;qBACtB;iBACF;qBAAM;oBACL,IAAI,CAAC,aAAa,CAAC,sBAAsB,GAAG;wBAC1C,IAAI,EAAE,GAAG;wBACT,eAAe,EAAE,IAAI;qBACtB;iBACF;gBACD,gCAAgC;gBAChC,MAAM,CAAC,MAAM,GAAG,CAAC,KAAU,EAAE,EAAE;gBAC/B,CAAC;gBAED,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5C,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;aAExB;SACF;IACH,CAAC;IAED,UAAU,CAAC,IAAS,EAAE,OAAY;QAEhC,IAAI,IAAI,CAAC,WAAW,KAAK,wBAAwB,EAAE;YACjD,IAAI,CAAC,sBAAsB,GAAG,EAAE;YAChC,IAAI,CAAC,aAAa,CAAC,sBAAsB,GAAG;gBAC1C,IAAI,EAAE,EAAE;gBACR,eAAe,EAAE,KAAK;aACvB;SACF;aAAM,IAAI,IAAI,CAAC,WAAW,KAAK,sBAAsB,EAAE;YACtD,IAAI,CAAC,oBAAoB,GAAG,EAAE;YAC9B,IAAI,CAAC,aAAa,CAAC,oBAAoB,GAAG;gBACxC,IAAI,EAAE,EAAE;gBACR,eAAe,EAAE,KAAK;aACvB;SACF;aAAM;YACL,IAAI,CAAC,sBAAsB,GAAG,EAAE;YAChC,IAAI,CAAC,aAAa,CAAC,sBAAsB,GAAG;gBAC1C,IAAI,EAAE,EAAE;gBACR,eAAe,EAAE,KAAK;aACvB;SACF;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC;QACpC,iCAAiC;IACnC,CAAC;IACD,WAAW,CAAC,YAAiB;QAC3B,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QACzB,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,IAAI,SAAc;QAClB,IAAI,YAAY,KAAK,wBAAwB,EAAE;YAC7C,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,IAAI,CAAC,YAAY,CAAC;YACxF,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,mBAAmB;SAC/C;aAAM,IAAI,YAAY,KAAK,sBAAsB,EAAE;YAClD,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,CAAC;YACtF,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB;SAE7C;aAAM;YACL,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,IAAI,CAAC,YAAY,CAAC;YACxF,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY;SACxC;QACD,IAAI,CAAC,kBAAkB,GAAG,IAAI;QAC9B,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACzE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,IAAI,UAAU,GAAQ,IAAI;YAC1B,IAAI,CAAC,kBAAkB,GAAG,KAAK;YAC/B,IAAI,YAAY,KAAK,wBAAwB,EAAE;gBAC7C,IAAI,CAAC,2BAA2B,GAAG,UAAU;gBAC7C,IAAI,CAAC,sBAAsB,GAAG,IAAI,0EAAkB,CAAa,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAE7F,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,sBAAsB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACvD,IAAI,CAAC,sBAAsB,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC/C,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;iBAAM,IAAI,YAAY,KAAK,sBAAsB,EAAE;gBAClD,IAAI,CAAC,yBAAyB,GAAG,UAAU;gBAC3C,IAAI,CAAC,oBAAoB,GAAG,IAAI,0EAAkB,CAAW,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACzF,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACrD,IAAI,CAAC,oBAAoB,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC7C,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,2BAA2B,GAAG,UAAU;gBAC7C,IAAI,CAAC,sBAAsB,GAAG,IAAI,0EAAkB,CAAY,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAC5F,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,sBAAsB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACvD,IAAI,CAAC,sBAAsB,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC/C,CAAC,CAAC,CAAC;aACJ;YACD,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,EAAE,6BAA6B,CAAC;QACvE,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,kBAAkB,GAAG,KAAK;YAC/B,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,OAAO,EAAE,mCAAmC,CAAC;QAC3E,CAAC,CAAC;IACJ,CAAC;IAED,kEAAkE;IAClE,SAAS;IACT,WAAW,CAAC,KAAY,EAAE,UAAe;QACvC,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,oBAAoB,CAAE;QACpD,IAAI,UAAU,KAAK,wBAAwB,EAAE;YAC3C,IAAI,CAAC,sBAAsB,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YACtE,IAAI,IAAI,CAAC,sBAAsB,CAAC,SAAS,EAAE;gBACzC,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;aACnD;SACF;aAAM,IAAI,UAAU,KAAK,sBAAsB,EAAE;YAChD,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YAEpE,IAAI,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE;gBACvC,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;aACjD;SACF;aAAM;YACL,IAAI,CAAC,sBAAsB,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YAEtE,IAAI,IAAI,CAAC,sBAAsB,CAAC,SAAS,EAAE;gBACzC,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;aACnD;SACF;IACH,CAAC;IAED,eAAe;IACf,gBAAgB,CAAC,YAAiB;QAChC,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC;QACtC,IAAI,SAAc;QAClB,IAAI,IAAS;QACb,IAAI,YAAY,KAAK,wBAAwB,EAAE;YAC7C,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,qBAAqB;YAChD,IAAI,GAAG;gBACL,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC;gBAC3D,UAAU,EAAE,IAAI,CAAC,2BAA2B,CAAC,QAAQ;aACtD;SACF;aAAM,IAAI,YAAY,KAAK,sBAAsB,EAAE;YAClD,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,mBAAmB;YAC9C,IAAI,GAAG;gBACL,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC;gBACvD,UAAU,EAAE,IAAI,CAAC,yBAAyB,CAAC,QAAQ;aACpD;SACF;aAAM;YACL,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc;YACzC,IAAI,GAAG;gBACL,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC;gBAC1D,UAAU,EAAE,IAAI,CAAC,2BAA2B,CAAC,QAAQ;aACtD;SACF;QACD,IAAI,CAAC,kBAAkB,GAAG,IAAI;QAC9B,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YAC5E,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;YACtB,IAAI,CAAC,kBAAkB,GAAG,KAAK;YAC/B,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,EAAE,6BAA6B,CAAC;QACvE,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,kBAAkB,GAAG,KAAK;YAC/B,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,OAAO,EAAE,sCAAsC,CAAC;QAC9E,CAAC,CAAC;IACJ,CAAC;IAEH,aAAa,CAAC,GAAO;QAGjB,IAAG,GAAG,IAAE,wBAAwB,EAAC;YAC/B,IAAI,OAAO,GAAG;gBACZ,OAAO,EAAC,IAAI,CAAC,uBAAuB;aAClC,CAAC;YACP,IAAI,sDAAM,CAAC,IAAI,CAAC,2BAA2B,CAAC,IAAI,EAAE,wBAAwB,EAAC,OAAO,CAAC,CAAC;SAGnF;QACD,IAAG,GAAG,IAAE,sBAAsB,EAAC;YAC7B,IAAI,OAAO,GAAG;gBACZ,OAAO,EAAC,IAAI,CAAC,qBAAqB;aAChC,CAAC;YACP,IAAI,sDAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC,IAAI,EAAE,sBAAsB,EAAC,OAAO,CAAC,CAAC;SAG/E;QACD,IAAG,GAAG,IAAE,wBAAwB,EAAC;YAC/B,IAAI,OAAO,GAAG;gBACZ,OAAO,EAAC,IAAI,CAAC,sBAAsB;aACjC,CAAC;YACP,IAAI,sDAAM,CAAC,IAAI,CAAC,2BAA2B,CAAC,IAAI,EAAE,wBAAwB,EAAC,OAAO,CAAC,CAAC;SAGnF;IAMH,CAAC;IAMD,aAAa,CAAC,OAAW;QACrB,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,+FAAsB,EACtD;YACE,UAAU,EAAE,uBAAuB;YACnC,SAAS,EAAE,KAAK;YAChB,SAAS,EAAE,MAAM;YACjB,IAAI,EAAE;gBACR,gBAAgB,EAAC,IAAI;gBACrB,OAAO,EAAC,OAAO;aACZ;SACF,CACA;QACD,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAEnD,IAAG,MAAM,IAAE,IAAI,EAAC;gBACJ,IAAG,MAAM,CAAC,gBAAgB,IAAE,IAAI,EAAE;oBAIhC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC;oBACrC,UAAU,CAAC,GAAG,EAAE;wBACd,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE;oBAC1B,CAAC,EAAE,IAAI,CAAC,CAAC;iBAEV;aAAC;YAEJ,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;YACpB,2BAA2B;QAC5B,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAC3B;IAEL,CAAC;;kGA7WQ,yBAAyB;yGAAzB,yBAAyB;kEAezB,wEAAY;kEACZ,8DAAO;;;;;;;QCpCpB,uIAIe;QACf,mFAA2E;QAA5D,sLAAqB,yCAAqC,IAAC;QACtE,6EAAsC;QAClC,2EAAU;QAEN,sEAAK;QACD,yEAAsB;QAClB,yEAA4D;QACxD,yEAAoB;QAChB,yEAAwB;QACpB,yEACyC;QADO,kJAAQ,qBAAiB,IAAC,kGAC1D,2BAAuB,IADmC;QAEtE,0EAAyB;QACrB,0EAAuB;QACnB,4EAAqB;QACjB,mGAAsC;QAAA,iEAAI;QAC1C,gEACJ;QAAA,4DAAO;QACX,4DAAM;QACN,uEAAK;QACD,8EAEiC;QAA7B,iSAAS,WAAkB,IAAC;QAC5B,yEACJ;QAAA,4DAAS;QACT,iFACmC;QADT,yJAAU,wBAAoB,IAAC;QAAzD,4DACmC;QACvC,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,uEAAK;QACD,4EAAU;QACN,4IAegB;QACpB,4DAAW;QACf,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,yHA4BM;QACN,yHAmFM;QACV,4DAAW;QACf,4DAAU;QAIV,+EAAwC;QACpC,4EAAU;QAEN,uEAAK;QACD,0EAAsB;QAClB,0EAA4D;QACxD,0EAAoB;QAChB,0EAAwB;QACpB,0EACyC;QADO,mJAAQ,qBAAiB,IAAC,mGAC1D,2BAAuB,IADmC;QAEtE,0EAAyB;QACrB,0EAAuB;QACnB,4EAAqB;QACjB,mGAAsC;QAAA,iEAAI;QAC1C,gEACJ;QAAA,4DAAO;QACX,4DAAM;QACN,uEAAK;QACD,8EAEiC;QAA7B,iSAAS,WAAkB,IAAC;QAC5B,yEACJ;QAAA,4DAAS;QACT,iFACmC;QADT,yJAAU,wBAAoB,IAAC;QAAzD,4DACmC;QACvC,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,uEAAK;QACD,4EAAU;QACN,4IAegB;QACpB,4DAAW;QACf,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,yHAuBM;QACN,yHAiEM;QACV,4DAAW;QACf,4DAAU;QAEV,+EAAwC;QACpC,4EAAU;QAEN,uEAAK;QACD,0EAAsB;QAClB,0EAA4D;QACxD,0EAAoB;QAChB,0EAAwB;QACpB,0EACyC;QADO,mJAAQ,qBAAiB,IAAC,mGAC1D,2BAAuB,IADmC;QAEtE,0EAAyB;QACrB,0EAAuB;QACnB,4EAAqB;QACjB,mGAAsC;QAAA,iEAAI;QAC1C,gEACJ;QAAA,4DAAO;QACX,4DAAM;QACN,uEAAK;QACD,8EAEiC;QAA7B,iSAAS,WAAkB,IAAC;QAC5B,yEACJ;QAAA,4DAAS;QACT,iFACmC;QADT,yJAAU,wBAAoB,IAAC;QAAzD,4DACmC;QACvC,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,uEAAK;QACD,4EAAU;QACN,4IAcgB;QACpB,4DAAW;QACf,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,yHAsBM;QACN,yHAkEM;QACV,4DAAW;QACf,4DAAU;QACd,4DAAgB;;QAtdD,wFAAwB;QAyBS,2DAAwD;QAAxD,uHAAwD;QAWhD,0DAAwD;QAAxD,wHAAwD;QAwBlF,0DAAuE;QAAvE,yIAAuE;QA6BvE,0DAAuE;QAAvE,yIAAuE;QA4GrD,2DAA0D;QAA1D,yHAA0D;QAWlD,0DAA0D;QAA1D,0HAA0D;QAwBpF,0DAA2E;QAA3E,6IAA2E;QAwB3E,0DAA2E;QAA3E,6IAA2E;QAwFzD,2DAA0D;QAA1D,yHAA0D;QAWlD,0DAA0D;QAA1D,0HAA0D;QAuBpF,0DAA2E;QAA3E,6IAA2E;QAuB3E,0DAA2E;QAA3E,6IAA2E;;;;;;;;;;;;;;ACjZ5F;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mBAAmB,aAAa,GAAG;AAC5E;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf,WAAW,MAAM;AACjB;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;AC/LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACyB;AACX;AAEqC;AACT;AACH;;;AAE9F,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAA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","file":"views-alloy-scrap-alloy-scrap-module.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { Router } from '@angular/router';\r\nimport { historyData } from '../alloy-scrap-interface.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-history-alloy-scrap',\r\n  templateUrl: './history-alloy-scrap.component.html',\r\n  styleUrls: ['./history-alloy-scrap.component.scss']\r\n})\r\nexport class HistoryAlloyScrapComponent implements OnInit {\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = ['Batch_ID', 'filename', 'username', 'condition_type', 'date_time', \"action\"];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 10;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  filterValue: any='';\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getHistory()\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getHistory() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.apiMethod.get_request_header(this.apiString.alloy_scrap_history + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<historyData>(resultData.data)\r\n      setTimeout(() => {\r\n        if (this.filterValue) {\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n        this.dataSource.sort = this.sort;\r\n\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getHistory()\r\n  }\r\n  //filter \r\n  applyFilter(filterValue: any) {\r\n    console.log(filterValue.trim().toLowerCase())\r\n    this.filterValue = filterValue\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getHistory()\r\n  }\r\n  viewDetails(rowData: any) {\r\n    console.log(rowData)\r\n    let string = (rowData.filename + \"&\" + rowData.condition_type + \"&\" + rowData.Batch_ID)\r\n    console.log(string)\r\n    var encodedString = btoa(string);\r\n    console.log(string, encodedString)\r\n    this.router.navigate(['/alloy-scrap/history/fileDetails/' + encodedString])\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <mat-card>\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"text-right mt-10\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Search</mat-label>\r\n                        <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter('search')\">\r\n                        <mat-icon matSuffix (click)=\"applyFilter('search')\" class=\"pointer\">search</mat-icon>\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"my_offer_table_container\">\r\n                    <div class=\"text-center h-100\">\r\n                        <div class=\"table-outer-container offer_table_container position-relative h-100\">\r\n                            <div class=\"table-inner-container h-100\">\r\n                                <table mat-table [dataSource]=\"dataSource\" class=\"custom_table order_table\" >\r\n\r\n\r\n                                    <ng-container matColumnDef=\"Batch_ID\">\r\n                                        <th mat-header-cell *matHeaderCellDef > Batch ID </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.Batch_ID}} </td>\r\n                                    </ng-container>\r\n\r\n\r\n                                    <ng-container matColumnDef=\"filename\">\r\n                                        <th mat-header-cell *matHeaderCellDef >File Name </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.filename}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"username\">\r\n                                        <th mat-header-cell *matHeaderCellDef > User Name </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.username}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"condition_type\">\r\n                                        <th mat-header-cell *matHeaderCellDef > Condition Type </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.condition_type}} </td>\r\n                                    </ng-container>\r\n                                    <ng-container matColumnDef=\"date_time\">\r\n                                        <th mat-header-cell *matHeaderCellDef > Date </th>\r\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.date_time}} </td>\r\n                                    </ng-container>\r\n\r\n                                    <ng-container matColumnDef=\"action\">\r\n                                        <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                                        <td mat-cell *matCellDef=\"let row\" >\r\n                                            <mat-icon (click)=\"viewDetails(row)\">visibility</mat-icon>\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n                                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                    <tr class=\"mat-row\" *matNoDataRow>\r\n                                        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{searchValue}}\"\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                                <mat-paginator [length]=\"totalCount\" [pageSize]=\"10\" [pageSizeOptions]=\"[10,25,50,100,150,200]\" #paginators\r\n                                (page)=\"pageEvent = pageChangeCall($event)\">\r\n                            </mat-paginator>\r\n                               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-alloy-scrap',\r\n  templateUrl: './alloy-scrap.component.html',\r\n  styleUrls: ['./alloy-scrap.component.scss']\r\n})\r\nexport class AlloyScrapComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport * as _ from 'lodash';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { billetData, wireData, scrapData } from '../alloy-scrap-interface.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ValidatePopupComponent } from './validate-popup/validate-popup.component';\r\n\r\nimport { ngxCsv } from 'ngx-csv/ngx-csv';\r\n\r\n\r\n@Component({\r\n  selector: 'app-upload-alloy-scrap',\r\n  templateUrl: './upload-alloy-scrap.component.html',\r\n  styleUrls: ['./upload-alloy-scrap.component.scss']\r\n})\r\nexport class UploadAlloyScrapComponent implements OnInit {\r\n  loading: boolean = false\r\n  displayedColumns_wire: string[] = ['VKORG', 'COND_TYPE', 'DST_CH', 'DIV', 'Month_year', 'Amount', 'Customer_ID', 'Internal_Grade','OFFER_ALLOY','OFFER_EFF_PR','OFFER_ALLOY_NUMBER','OFFER_EFF_PR_NUMBER'];\r\n  displayedColumns_billet: string[] = ['VKORG', 'COND_TYPE', 'DST_CH', 'DIV', 'Month_year', 'Amount', 'WARENEMPFAENGER_NR', 'SEL_NR_MELDUNG', 'dRUCKSPERRE'];\r\n  displayedColumns_scrap: string[] = [\r\n    'VKORG',\r\n    'COND_TYPE',\r\n    'DST_CH',\r\n    'DIV',\r\n    'Month_year',\r\n    'Model',\r\n    'Amount',\r\n    \"Monthly_Deviation\",\r\n    \"Product\"]\r\n\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  tab: any;\r\n  table_data: any;\r\n  data: any = { \"inputaction\": '' };\r\n  alloy_surcharge_billet: any;\r\n  alloy_surcharge_wire: any;\r\n  scrap_surcharge_billet: any;\r\n  selectedFiles: any = {\r\n    \"alloy_surcharge_billet\": { file: '', uploadCompleted: false },\r\n    \"alloy_surcharge_wire\": { file: '', uploadCompleted: false },\r\n    \"scrap_surcharge_billet\": { file: '', uploadCompleted: false }\r\n  };\r\n  loadingRouteConfig: boolean = false\r\n  fileEv: any;\r\n  SelectedTab: any;\r\n  alloy_surcharge_billet_data: any;\r\n  scrap_surcharge_billet_data: any;\r\n  alloy_surcharge_wire_data: any;\r\n  validationResult:any =false;\r\n\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private _snackBar: MatSnackBar,\r\n    private popup: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.data = { \"inputaction\": '' }\r\n    this.myTaksTabChange(\"Alloy Surcharge Wire\")\r\n  }\r\n\r\n\r\n  //tab change event \r\n  myTaksTabChange(tabLable: any) {\r\n    if (tabLable === 'Alloy Surcharge Wire') {\r\n      this.SelectedTab = \"alloy_surcharge_wire\"\r\n      console.log(this.SelectedTab)\r\n    } else if (tabLable === 'Alloy Surcharge Billet') {\r\n      console.log(tabLable)\r\n      this.SelectedTab = \"alloy_surcharge_billet\"\r\n\r\n    } else {\r\n      console.log(tabLable)\r\n      this.SelectedTab = \"scrap_surcharge_billet\"\r\n    }\r\n  }\r\n  // ==================== file change event ========================\r\n  dropFiles(ev: any): any {\r\n\r\n    ev.preventDefault();\r\n    this.fileEv = ev\r\n    let data: any = ev.dataTransfer.items[0]\r\n    console.log(data)\r\n    if (data) {\r\n      console.log(\"coming inside\")\r\n      // If dropped items aren't files, reject them\r\n      const allowed_types = [\r\n        'application/vnd.ms-excel',\r\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];\r\n\r\n      if (!_.includes(allowed_types, data.type)) {\r\n        let imageError: any = 'Only xlsx are allowed.';\r\n        this._snackBar.open(imageError, \"\", {\r\n          duration: 4000,\r\n          panelClass: ['error'],\r\n          horizontalPosition: 'end',\r\n          verticalPosition: 'bottom',\r\n        });\r\n        return false;\r\n      }\r\n      let obj: any\r\n      if (data.kind === 'file') {\r\n        let file = data.getAsFile();\r\n        obj = {\r\n          fileName: file.name,\r\n          selectedFile: file,\r\n        }\r\n      }\r\n      if (this.SelectedTab === \"alloy_surcharge_billet\") {\r\n        this.selectedFiles.alloy_surcharge_billet = {\r\n          file: obj,\r\n          uploadCompleted: true\r\n        }\r\n      } else if (this.SelectedTab === \"alloy_surcharge_wire\") {\r\n        this.selectedFiles.alloy_surcharge_wire = {\r\n          file: obj,\r\n          uploadCompleted: true\r\n        }\r\n      } else {\r\n        this.selectedFiles.scrap_surcharge_billet = {\r\n          file: obj,\r\n          uploadCompleted: true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  dragOverHandler(ev: any) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  onSelectFile(event: any) {\r\n    this.fileEv = event\r\n    console.log(event.target.files)\r\n    if (event.target.files && event.target.files[0]) {\r\n      var filesAmount = event.target.files.length;\r\n      for (let i = 0; i < filesAmount; i++) {\r\n        var reader = new FileReader();\r\n        let file: any = event.target.files[i]\r\n        console.log(file)\r\n\r\n        let obj: any = {\r\n          fileName: file.name,\r\n          selectedFile: file\r\n        }\r\n        if (this.SelectedTab === \"alloy_surcharge_billet\") {\r\n          this.selectedFiles.alloy_surcharge_billet = {\r\n            file: obj,\r\n            uploadCompleted: true\r\n          }\r\n        } else if (this.SelectedTab === \"alloy_surcharge_wire\") {\r\n          this.selectedFiles.alloy_surcharge_wire = {\r\n            file: obj,\r\n            uploadCompleted: true\r\n          }\r\n        } else {\r\n          this.selectedFiles.scrap_surcharge_billet = {\r\n            file: obj,\r\n            uploadCompleted: true\r\n          }\r\n        }\r\n        // this.selectedFiles.push(obj);\r\n        reader.onload = (event: any) => {\r\n        }\r\n\r\n        reader.readAsDataURL(event.target.files[i]);\r\n        event.target.value = ''\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteFile(file: any, tabName: any) {\r\n\r\n    if (this.SelectedTab === \"alloy_surcharge_billet\") {\r\n      this.alloy_surcharge_billet = ''\r\n      this.selectedFiles.alloy_surcharge_billet = {\r\n        file: \"\",\r\n        uploadCompleted: false\r\n      }\r\n    } else if (this.SelectedTab === \"alloy_surcharge_wire\") {\r\n      this.alloy_surcharge_wire = ''\r\n      this.selectedFiles.alloy_surcharge_wire = {\r\n        file: \"\",\r\n        uploadCompleted: false\r\n      }\r\n    } else {\r\n      this.scrap_surcharge_billet = ''\r\n      this.selectedFiles.scrap_surcharge_billet = {\r\n        file: \"\",\r\n        uploadCompleted: false\r\n      }\r\n    }\r\n    console.log(this.fileEv, \"FILE EV \")\r\n    // this.fileEv.target.value = \"\";\r\n  }\r\n  uploadFiles(uploadDataTo: any) {\r\n    console.log(uploadDataTo)\r\n    const formData = new FormData();\r\n    let urlString: any\r\n    if (uploadDataTo === \"alloy_surcharge_billet\") {\r\n      formData.append(\"filename\", this.selectedFiles.alloy_surcharge_billet.file.selectedFile)\r\n      urlString = this.apiString.alloy_billet_upload\r\n    } else if (uploadDataTo === \"alloy_surcharge_wire\") {\r\n      formData.append(\"filename\", this.selectedFiles.alloy_surcharge_wire.file.selectedFile)\r\n      urlString = this.apiString.alloy_wire_upload\r\n\r\n    } else {\r\n      formData.append(\"filename\", this.selectedFiles.scrap_surcharge_billet.file.selectedFile)\r\n      urlString = this.apiString.scrap_upload\r\n    }\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.post_request_header(urlString, formData).subscribe((data) => {\r\n      console.log(data)\r\n      let resultData: any = data\r\n      this.loadingRouteConfig = false\r\n      if (uploadDataTo === \"alloy_surcharge_billet\") {\r\n        this.alloy_surcharge_billet_data = resultData\r\n        this.alloy_surcharge_billet = new MatTableDataSource<billetData>(JSON.parse(resultData.data))\r\n\r\n        setTimeout(() => {\r\n          this.alloy_surcharge_billet.paginator = this.paginator;\r\n          this.alloy_surcharge_billet.sort = this.sort;\r\n        }, 3000);\r\n      } else if (uploadDataTo === \"alloy_surcharge_wire\") {\r\n        this.alloy_surcharge_wire_data = resultData\r\n        this.alloy_surcharge_wire = new MatTableDataSource<wireData>(JSON.parse(resultData.data))\r\n        setTimeout(() => {\r\n          this.alloy_surcharge_wire.paginator = this.paginator;\r\n          this.alloy_surcharge_wire.sort = this.sort;\r\n        });\r\n      } else {\r\n        this.scrap_surcharge_billet_data = resultData\r\n        this.scrap_surcharge_billet = new MatTableDataSource<scrapData>(JSON.parse(resultData.data))\r\n        setTimeout(() => {\r\n          this.scrap_surcharge_billet.paginator = this.paginator;\r\n          this.scrap_surcharge_billet.sort = this.sort;\r\n        });\r\n      }\r\n      this.apiMethod.popupMessage('success', 'File data read successfully')\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while reading uploaded file')\r\n    })\r\n  }\r\n\r\n  //==========================end===================================\r\n  //filter \r\n  applyFilter(event: Event, searchFrom: any) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    console.log(filterValue, this.alloy_surcharge_wire,)\r\n    if (searchFrom === \"alloy_surcharge_billet\") {\r\n      this.alloy_surcharge_billet.filter = filterValue.trim().toLowerCase();\r\n      if (this.alloy_surcharge_billet.paginator) {\r\n        this.alloy_surcharge_billet.paginator.firstPage();\r\n      }\r\n    } else if (searchFrom === \"alloy_surcharge_wire\") {\r\n      this.alloy_surcharge_wire.filter = filterValue.trim().toLowerCase();\r\n\r\n      if (this.alloy_surcharge_wire.paginator) {\r\n        this.alloy_surcharge_wire.paginator.firstPage();\r\n      }\r\n    } else {\r\n      this.scrap_surcharge_billet.filter = filterValue.trim().toLowerCase();\r\n\r\n      if (this.scrap_surcharge_billet.paginator) {\r\n        this.scrap_surcharge_billet.paginator.firstPage();\r\n      }\r\n    }\r\n  }\r\n\r\n  //data validate\r\n  validateDataForm(uploadDataTo: any) {\r\n    console.log('validate fornm fucntion')\r\n    let urlString: any\r\n    let data: any\r\n    if (uploadDataTo === \"alloy_surcharge_billet\") {\r\n      urlString = this.apiString.alloy_billet_validate\r\n      data = {\r\n        \"billet\": JSON.parse(this.alloy_surcharge_billet_data.data),\r\n        \"filename\": this.alloy_surcharge_billet_data.filename\r\n      }\r\n    } else if (uploadDataTo === \"alloy_surcharge_wire\") {\r\n      urlString = this.apiString.alloy_wire_validate\r\n      data = {\r\n        \"wire\": JSON.parse(this.alloy_surcharge_wire_data.data),\r\n        \"filename\": this.alloy_surcharge_wire_data.filename\r\n      }\r\n    } else {\r\n      urlString = this.apiString.scrap_validate\r\n      data = {\r\n        \"scrap\": JSON.parse(this.scrap_surcharge_billet_data.data),\r\n        \"filename\": this.scrap_surcharge_billet_data.filename\r\n      }\r\n    }\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.post_request_header(urlString, data).subscribe((result: any) => {\r\n      console.log(\"success\")\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('success', 'File validated successfully')\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while validating uploaded file')\r\n    })\r\n  }\r\n\r\ndownloadFiles(tab:any){\r\n   \r\n    \r\n    if(tab=='alloy_surcharge_billet'){\r\n      var options = { \r\n        headers:this.displayedColumns_billet\r\n         };   \r\n    new ngxCsv(this.alloy_surcharge_billet_data.data, 'alloy_surcharge_billet',options);\r\n   \r\n\r\n    }\r\n    if(tab=='alloy_surcharge_wire'){\r\n      var options = { \r\n        headers:this.displayedColumns_wire\r\n         };   \r\n    new ngxCsv(this.alloy_surcharge_wire_data.data, 'alloy_surcharge_wire',options);\r\n   \r\n\r\n    }\r\n    if(tab=='scrap_surcharge_billet'){\r\n      var options = { \r\n        headers:this.displayedColumns_scrap\r\n         };   \r\n    new ngxCsv(this.scrap_surcharge_billet_data.data, 'scrap_surcharge_billet',options);\r\n   \r\n\r\n    }\r\n    \r\n\r\n\r\n \r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  validatePopup(tabname:any){\r\n      const dialogRef = this.popup.open(ValidatePopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: { \r\n        validationResult:true,\r\n        tabname:tabname\r\n          },\r\n        }\r\n        )\r\n        dialogRef.afterClosed().subscribe(result => {\r\n          \r\nif(result!=null){\r\n            if(result.validationResult==true ){\r\n\r\n             \r\n              \r\n              this.validateDataForm(result.tabname)\r\n              setTimeout(() => {\r\n                window.location.reload()\r\n              }, 2000);\r\n              \r\n            }}\r\n\r\n          console.log(result)\r\n         // this.validateDataForm(')\r\n        });\r\n        console.log('hello sayeesh')\r\n        ;\r\n      \r\n    }\r\n}\r\n\r\n\r\n\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<mat-tab-group (selectedTabChange)=\"myTaksTabChange($event.tab.textLabel)\">\r\n    <mat-tab label=\"Alloy Surcharge Wire\">\r\n        <mat-card>\r\n            <!-- ========================file upload start here==========================  -->\r\n            <div>\r\n                <div class=\"row bg-w\">\r\n                    <div class=\"col-sm-12 col-lg-12 col-md-12 col-xl-12 col-12\">\r\n                        <div class=\"mtb-10\">\r\n                            <div class=\"height-100\">\r\n                                <div id=\"drag_zone\" class=\"file-upload-wrapper\" (drop)=\"dropFiles($event)\"\r\n                                    (dragover)='dragOverHandler($event)'>\r\n                                    <div class=\"pointCenter\">\r\n                                        <div class=\"card-drag\">\r\n                                            <span class=\"header\">\r\n                                                you can drag & drop your file here .. <br>\r\n                                                OR\r\n                                            </span>\r\n                                        </div>\r\n                                        <div>\r\n                                            <button type=\"button\" color=\"primary\" mat-raised-button\r\n                                                [disabled]=\"selectedFiles.alloy_surcharge_wire.file!=''\"\r\n                                                (click)=\"fileInput2.click()\">\r\n                                                Choose file\r\n                                            </button>\r\n                                            <input hidden type='file' (change)=\"onSelectFile($event)\" #fileInput2\r\n                                                id=\"file\" accept=\".xls, .xlsx\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <mat-list>\r\n                                        <mat-list-item *ngIf=\"selectedFiles.alloy_surcharge_wire.uploadCompleted\">\r\n                                            <mat-icon mat-list-icon>note</mat-icon>\r\n                                            <div mat-line>{{selectedFiles.alloy_surcharge_wire.file?.fileName}}</div>\r\n\r\n                                            <div>\r\n                                                <button mat-icon-button color=\"primary\"\r\n                                                    (click)=\"uploadFiles(SelectedTab)\">\r\n                                                    <mat-icon>upload</mat-icon>\r\n                                                </button>\r\n                                                <button mat-icon-button color=\"warn\"\r\n                                                    (click)=\"deleteFile(selectedFiles.alloy_surcharge_wire.file,SelectedTab)\">\r\n                                                    <mat-icon>delete_forever</mat-icon>\r\n                                                </button>\r\n                                            </div>\r\n                                            <mat-divider></mat-divider>\r\n                                        </mat-list-item>\r\n                                    </mat-list>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- ========================file upload end ========================= -->\r\n            <div class=\"row\" *ngIf=\"alloy_surcharge_wire && (selectedFiles.alloy_surcharge_wire.file)\">\r\n                <!-- <div class=\"row\"> -->\r\n                <div class=\"col-6\">\r\n                    <div class=\"text-left mt-10\">\r\n                        <!-- <button type=\"button\" color=\"primary\" mat-raised-button\r\n                            (click)=\"validateDataForm('alloy_surcharge_wire')\" style=\"margin-right:10px\">\r\n                            Validate Alloy Surcharge Wire\r\n                        </button> -->\r\n                        <button mat-raised-button type=\"button\" color=\"primary\"  style=\"margin-right:10px\"\r\n                            (click)=\"validatePopup('alloy_surcharge_wire')\">\r\n                            Validate Alloy Surcharge Wire\r\n                        </button>\r\n                        \r\n                        <button type=\"button\" color=\"primary\" class=\"mr-5\" mat-raised-button (click)=\"downloadFiles('alloy_surcharge_wire')\">\r\n                            <i class=\"fa fa-download\"></i> Download\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                    <div class=\"text-right mt-10\">\r\n                        <mat-form-field appearance=\"outline\">\r\n                            <mat-label>Search</mat-label>\r\n                            <input matInput (keyup)=\"applyFilter($event,SelectedTab)\" #input>\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"alloy_surcharge_wire && (selectedFiles.alloy_surcharge_wire.file)\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"my_offer_table_container\">\r\n                        <div class=\"text-center h-100\">\r\n                            <div class=\"table-outer-container offer_table_container position-relative h-100\">\r\n                                <div class=\"table-inner-container h-100\">\r\n\r\n\r\n                                    <table mat-table [dataSource]=\"alloy_surcharge_wire\"\r\n                                        class=\"custom_table order_table\">\r\n\r\n                                        <ng-container matColumnDef=\"VKORG\">\r\n                                            <th mat-header-cell *matHeaderCellDef > VKORG </th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.VKORG}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"COND_TYPE\">\r\n                                            <th mat-header-cell *matHeaderCellDef > COND TYPE</th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.COND_TYPE}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"DST_CH\">\r\n                                            <th mat-header-cell *matHeaderCellDef > DST CH </th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.DST_CH}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"DIV\">\r\n                                            <th mat-header-cell *matHeaderCellDef > DIV</th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.DIV}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Month_year\">\r\n                                            <th mat-header-cell *matHeaderCellDef > Month year</th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Month_year}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Amount\">\r\n                                            <th mat-header-cell *matHeaderCellDef > Amount</th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Amount }} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Customer_ID\">\r\n                                            <th mat-header-cell *matHeaderCellDef > Customer ID </th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Customer_ID}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Internal_Grade\">\r\n                                            <th mat-header-cell *matHeaderCellDef > Internal Grade </th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Internal_Grade}} </td>\r\n                                        </ng-container>\r\n\r\n                                     \r\n                                        <ng-container matColumnDef=\"OFFER_ALLOY\">\r\n                                            <th mat-header-cell *matHeaderCellDef > OFFER ALLOY </th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.OFFER_ALLOY}} </td>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef=\"OFFER_EFF_PR\">\r\n                                            <th mat-header-cell *matHeaderCellDef > OFFER EFF PR </th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.OFFER_EFF_PR}} </td>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef=\"OFFER_ALLOY_NUMBER\">\r\n                                            <th mat-header-cell *matHeaderCellDef > OFFER ALLOY NUMBER</th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.OFFER_ALLOY_NUMBER}} </td>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef=\"OFFER_EFF_PR_NUMBER\">\r\n                                            <th mat-header-cell *matHeaderCellDef > OFFER EFF PR NUMBER </th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.OFFER_EFF_PR_NUMBER}} </td>\r\n                                        </ng-container>\r\n\r\n\r\n\r\n                                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns_wire\"></tr>\r\n                                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns_wire;\"></tr>\r\n\r\n                                    </table>\r\n                                    <mat-paginator [pageSizeOptions]=\"[10, 30, 50, 100]\"\r\n                                        aria-label=\"Select page of users\"></mat-paginator>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </mat-card>\r\n    </mat-tab>\r\n\r\n    <!-- ************************************************************************************************************** -->\r\n\r\n    <mat-tab label=\"Alloy Surcharge Billet\">\r\n        <mat-card>\r\n            <!-- ========================file upload start here==========================  -->\r\n            <div>\r\n                <div class=\"row bg-w\">\r\n                    <div class=\"col-sm-12 col-lg-12 col-md-12 col-xl-12 col-12\">\r\n                        <div class=\"mtb-10\">\r\n                            <div class=\"height-100\">\r\n                                <div id=\"drag_zone\" class=\"file-upload-wrapper\" (drop)=\"dropFiles($event)\"\r\n                                    (dragover)='dragOverHandler($event)'>\r\n                                    <div class=\"pointCenter\">\r\n                                        <div class=\"card-drag\">\r\n                                            <span class=\"header\">\r\n                                                you can drag & drop your file here .. <br>\r\n                                                OR\r\n                                            </span>\r\n                                        </div>\r\n                                        <div>\r\n                                            <button type=\"button\" color=\"primary\" mat-raised-button\r\n                                                [disabled]=\"selectedFiles.alloy_surcharge_billet.file!=''\"\r\n                                                (click)=\"fileInput2.click()\">\r\n                                                Choose file\r\n                                            </button>\r\n                                            <input hidden type='file' (change)=\"onSelectFile($event)\" #fileInput2\r\n                                                id=\"file\" accept=\".xls, .xlsx\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <mat-list>\r\n                                        <mat-list-item *ngIf=\"selectedFiles.alloy_surcharge_billet.uploadCompleted\">\r\n                                            <mat-icon mat-list-icon>note</mat-icon>\r\n                                            <div mat-line>{{selectedFiles.alloy_surcharge_billet.file?.fileName}}</div>\r\n\r\n                                            <div>\r\n                                                <button mat-icon-button color=\"primary\"\r\n                                                    (click)=\"uploadFiles(SelectedTab)\">\r\n                                                    <mat-icon>upload</mat-icon>\r\n                                                </button>\r\n                                                <button mat-icon-button color=\"warn\"\r\n                                                    (click)=\"deleteFile(selectedFiles.alloy_surcharge_billet.file,SelectedTab)\">\r\n                                                    <mat-icon>delete_forever</mat-icon>\r\n                                                </button>\r\n                                            </div>\r\n                                            <mat-divider></mat-divider>\r\n                                        </mat-list-item>\r\n                                    </mat-list>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- ========================file upload end ========================= -->\r\n            <div class=\"row\" *ngIf=\"alloy_surcharge_billet && (selectedFiles.alloy_surcharge_billet.file)\">\r\n                <div class=\"col-6\">\r\n                    <div class=\"text-left mt-10\">\r\n                        <button type=\"button\" color=\"primary\" style=\"margin-right:10px\"\r\n                         class=\"text-right mt-10\" mat-raised-button\r\n                            (click)=\"validatePopup('alloy_surcharge_billet')\">\r\n                            Validate Alloy Surcharge Billet\r\n                        </button>\r\n                        <button type=\"button\" color=\"primary\" class=\"mr-5\" mat-raised-button (click)=\"downloadFiles('alloy_surcharge_billet')\">\r\n                            <i class=\"fa fa-download\"></i> Download\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                    <div class=\"text-right mt-10\">\r\n                        <mat-form-field appearance=\"outline\">\r\n                            <mat-label>Search</mat-label>\r\n                            <input matInput (keyup)=\"applyFilter($event,SelectedTab)\" #input>\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"alloy_surcharge_billet && (selectedFiles.alloy_surcharge_billet.file)\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"my_offer_table_container\">\r\n                        <div class=\"text-center h-100\">\r\n                            <div class=\"table-outer-container offer_table_container position-relative h-100\">\r\n                                <div class=\"table-inner-container h-100\">\r\n                                    <table mat-table [dataSource]=\"alloy_surcharge_billet\"\r\n                                        class=\"custom_table order_table\">\r\n\r\n                                        <ng-container matColumnDef=\"VKORG\">\r\n                                            <th mat-header-cell *matHeaderCellDef> VKORG</th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.VKORG}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"COND_TYPE\">\r\n                                            <th mat-header-cell *matHeaderCellDef> COND TYPE</th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.COND_TYPE}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"DST_CH\">\r\n                                            <th mat-header-cell *matHeaderCellDef> DST CH </th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.DST_CH}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"DIV\">\r\n                                            <th mat-header-cell *matHeaderCellDef> DIV </th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.DIV}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Month_year\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Month year</th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Month_year}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Amount\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Amount</th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Amount }} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"WARENEMPFAENGER_NR\">\r\n                                            <th mat-header-cell *matHeaderCellDef> WARENEMPFAENGER NR</th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.WARENEMPFAENGER_NR }}\r\n                                            </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"SEL_NR_MELDUNG\">\r\n                                            <th mat-header-cell *matHeaderCellDef> SEL_NR MELDUNG</th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.SEL_NR_MELDUNG }} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"dRUCKSPERRE\">\r\n                                            <th mat-header-cell *matHeaderCellDef> DRUCKSPERRE</th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.dRUCKSPERRE }} </td>\r\n                                        </ng-container>\r\n\r\n                                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns_billet\"></tr>\r\n                                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns_billet;\"></tr>\r\n                                    </table>\r\n                                    <mat-paginator [pageSizeOptions]=\"[10, 30, 50, 100]\"\r\n                                        aria-label=\"Select page of users\"></mat-paginator>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </mat-card>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Scrap Surcharge Billet\">\r\n        <mat-card>\r\n            <!-- ========================file upload start here==========================  -->\r\n            <div>\r\n                <div class=\"row bg-w\">\r\n                    <div class=\"col-sm-12 col-lg-12 col-md-12 col-xl-12 col-12\">\r\n                        <div class=\"mtb-10\">\r\n                            <div class=\"height-100\">\r\n                                <div id=\"drag_zone\" class=\"file-upload-wrapper\" (drop)=\"dropFiles($event)\"\r\n                                    (dragover)='dragOverHandler($event)'>\r\n                                    <div class=\"pointCenter\">\r\n                                        <div class=\"card-drag\">\r\n                                            <span class=\"header\">\r\n                                                you can drag & drop your file here .. <br>\r\n                                                OR\r\n                                            </span>\r\n                                        </div>\r\n                                        <div>\r\n                                            <button type=\"button\" color=\"primary\" mat-raised-button\r\n                                                [disabled]=\"selectedFiles.scrap_surcharge_billet.file!=''\"\r\n                                                (click)=\"fileInput2.click()\">\r\n                                                Choose file\r\n                                            </button>\r\n                                            <input hidden type='file' (change)=\"onSelectFile($event)\" #fileInput2\r\n                                                id=\"file\" accept=\".xls, .xlsx\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <mat-list>\r\n                                        <mat-list-item *ngIf=\"selectedFiles.scrap_surcharge_billet.uploadCompleted\">\r\n                                            <mat-icon mat-list-icon>note</mat-icon>\r\n                                            <div mat-line>{{selectedFiles.scrap_surcharge_billet.file?.fileName}}</div>\r\n                                            <div>\r\n                                                <button mat-icon-button color=\"primary\"\r\n                                                    (click)=\"uploadFiles(SelectedTab)\">\r\n                                                    <mat-icon>upload</mat-icon>\r\n                                                </button>\r\n                                                <button mat-icon-button color=\"warn\"\r\n                                                    (click)=\"deleteFile(selectedFiles.scrap_surcharge_billet.file,SelectedTab)\">\r\n                                                    <mat-icon>delete_forever</mat-icon>\r\n                                                </button>\r\n                                            </div>\r\n                                            <mat-divider></mat-divider>\r\n                                        </mat-list-item>\r\n                                    </mat-list>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- ========================file upload end ========================= -->\r\n            <div class=\"row\" *ngIf=\"scrap_surcharge_billet && (selectedFiles.scrap_surcharge_billet.file)\">\r\n                <div class=\"col-6 \">\r\n                    <div class=\"text-left mt-10\">\r\n                        <button type=\"button\" color=\"primary\" style=\"margin-right:10px\" mat-raised-button\r\n                            (click)=\"validatePopup('scrap_surcharge_billet')\">\r\n                            Validate Scrap Surcharge Billet\r\n                        </button>\r\n                        <button type=\"button\" color=\"primary\" class=\"mr-5\" mat-raised-button (click)=\"downloadFiles('scrap_surcharge_billet')\">\r\n                            <i class=\"fa fa-download\"></i> Download\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                    <div class=\"text-right mt-10\">\r\n                        <mat-form-field appearance=\"outline\">\r\n                            <mat-label>Search</mat-label>\r\n                            <input matInput (keyup)=\"applyFilter($event,SelectedTab)\" #input>\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"scrap_surcharge_billet && (selectedFiles.scrap_surcharge_billet.file)\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"my_offer_table_container\">\r\n                        <div class=\"text-center h-100\">\r\n                            <div class=\"table-outer-container offer_table_container position-relative h-100\">\r\n                                <div class=\"table-inner-container h-100\">\r\n                                    <table mat-table [dataSource]=\"scrap_surcharge_billet\"\r\n                                        class=\"custom_table order_table\">\r\n\r\n                                        <ng-container matColumnDef=\"VKORG\">\r\n                                            <th mat-header-cell *matHeaderCellDef> VKORG </th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.VKORG}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"COND_TYPE\">\r\n                                            <th mat-header-cell *matHeaderCellDef> COND TYPE </th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.COND_TYPE}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"DST_CH\">\r\n                                            <th mat-header-cell *matHeaderCellDef> DST CH</th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.DST_CH}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"DIV\">\r\n                                            <th mat-header-cell *matHeaderCellDef> DIV</th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.DIV}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Month_year\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Month year</th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Month_year}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Model\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Model</th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Model}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Monthly_Deviation\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Monthly Deviation</th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Monthly_Deviation }}\r\n                                            </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Product\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Product</th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Product }} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"Amount\">\r\n                                            <th mat-header-cell *matHeaderCellDef> Amount</th>\r\n                                            <td mat-cell *matCellDef=\"let element\"> {{element?.Amount }} </td>\r\n                                        </ng-container>\r\n\r\n                                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns_scrap\"></tr>\r\n                                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns_scrap;\"></tr>\r\n                                    </table>\r\n                                    <mat-paginator [pageSizeOptions]=\"[10, 30, 50, 100]\"\r\n                                        aria-label=\"Select page of users\"></mat-paginator>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </mat-card>\r\n    </mat-tab>\r\n</mat-tab-group>","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar CsvConfigConsts = (function () {\r\n    function CsvConfigConsts() {\r\n    }\r\n    CsvConfigConsts.EOL = \"\\r\\n\";\r\n    CsvConfigConsts.BOM = \"\\ufeff\";\r\n    CsvConfigConsts.DEFAULT_FIELD_SEPARATOR = ',';\r\n    CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR = '.';\r\n    CsvConfigConsts.DEFAULT_QUOTE = '\"';\r\n    CsvConfigConsts.DEFAULT_SHOW_TITLE = false;\r\n    CsvConfigConsts.DEFAULT_TITLE = 'My Report';\r\n    CsvConfigConsts.DEFAULT_FILENAME = 'mycsv.csv';\r\n    CsvConfigConsts.DEFAULT_SHOW_LABELS = false;\r\n    CsvConfigConsts.DEFAULT_USE_BOM = true;\r\n    CsvConfigConsts.DEFAULT_HEADER = [];\r\n    CsvConfigConsts.DEFAULT_NO_DOWNLOAD = false;\r\n    CsvConfigConsts.DEFAULT_REMOVE_EMPTY_VALUES = false;\r\n    return CsvConfigConsts;\r\n}());\r\nexports.CsvConfigConsts = CsvConfigConsts;\r\nexports.ConfigDefaults = {\r\n    filename: CsvConfigConsts.DEFAULT_FILENAME,\r\n    fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\r\n    quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\r\n    decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\r\n    showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\r\n    showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\r\n    title: CsvConfigConsts.DEFAULT_TITLE,\r\n    useBom: CsvConfigConsts.DEFAULT_USE_BOM,\r\n    headers: CsvConfigConsts.DEFAULT_HEADER,\r\n    noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\r\n    removeEmptyValues: CsvConfigConsts.DEFAULT_REMOVE_EMPTY_VALUES\r\n};\r\nvar ngxCsv = (function () {\r\n    function ngxCsv(DataJSON, filename, options) {\r\n        this.csv = \"\";\r\n        var config = options || {};\r\n        this.data = typeof DataJSON != 'object' ? JSON.parse(DataJSON) : DataJSON;\r\n        this._options = objectAssign({}, exports.ConfigDefaults, config);\r\n        if (this._options.filename) {\r\n            this._options.filename = filename;\r\n        }\r\n        this.generateCsv();\r\n    }\r\n    /**\r\n     * Generate and Download Csv\r\n     */\r\n    ngxCsv.prototype.generateCsv = function () {\r\n        if (this._options.useBom) {\r\n            this.csv += CsvConfigConsts.BOM;\r\n        }\r\n        if (this._options.showTitle) {\r\n            this.csv += this._options.title + '\\r\\n\\n';\r\n        }\r\n        this.getHeaders();\r\n        this.getBody();\r\n        if (this.csv == '') {\r\n            console.log(\"Invalid data\");\r\n            return;\r\n        }\r\n        if (this._options.noDownload) {\r\n            return this.csv;\r\n        }\r\n        var blob = new Blob([this.csv], { \"type\": \"text/csv;charset=utf8;\" });\r\n        if (navigator.msSaveBlob) {\r\n            var filename = this._options.filename.replace(/ /g, \"_\") + \".csv\";\r\n            navigator.msSaveBlob(blob, filename);\r\n        }\r\n        else {\r\n            var uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\r\n            var link = document.createElement(\"a\");\r\n            link.href = URL.createObjectURL(blob);\r\n            link.setAttribute('visibility', 'hidden');\r\n            link.download = this._options.filename.replace(/ /g, \"_\") + \".csv\";\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        }\r\n    };\r\n    /**\r\n     * Create Headers\r\n     */\r\n    ngxCsv.prototype.getHeaders = function () {\r\n        var _this = this;\r\n        if (this._options.headers.length > 0) {\r\n            var headers = this._options.headers;\r\n            var row = headers.reduce(function (headerRow, header) {\r\n                return headerRow + header + _this._options.fieldSeparator;\r\n            }, '');\r\n            row = row.slice(0, -1);\r\n            this.csv += row + CsvConfigConsts.EOL;\r\n        }\r\n    };\r\n    /**\r\n     * Create Body\r\n     */\r\n    ngxCsv.prototype.getBody = function () {\r\n        for (var i = 0; i < this.data.length; i++) {\r\n            var row = \"\";\r\n            for (var index in this.data[i]) {\r\n                row += this.formartData(this.data[i][index]) + this._options.fieldSeparator;\r\n            }\r\n            row = row.slice(0, -1);\r\n            this.csv += row + CsvConfigConsts.EOL;\r\n        }\r\n    };\r\n    /**\r\n     * Format Data\r\n     * @param {any} data\r\n     */\r\n    ngxCsv.prototype.formartData = function (data) {\r\n        if (this._options.removeEmptyValues && !data) {\r\n            return \"\";\r\n        }\r\n        if (this._options.decimalseparator === 'locale' && ngxCsv.isFloat(data)) {\r\n            return data.toLocaleString();\r\n        }\r\n        if (this._options.decimalseparator !== '.' && ngxCsv.isFloat(data)) {\r\n            return data.toString().replace('.', this._options.decimalseparator);\r\n        }\r\n        if (typeof data === 'string') {\r\n            data = data.replace(/\"/g, '\"\"');\r\n            if (this._options.quoteStrings || data.indexOf(',') > -1 || data.indexOf('\\n') > -1 || data.indexOf('\\r') > -1) {\r\n                data = this._options.quoteStrings + data + this._options.quoteStrings;\r\n            }\r\n            return data;\r\n        }\r\n        if (typeof data === 'boolean') {\r\n            return data ? 'TRUE' : 'FALSE';\r\n        }\r\n        return data;\r\n    };\r\n    /**\r\n     * Get CSV String\r\n     */\r\n    ngxCsv.prototype.getCsv = function () {\r\n        return this.csv;\r\n    };\r\n    /**\r\n     * Check if is Float\r\n     * @param {any} input\r\n     */\r\n    ngxCsv.isFloat = function (input) {\r\n        return +input === input && (!isFinite(input) || Boolean(input % 1));\r\n    };\r\n    return ngxCsv;\r\n}());\r\nexports.ngxCsv = ngxCsv;\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\r\n/**\r\n * Convet to Object\r\n * @param {any} val\r\n */\r\nfunction toObject(val) {\r\n    if (val === null || val === undefined) {\r\n        throw new TypeError('Object.assign cannot be called with null or undefined');\r\n    }\r\n    return Object(val);\r\n}\r\n/**\r\n * Assign data  to new Object\r\n * @param {any}   target\r\n * @param {any[]} ...source\r\n */\r\nfunction objectAssign(target) {\r\n    var source = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        source[_i - 1] = arguments[_i];\r\n    }\r\n    var from;\r\n    var to = toObject(target);\r\n    var symbols;\r\n    for (var s = 1; s < arguments.length; s++) {\r\n        from = Object(arguments[s]);\r\n        for (var key in from) {\r\n            if (hasOwnProperty.call(from, key)) {\r\n                to[key] = from[key];\r\n            }\r\n        }\r\n        if (Object.getOwnPropertySymbols) {\r\n            symbols = Object.getOwnPropertySymbols(from);\r\n            for (var i = 0; i < symbols.length; i++) {\r\n                if (propIsEnumerable.call(from, symbols[i])) {\r\n                    to[symbols[i]] = from[symbols[i]];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return to;\r\n}\r\n//# sourceMappingURL=ngx-csv.js.map","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SidebarComponent } from 'src/app/common-use/sidebar/sidebar.component';\r\nimport { AuthGuardService } from 'src/app/services/authGard.service';\r\nimport { AlloyScrapComponent } from './alloy-scrap.component';\r\nimport { FilesDetailedPreviewComponent } from './files-detailed-preview/files-detailed-preview.component';\r\nimport { HistoryAlloyScrapComponent } from './history-alloy-scrap/history-alloy-scrap.component';\r\nimport { UploadAlloyScrapComponent } from './upload-alloy-scrap/upload-alloy-scrap.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SidebarComponent,\r\n    children: [\r\n      {\r\n        path: 'upload',\r\n        component: UploadAlloyScrapComponent,\r\n        canActivate: [AuthGuardService]\r\n      },\r\n      {\r\n        path: 'history',\r\n        children: [\r\n          {\r\n            path: '',\r\n            component: HistoryAlloyScrapComponent,\r\n            canActivate: [AuthGuardService]\r\n          },\r\n          {\r\n            path: \"fileDetails/:fileDetails\",\r\n            component: FilesDetailedPreviewComponent,\r\n            canActivate: [AuthGuardService]\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AlloyScrapRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AlloyScrapRoutingModule } from './alloy-scrap-routing.module';\r\nimport { AlloyScrapComponent } from './alloy-scrap.component';\r\nimport { UploadAlloyScrapComponent } from './upload-alloy-scrap/upload-alloy-scrap.component';\r\nimport { HistoryAlloyScrapComponent } from './history-alloy-scrap/history-alloy-scrap.component';\r\nimport { MaterialsModule } from 'src/app/materials/materials.module';\r\nimport { FilesDetailedPreviewComponent } from './files-detailed-preview/files-detailed-preview.component';\nimport { ValidatePopupComponent } from './upload-alloy-scrap/validate-popup/validate-popup.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AlloyScrapComponent,\r\n    UploadAlloyScrapComponent,\r\n    HistoryAlloyScrapComponent,\r\n    FilesDetailedPreviewComponent,\r\n    ValidatePopupComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AlloyScrapRoutingModule,\r\n    MaterialsModule\r\n\r\n  ]\r\n})\r\nexport class AlloyScrapModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { Location } from \"@angular/common\";\r\nimport { wireData, billetData, scrapData } from '../alloy-scrap-interface.service';\r\n\r\n@Component({\r\n  selector: 'app-files-detailed-preview',\r\n  templateUrl: './files-detailed-preview.component.html',\r\n  styleUrls: ['./files-detailed-preview.component.scss']\r\n})\r\nexport class FilesDetailedPreviewComponent implements OnInit {\r\n  fileDetails: any;\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns_wire: string[] = ['VKORG', 'COND_TYPE', 'DST_CH', 'DIV', 'Month_year', 'Amount', 'Customer_ID', 'Internal_Grade'];\r\n  displayedColumns_billet: string[] = ['VKORG', 'COND_TYPE', 'DST_CH', 'DIV', 'Month_year', 'Amount', 'WARENEMPFAENGER_NR', 'Materialnr', 'dRUCKSPERRE'];\r\n  displayedColumns_scrap: string[] = [\r\n    'VKORG',\r\n    'COND_TYPE',\r\n    'DST_CH',\r\n    'DIV',\r\n    'Month_year',\r\n    'Model',\r\n    'Amount',\r\n    \"Monthly_Deviation\",\r\n    \"Product\"]\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  alloy_surcharge_billet: any;\r\n  alloy_surcharge_wire: any;\r\n  scrap_surcharge_billet: any;\r\n  constructor(\r\n    private Route: ActivatedRoute,\r\n    private router: Router,\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private location: Location\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.Route.paramMap.subscribe(params => {\r\n      this.fileDetails = params.get('fileDetails')\r\n    })\r\n    if (this.fileDetails) {\r\n      console.log(atob(this.fileDetails))\r\n      this.getDetails()\r\n    }\r\n  }\r\n  getDetails() {\r\n    let requiredData = atob(this.fileDetails).split('&')\r\n    let body = {\r\n      filename: requiredData[0],\r\n      condition_type: requiredData[1],\r\n      Batch_ID: requiredData[2]\r\n    }\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.get_request_header_Param(this.apiString.get_history_file_data, body).subscribe(result => {\r\n      console.log(result)\r\n      this.loadingRouteConfig = false\r\n      let resultData: any = result\r\n      let tablename = Object.keys(result)\r\n      console.log(tablename)\r\n      if (tablename[0] === 'table_wire') {\r\n        this.alloy_surcharge_wire = new MatTableDataSource<wireData>((resultData.table_wire))\r\n        setTimeout(() => {\r\n          this.alloy_surcharge_wire.paginator = this.paginator;\r\n          this.alloy_surcharge_wire.sort = this.sort;\r\n        });\r\n\r\n      }\r\n      if (tablename[0] === 'table_billet') {\r\n        this.alloy_surcharge_billet = new MatTableDataSource<billetData>((resultData.table_billet))\r\n        setTimeout(() => {\r\n          this.alloy_surcharge_billet.paginator = this.paginator;\r\n          this.alloy_surcharge_billet.sort = this.sort;\r\n        });\r\n      }\r\n      if (tablename[0] === 'table_scrap') {\r\n        this.scrap_surcharge_billet = new MatTableDataSource<scrapData>((resultData.table_scrap))\r\n        setTimeout(() => {\r\n          this.scrap_surcharge_billet.paginator = this.paginator;\r\n          this.scrap_surcharge_billet.sort = this.sort;\r\n        });\r\n      }\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching file details')\r\n    })\r\n  }\r\n  applyFilter(event: Event, searchFrom: any) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    console.log(filterValue, this.alloy_surcharge_wire,)\r\n    if (searchFrom === \"alloy_surcharge_billet\") {\r\n      this.alloy_surcharge_billet.filter = filterValue.trim().toLowerCase();\r\n      if (this.alloy_surcharge_billet.paginator) {\r\n        this.alloy_surcharge_billet.paginator.firstPage();\r\n      }\r\n    }\r\n    if (searchFrom === \"alloy_surcharge_wire\") {\r\n      this.alloy_surcharge_wire.filter = filterValue.trim().toLowerCase();\r\n\r\n      if (this.alloy_surcharge_wire.paginator) {\r\n        this.alloy_surcharge_wire.paginator.firstPage();\r\n      }\r\n    }\r\n    if (searchFrom === \"scrap_surcharge_billet\") {\r\n      this.scrap_surcharge_billet.filter = filterValue.trim().toLowerCase();\r\n\r\n      if (this.scrap_surcharge_billet.paginator) {\r\n        this.scrap_surcharge_billet.paginator.firstPage();\r\n      }\r\n    }\r\n  }\r\n  back() {\r\n    this.location.back()\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<mat-card>\r\n    <!-- ========================alloy_surcharge_wire ========================= -->\r\n    <div class=\"row\" *ngIf=\"alloy_surcharge_wire\">\r\n        <!-- <div class=\"row\"> -->\r\n        <div class=\"col-6\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"back()\">\r\n                    <i class=\"fa fa-arrow-alt-circle-left\"></i>\r\n                    Back\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput (keyup)=\"applyFilter($event,'alloy_surcharge_wire')\" #input>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" *ngIf=\"alloy_surcharge_wire \">\r\n        <div class=\"col-12\">\r\n            <div class=\"my_offer_table_container\">\r\n                <div class=\"text-center h-100\">\r\n                    <div class=\"table-outer-container offer_table_container position-relative h-100\">\r\n                        <div class=\"table-inner-container h-100\">\r\n                            <table mat-table [dataSource]=\"alloy_surcharge_wire\" class=\"custom_table order_table\"\r\n                                >\r\n\r\n                                <ng-container matColumnDef=\"VKORG\">\r\n                                    <th mat-header-cell *matHeaderCellDef > VKORG</th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.VKORG}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"COND_TYPE\">\r\n                                    <th mat-header-cell *matHeaderCellDef > COND_TYPE</th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.COND_TYPE}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"DST_CH\">\r\n                                    <th mat-header-cell *matHeaderCellDef > DST_CH </th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.DST_CH}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"DIV\">\r\n                                    <th mat-header-cell *matHeaderCellDef > DIV</th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.DIV}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"Month_year\">\r\n                                    <th mat-header-cell *matHeaderCellDef > Month_year</th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Month_year}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"Amount\">\r\n                                    <th mat-header-cell *matHeaderCellDef > Amount</th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Amount }} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"Customer_ID\">\r\n                                    <th mat-header-cell *matHeaderCellDef > Customer_ID </th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Customer_ID}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"Internal_Grade\">\r\n                                    <th mat-header-cell *matHeaderCellDef > Internal_Grade </th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Internal_Grade}} </td>\r\n                                </ng-container>\r\n\r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns_wire\"></tr>\r\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns_wire;\"></tr>\r\n\r\n                            </table>\r\n                            <mat-paginator [pageSizeOptions]=\"[10, 30, 50, 100]\" aria-label=\"Select page of users\">\r\n                            </mat-paginator>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- ****************************************** alloy_surcharge_billet******************************************************************** -->\r\n    <div class=\"row\" *ngIf=\"alloy_surcharge_billet\">\r\n        <!-- <div class=\"row\"> -->\r\n        <div class=\"col-6\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"back()\">\r\n                    <i class=\"fa fa-arrow-alt-circle-left\"></i>\r\n                    Back\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput (keyup)=\"applyFilter($event,'alloy_surcharge_billet')\" #input>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" *ngIf=\"alloy_surcharge_billet\">\r\n        <div class=\"col-12\">\r\n            <div class=\"my_offer_table_container\">\r\n                <div class=\"text-center h-100\">\r\n                    <div class=\"table-outer-container offer_table_container position-relative h-100\">\r\n                        <div class=\"table-inner-container h-100\">\r\n                            <table mat-table [dataSource]=\"alloy_surcharge_billet\" class=\"custom_table order_table\">\r\n\r\n                                <ng-container matColumnDef=\"VKORG\">\r\n                                    <th mat-header-cell *matHeaderCellDef> VKORG</th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.VKORG}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"COND_TYPE\">\r\n                                    <th mat-header-cell *matHeaderCellDef> COND_TYPE</th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.COND_TYPE}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"DST_CH\">\r\n                                    <th mat-header-cell *matHeaderCellDef> DST_CH </th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.DST_CH}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"DIV\">\r\n                                    <th mat-header-cell *matHeaderCellDef> DIV </th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.DIV}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"Month_year\">\r\n                                    <th mat-header-cell *matHeaderCellDef> Month_year</th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Month_year}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"Amount\">\r\n                                    <th mat-header-cell *matHeaderCellDef> Amount</th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Amount }} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"WARENEMPFAENGER_NR\">\r\n                                    <th mat-header-cell *matHeaderCellDef> WARENEMPFAENGER_NR</th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.WARENEMPFAENGER_NR }}\r\n                                    </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"Materialnr\">\r\n                                    <th mat-header-cell *matHeaderCellDef> Materialnr</th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Materialnr }} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"dRUCKSPERRE\">\r\n                                    <th mat-header-cell *matHeaderCellDef> DRUCKSPERRE</th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.dRUCKSPERRE }} </td>\r\n                                </ng-container>\r\n\r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns_billet\"></tr>\r\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns_billet;\"></tr>\r\n                            </table>\r\n                            <mat-paginator [pageSizeOptions]=\"[10, 30, 50, 100]\" aria-label=\"Select page of users\">\r\n                            </mat-paginator>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- ***************************************** scrap_surcharge_billet ********************************************************************* -->\r\n    <div class=\"row\" *ngIf=\"scrap_surcharge_billet\">\r\n        <!-- <div class=\"row\"> -->\r\n        <div class=\"col-6\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"back()\">\r\n                    <i class=\"fa fa-arrow-alt-circle-left\"></i>\r\n                    Back\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput (keyup)=\"applyFilter($event,'scrap_surcharge_billet')\" #input>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" *ngIf=\"scrap_surcharge_billet \">\r\n        <div class=\"col-12\">\r\n            <div class=\"my_offer_table_container\">\r\n                <div class=\"text-center h-100\">\r\n                    <div class=\"table-outer-container offer_table_container position-relative h-100\">\r\n                        <div class=\"table-inner-container h-100\">\r\n                            <table mat-table [dataSource]=\"scrap_surcharge_billet\" class=\"custom_table order_table\">\r\n\r\n                                <ng-container matColumnDef=\"VKORG\">\r\n                                    <th mat-header-cell *matHeaderCellDef> VKORG </th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.VKORG}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"COND_TYPE\">\r\n                                    <th mat-header-cell *matHeaderCellDef> COND_TYPE </th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.COND_TYPE}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"DST_CH\">\r\n                                    <th mat-header-cell *matHeaderCellDef> DST_CH</th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.DST_CH}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"DIV\">\r\n                                    <th mat-header-cell *matHeaderCellDef> DIV</th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.DIV}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"Month_year\">\r\n                                    <th mat-header-cell *matHeaderCellDef> Month_year</th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Month_year}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"Model\">\r\n                                    <th mat-header-cell *matHeaderCellDef> Model</th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Model}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"Monthly_Deviation\">\r\n                                    <th mat-header-cell *matHeaderCellDef> Monthly Deviation</th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Monthly_Deviation }}\r\n                                    </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"Product\">\r\n                                    <th mat-header-cell *matHeaderCellDef> Product</th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Product }} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"Amount\">\r\n                                    <th mat-header-cell *matHeaderCellDef> Amount</th>\r\n                                    <td mat-cell *matCellDef=\"let element\"> {{element?.Amount }} </td>\r\n                                </ng-container>\r\n\r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns_scrap\"></tr>\r\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns_scrap;\"></tr>\r\n                            </table>\r\n                            <mat-paginator [pageSizeOptions]=\"[10, 30, 50, 100]\" aria-label=\"Select page of users\">\r\n                            </mat-paginator>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</mat-card>","import { Component, Inject, OnInit, Output } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { EventEmitter } from 'protractor';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-validate-popup',\n  templateUrl: './validate-popup.component.html',\n  styleUrls: ['./validate-popup.component.scss']\n})\nexport class ValidatePopupComponent implements OnInit {\n  loadingRouteConfig: boolean = false\n  url: any;\n  apiStringURL: any;\n \n  constructor(\n    public dialogRef: MatDialogRef<ValidatePopupComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private apiMethod: ApiService,\n\n  ) {\n\n  }\n\n  ngOnInit(): void {\n   // console.log(this.data)\n  }\n  closeModel() {\n   window.location.reload()   \n    this.dialogRef.close() \n    this.apiMethod.popupMessage('error','Not Uploaded')\n  }\n  deleteRecord() {\n    this.loadingRouteConfig = true\n    this.apiMethod.post_request_header(this.data.deleteURL, { id: this.data.id }).subscribe((result) => {\n      this.loadingRouteConfig = false\n      this.dialogRef.close()\n      this.apiMethod.popupMessage('success', 'Reord Sent for Approval')\n    }, error => {\n      this.dialogRef.close()\n      this.loadingRouteConfig = false\n      this.apiMethod.popupMessage('error', 'Error while deleting the record')\n    })\n\n  }\n  upload(){\n    this.apiMethod.popupMessage('success','Record Uploaded Successfully')\n  }\n  \n  \n  SelectedTab:any\n  alloy_surcharge_billet:any\n  selectedFiles:any\n  alloy_surcharge_wire:any\n  scrap_surcharge_billet:any\n  fileEv:any\n  deleteFile(file: any, tabName: any) {\n\n    if (this.SelectedTab === \"alloy_surcharge_billet\") {\n      this.alloy_surcharge_billet = ''\n      this.selectedFiles.alloy_surcharge_billet = {\n        file: \"\",\n        uploadCompleted: false\n      }\n    } else if (this.SelectedTab === \"alloy_surcharge_wire\") {\n      this.alloy_surcharge_wire = ''\n      this.selectedFiles.alloy_surcharge_wire = {\n        file: \"\",\n        uploadCompleted: false\n      }\n    } else {\n      this.scrap_surcharge_billet = ''\n      this.selectedFiles.scrap_surcharge_billet = {\n        file: \"\",\n        uploadCompleted: false\n      }\n    }\n    console.log(this.fileEv, \"FILE EV \")\n    // this.fileEv.target.value = \"\";\n  }\n}\n\n","<ng-container *ngIf=\"loadingRouteConfig\">\n    <div class=\"loading-overlay is-active\">\n        <span class=\"signal\"></span>\n    </div>\n</ng-container>\n<div class=\"pd-card\">\n    <p class=\"text-center\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i></p>\n    <h1>Are you sure?</h1>\n    <p>Do you really want to upload these data? This process cannot be undo.</p>\n    <div class=\" text-right\">\n        <button mat-stroked-button class=\"mr-10\" (click)=\"closeModel()\">\n            Close\n        </button>\n        <button mat-raised-button  color=\"primary\" [mat-dialog-close]=\"data\"  cdkFocusInitial >\n            OK\n        </button>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}