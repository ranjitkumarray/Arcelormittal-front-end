{"version":3,"sources":["./src/app/views/user-management/user/group-user/group-user.component.ts","./src/app/views/user-management/user/group-user/group-user.component.html","./src/app/views/user-management/user/single-user/single-user.component.ts","./src/app/views/user-management/user/single-user/single-user.component.html","./src/app/views/user-management/user-management-routing.module.ts","./src/app/views/user-management/user-management.module.ts","./src/app/views/user-management/user-management.component.ts","./src/app/views/user-management/user-management.component.html"],"names":[],"mappings":"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","file":"views-user-management-user-management-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-group-user',\r\n  templateUrl: './group-user.component.html',\r\n  styleUrls: ['./group-user.component.scss']\r\n})\r\nexport class GroupUserComponent implements OnInit {\r\n  loadingRouteConfig: boolean = false\r\n  isLinear = false;\r\n  groupUserForm: any = FormGroup;\r\n  breadCrumblocationsList: any = []\r\n  menuItem: any;\r\n  subMenuList: any;\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private _formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.updateBreadCrumb()\r\n    this.groupUserForm = this._formBuilder.group({\r\n      group_code: ['GC001', Validators.required],\r\n      group_description: ['', Validators.required],\r\n      menu: ['', Validators.required],\r\n      sub_menu: ['', Validators.required]\r\n    });\r\n    this.getRequiredDetails()\r\n  }\r\n  getRequiredDetails() {\r\n    this.loadingRouteConfig = true\r\n   \r\n    this.apiMethod.get_request_header(this.apiString.userAccess.group_management_data).subscribe((result: any) => {\r\n      console.log(result)\r\n      this.loadingRouteConfig = false\r\n      this.groupUserForm.patchValue({\r\n        group_code: result?.group_id\r\n      })\r\n      this.menuItem = result?.menu_items\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      console.log(error)\r\n    })\r\n  }\r\n  getSubMenu() {\r\n    console.log(this.groupUserForm.value)\r\n    let param: any=''\r\n    if (this.groupUserForm.value.menu.length > 0) {\r\n      let body={\r\n        \"menu_id\":this.groupUserForm.value.menu\r\n      }\r\n     \r\n      //console.log(body)\r\n      this.loadingRouteConfig = true\r\n      this.apiMethod.post_request_header(this.apiString.userAccess.group_management_data ,body).subscribe((result:any) => {\r\n        console.log(result)\r\n        this.loadingRouteConfig = false\r\n        this.subMenuList=result.sub_menu_items\r\n      }, error => {\r\n        console.log(error)\r\n        this.loadingRouteConfig = false\r\n      })\r\n    }\r\n  }\r\n  submit() {\r\n    console.log(\"test\")\r\n    this.loadingRouteConfig = true\r\n    console.log(this.groupUserForm.value)\r\n    this.apiMethod.post_request_header(this.apiString.userAccess.group_management_insert, this.groupUserForm.value).subscribe(result => {\r\n      console.log(result)\r\n      this.apiMethod.popupMessage(\"success\",\"Successfully added User Group\")\r\n      this.loadingRouteConfig = false\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage(\"error\",\"Unable to add the user Group\")\r\n      console.log(error)\r\n    })\r\n  }\r\n  updateBreadCrumb() {\r\n    this.breadCrumblocationsList = [\r\n      {\r\n        'locationName': 'Managment',\r\n        'link': '/user/group-management',\r\n        'currentPage': false\r\n      },\r\n      {\r\n        'locationName': 'User Group',\r\n        'link': '/user/group-management',\r\n        'currentPage': true\r\n      }\r\n    ];\r\n\r\n    window.scrollTo(0, 0);\r\n    console.log(\"breadCrumblocationsList\", this.breadCrumblocationsList);\r\n  }\r\n  redirect(link: any) {\r\n    console.log(link);\r\n    if (link != undefined && link != '') {\r\n      this.router.navigateByUrl(link);\r\n    }\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n\r\n<div *ngIf=\"breadCrumblocationsList\" class=\"breadcrumb\">\r\n    <div class=\"row pd-10 bg-w\">\r\n        <div class=\"col-sm-12 col-lg-12 col-md-12 col-xl-12\">\r\n\r\n            <font *ngFor=\"let data of breadCrumblocationsList\" class=\"addArrow\">\r\n\r\n                <a role=\"button\"\r\n                    [ngClass]=\"{'breadCrumbBlue addArroww': data?.currentPage === true, 'breadCrumb addArroww':data?.currentPage === false }\"\r\n                    (click)=\"redirect(data.link)\">\r\n                    {{data.locationName}}\r\n                </a>\r\n            </font>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-6\">\r\n        <form [formGroup]=\"groupUserForm\">\r\n            <div class=\"row pd-t-b\">\r\n                <div class=\"col-12\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Group Code</mat-label>\r\n                        <input matInput placeholder=\"Group Code\" formControlName=\"group_code\" required readonly>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Group Description</mat-label>\r\n                        <input matInput placeholder=\"Group Description\" formControlName=\"group_description\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-12 pd-t-b\">\r\n                    <mat-label>Group Access</mat-label>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Menu</mat-label>\r\n                        <mat-select formControlName=\"menu\" required multiple (selectionChange)=\"getSubMenu()\">\r\n                            <mat-option *ngFor='let menu of menuItem' [value]=\"menu?.menuid\">{{menu?.menudescription}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Sub -Menu</mat-label>\r\n                        <mat-select formControlName=\"sub_menu\" required multiple>\r\n                            <mat-option *ngFor=\"let subMenu of subMenuList\" [value]=\"subMenu\">\r\n                                {{subMenu?.SubMenuDescription}} </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <div class=\"text-right\">\r\n                        <button  color=\"primary\" mat-raised-button (click)=\"submit()\">\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-single-user',\r\n  templateUrl: './single-user.component.html',\r\n  styleUrls: ['./single-user.component.scss']\r\n})\r\nexport class SingleUserComponent implements OnInit {\r\n  isLinear = false;\r\n  firstFormGroup: any = FormGroup;\r\n  secondFormGroup: any = FormGroup;\r\n  breadCrumblocationsList: any = []\r\n  loadingRouteConfig: boolean = false\r\n  accessList: any;\r\n  stepper: any;\r\n  api:any;\r\n\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private _snackBar: MatSnackBar,\r\n    private _formBuilder: FormBuilder) { }\r\n  ngOnInit() {\r\n    this.updateBreadCrumb()\r\n    let EMAIL_REGEXP = '^[A-Za-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$';\r\n\r\n    this.firstFormGroup = this._formBuilder.group({\r\n      first_name: ['', Validators.required],\r\n      middle_name: [''],\r\n      last_name: ['', Validators.required],\r\n      username: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email, Validators.pattern(EMAIL_REGEXP)]],\r\n      phone_no: ['', Validators.required],\r\n      address: ['', Validators.required],\r\n    });\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      user_group: ['', Validators.required]\r\n    });\r\n    this.firstFormGroup.controls['username'].setErrors({ 'incorrect': false });\r\n    this.getUserAccess()\r\n  }\r\n  getUserAccess() {\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.get_request_header(this.apiString.userAccess.user_access).subscribe((result: any) => {\r\n      this.loadingRouteConfig = false\r\n      console.log(result)\r\n      this.accessList = result.data\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      console.log(error)\r\n    })\r\n  }\r\n  validationCheck(type: any) {\r\n    console.log(type)\r\n    let data: any = ''\r\n    if (type === 'username') {\r\n      this.api = this.apiString.userAccess.user_availability_check\r\n      data = {username : this.firstFormGroup.value.username}\r\n    } else {\r\n      this.api = this.apiString.userAccess.email_availability_check\r\n      data = {email : this.firstFormGroup.value.email}\r\n\r\n    }\r\n    console.log(\"Coming\")\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.get_request_header_Param(this.api, data).subscribe((result: any) => {\r\n      console.log(result)\r\n      this.loadingRouteConfig = false\r\n      if (type === 'username') {\r\n        if (result.status === 'Exist Username') {\r\n          this.firstFormGroup.controls['username'].setErrors({ 'incorrect': true });\r\n          this._snackBar.open(\"Username Already Existing\", \"\", {\r\n            duration: 4000,\r\n            panelClass: ['error'],\r\n            horizontalPosition: 'end',\r\n            verticalPosition: 'bottom',\r\n          });\r\n        } else {\r\n          this.firstFormGroup.controls['username'].setErrors(null);\r\n        }\r\n      }\r\n      if (type === 'email') {\r\n        if (result.status === 'Exist-Email') {\r\n          this.firstFormGroup.controls['email'].setErrors({ 'incorrect': true });\r\n          this._snackBar.open(\"Email Already Existing\", \"\", {\r\n            duration: 4000,\r\n            panelClass: ['error'],\r\n            horizontalPosition: 'end',\r\n            verticalPosition: 'bottom',\r\n          });\r\n        } else {\r\n          this.firstFormGroup.controls['email'].setErrors(null);\r\n        }\r\n      }\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      console.log(error)\r\n    })\r\n    console.log(\"Coming\", this.firstFormGroup)\r\n\r\n    \r\n  }\r\n  submit() {\r\n    console.log(this.firstFormGroup.value, this.secondFormGroup.value)\r\n    let body = {\r\n      \"username\": this.firstFormGroup.value.username,\r\n      \"first_name\": this.firstFormGroup.value.first_name,\r\n      \"middle_name\": this.firstFormGroup.value.middle_name,\r\n      \"last_name\": this.firstFormGroup.value.last_name,\r\n      \"email\": this.firstFormGroup.value.email,\r\n      \"user_group\": this.secondFormGroup.value.user_group,\r\n      \"phone_no\": this.firstFormGroup.value.phone_no,\r\n      \"address\": this.firstFormGroup.value.address\r\n    }\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.post_request_header(this.apiString.userAccess.add_single_user_management, body).subscribe(result => {\r\n      this.loadingRouteConfig = false\r\n      this._snackBar.open(\"Successfully added User Group\", \"\", {\r\n        duration: 4000,\r\n        panelClass: ['success'],\r\n        horizontalPosition: 'end',\r\n        verticalPosition: 'bottom',\r\n      });\r\n      document.getElementById(\"reset\")?.click()\r\n      // this.stepper.reset()\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this._snackBar.open(\"Unable to add the user Group\", \"\", {\r\n        duration: 4000,\r\n        panelClass: ['error'],\r\n        horizontalPosition: 'end',\r\n        verticalPosition: 'bottom',\r\n      });\r\n    })\r\n  }\r\n  updateBreadCrumb() {\r\n    this.breadCrumblocationsList = [\r\n      {\r\n        'locationName': 'Managment',\r\n        'link': '/user/group-management',\r\n        'currentPage': false\r\n      },\r\n      {\r\n        'locationName': 'User',\r\n        'link': '/user/management',\r\n        'currentPage': true\r\n      }\r\n    ];\r\n\r\n    window.scrollTo(0, 0);\r\n    console.log(\"breadCrumblocationsList\", this.breadCrumblocationsList);\r\n  }\r\n  redirect(link: any) {\r\n    console.log(link);\r\n    if (link != undefined && link != '') {\r\n      this.router.navigateByUrl(link);\r\n    }\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n\r\n<div *ngIf=\"breadCrumblocationsList\" class=\"breadcrumb\">\r\n    <div class=\"row pd-10 bg-w\">\r\n        <div class=\"col-sm-12 col-lg-12 col-md-12 col-xl-12\">\r\n\r\n            <font *ngFor=\"let data of breadCrumblocationsList\" class=\"addArrow\">\r\n\r\n                <a role=\"button\"\r\n                    [ngClass]=\"{'breadCrumbBlue addArroww': data?.currentPage === true, 'breadCrumb addArroww':data?.currentPage === false }\"\r\n                    (click)=\"redirect(data.link)\">\r\n                    {{data.locationName}}\r\n                </a>\r\n            </font>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-6\">\r\n        <mat-vertical-stepper fxLayout=\"column\" [linear]=\"true\" #stepper>\r\n            <mat-step [stepControl]=\"firstFormGroup\">\r\n                <form [formGroup]=\"firstFormGroup\">\r\n                    <ng-template matStepLabel>Demographic Details</ng-template>\r\n                    <div class=\"row pd-t-b\">\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>First Name</mat-label>\r\n                                <input matInput placeholder=\"First name\" formControlName=\"first_name\" required>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Middle Name</mat-label>\r\n                                <input matInput placeholder=\"Middle Name\" formControlName=\"middle_name\">\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Last name</mat-label>\r\n                                <input matInput placeholder=\"Last name\" formControlName=\"last_name\" required>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Username</mat-label>\r\n                                <input matInput placeholder=\"Username\" formControlName=\"username\" required\r\n                                    (focusout)=\"validationCheck('username')\">\r\n                                <mat-icon matSuffix *ngIf=\"firstFormGroup?.controls['username']?.errors?.incorrect\"\r\n                                    style=\"color:red\">\r\n                                    circle_o</mat-icon>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Email</mat-label>\r\n                                <input matInput placeholder=\"Email\" formControlName=\"email\" required\r\n                                    (focusout)=\"validationCheck('email')\">\r\n                                <mat-icon matSuffix *ngIf=\"firstFormGroup?.controls['email']?.errors?.incorrect\"\r\n                                    style=\"color:red\">\r\n                                    circle_o</mat-icon>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Phone Number</mat-label>\r\n                                <input matInput placeholder=\"Phone Number\" type=\"text\" formControlName=\"phone_no\"\r\n                                    [minLength]=\"5\" [maxLength]=\"10\"\r\n                                    onkeypress=\"return (event.charCode == 8 || event.charCode == 0) ? null : event.charCode >= 48 && event.charCode <= 57\"\r\n                                    oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"\r\n                                    autocomplete=\"off\" required>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Address</mat-label>\r\n                                <input matInput placeholder=\"Address\" formControlName=\"address\" required>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                        <!-- <div class=\"col-12\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Pin</mat-label>\r\n                                <input matInput placeholder=\"Pin\" formControlName=\"pin\" required>\r\n                            </mat-form-field>\r\n                        </div> -->\r\n\r\n                        <div class=\"col-12\">\r\n                            <div class=\"text-right\">\r\n                                <button type=\"button\" color=\"primary\" [disabled]=\"firstFormGroup.invalid\" mat-raised-button matStepperNext>\r\n                                    Next\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </form>\r\n            </mat-step>\r\n            <mat-step [stepControl]=\"secondFormGroup\">\r\n                <form [formGroup]=\"secondFormGroup\">\r\n                    <ng-template matStepLabel>Access Details</ng-template>\r\n                    <div class=\"row pd-t-b\">\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>User Group</mat-label>\r\n                                <mat-select formControlName=\"user_group\" required>\r\n                                    <mat-option *ngFor=\"let accessUser of accessList\" [value]=\"accessUser.groupid\">\r\n                                        {{accessUser.group_description}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <div class=\"text-right\">\r\n                                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-stroked-button\r\n                                    matStepperPrevious>Back</button>\r\n                                <button type=\"button\" [disabled]=\"secondFormGroup.invalid\" color=\"primary\" mat-raised-button matStepperNext>Next</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </mat-step>\r\n            <mat-step>\r\n                <ng-template matStepLabel>Preview</ng-template>\r\n                <div class=\"row pd-t-b\">\r\n                    <div class=\"col-6 pd-5\">\r\n                        <span class=\"s-bold\">First Name :&nbsp;</span>\r\n                        <span class=\"regular\">{{firstFormGroup?.value?.first_name}}</span>\r\n                    </div>\r\n                    <div class=\"col-6 pd-5\">\r\n                        <span class=\"s-bold\"> Middle Name :&nbsp;</span>\r\n                        <span class=\"regular\">{{firstFormGroup?.value?.middle_name}}</span>\r\n                    </div>\r\n                    <div class=\"col-6 pd-5\">\r\n                        <span class=\"s-bold\">Last Name : &nbsp;</span>\r\n                        <span class=\"regular\">{{firstFormGroup?.value?.last_name}}</span>\r\n                    </div>\r\n                    <div class=\"col-6 pd-5\">\r\n                        <span class=\"s-bold\">Username :&nbsp; </span>\r\n                        <span class=\"regular\">{{firstFormGroup?.value?.username}}</span>\r\n                    </div>\r\n                    <div class=\"col-12 pd-5\">\r\n                        <span class=\"s-bold\">Email : &nbsp;</span>\r\n                        <span class=\"regular\">{{firstFormGroup?.value?.email}}</span>\r\n                    </div>\r\n                    <div class=\"col-6 pd-5\">\r\n                        <span class=\"s-bold\">Phone Number :&nbsp; </span>\r\n                        <span class=\"regular\">{{firstFormGroup?.value?.phone_no}}</span>\r\n                    </div>\r\n                    <div class=\"col-6 pd-5\">\r\n                        <span class=\"s-bold\">User Group :&nbsp; </span>\r\n                        <span class=\"regular\">{{secondFormGroup?.value?.user_group}}</span>\r\n                    </div>\r\n                    <div class=\"col-12 pd-5\">\r\n                        <span class=\"s-bold\">Address : </span>\r\n                        <span class=\"regular\">{{firstFormGroup?.value?.address}}</span>\r\n                    </div>\r\n\r\n                    <div class=\"col-12\">\r\n                        <div class=\"text-right\">\r\n                            <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-stroked-button\r\n                                matStepperPrevious>Back</button>\r\n                            <button type=\"button\" color=\"primary\" class=\"mr-10\" id=\"reset\" mat-stroked-button\r\n                                (click)=\"stepper.reset()\">Reset</button>\r\n                            <button type=\"button\" [disabled]=\"secondFormGroup.invalid\" color=\"primary\" mat-raised-button (click)=\"submit()\">Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </mat-step>\r\n        </mat-vertical-stepper>\r\n\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SidebarComponent } from 'src/app/common-use/sidebar/sidebar.component';\r\nimport { AuthGuardService } from 'src/app/services/authGard.service';\r\nimport { UserManagementComponent } from './user-management.component';\r\nimport { GroupUserComponent } from './user/group-user/group-user.component';\r\nimport { SingleUserComponent } from './user/single-user/single-user.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SidebarComponent,\r\n    children: [\r\n      {\r\n        path: 'management',\r\n        component: SingleUserComponent,\r\n        canActivate: [AuthGuardService]\r\n      },\r\n      {\r\n        path: 'group-management',\r\n        component: GroupUserComponent,\r\n        canActivate: [AuthGuardService]\r\n      }\r\n    ]\r\n  }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserManagementRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UserManagementRoutingModule } from './user-management-routing.module';\r\nimport { UserManagementComponent } from './user-management.component';\r\nimport { SingleUserComponent } from './user/single-user/single-user.component';\r\nimport { GroupUserComponent } from './user/group-user/group-user.component';\r\nimport { MaterialsModule } from 'src/app/materials/materials.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UserManagementComponent,\r\n    SingleUserComponent,\r\n    GroupUserComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    UserManagementRoutingModule,\r\n    MaterialsModule\r\n  ]\r\n})\r\nexport class UserManagementModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  templateUrl: './user-management.component.html',\r\n  styleUrls: ['./user-management.component.scss']\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n"],"sourceRoot":"webpack:///"}